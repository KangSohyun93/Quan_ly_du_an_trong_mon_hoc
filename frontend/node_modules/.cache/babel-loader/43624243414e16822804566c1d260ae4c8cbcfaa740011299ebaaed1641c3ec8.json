{"ast":null,"code":"// ... (previous imports and state declarations remain the same)\n\nconst loadTasks = useCallback(async () => {\n  try {\n    const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\n    const data = await fetchTasks(mode);\n    console.log(`Fetched tasks (mode=${mode}):`, data);\n    const currentDate = new Date('2025-05-12');\n    const mappedTasks = data.filter(task => {\n      console.log(\"Filtering task with sprint_id:\", task.sprint_id, \"against selectedSprintId:\", selectedSprintId);\n      if (!selectedSprintId) return true;\n      return task.sprint_id === selectedSprintId;\n    }).map(task => ({\n      id: task.task_id,\n      title: task.title,\n      date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\n      time: task.due_date ? new Date(task.due_date).toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }) : \"\",\n      tags: [\"SQL\", \"Backend\"],\n      avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\n      comments: task.comment_count || 0,\n      subTasks: task.checklists && task.checklists.length > 0 ? task.checklists.map(checklist => ({\n        id: checklist.checklist_id,\n        text: checklist.item_description,\n        completed: checklist.is_completed\n      })) : [],\n      status: task.status.toLowerCase().replace(\"to-do\", \"to-do\").replace(\"in-progress\", \"in-progress\").replace(\"completed\", \"done\"),\n      overdue: task.due_date && new Date(task.due_date) < currentDate && task.status !== \"Completed\",\n      progress_percentage: task.progress_percentage || 0,\n      assigned_to: task.assigned_to,\n      sprint_id: task.sprint_id,\n      due_date: task.due_date ? new Date(task.due_date) : null\n    })).sort((a, b) => {\n      if (a.status === \"done\" && b.status !== \"done\") return 1;\n      if (b.status === \"done\" && a.status !== \"done\") return -1;\n      if (a.status === \"done\" && b.status === \"done\") {\n        if (!a.due_date && !b.due_date) return 0;\n        if (!a.due_date) return 1;\n        if (!b.due_date) return -1;\n        return a.due_date - b.due_date;\n      }\n      if (!a.due_date && !b.due_date) return 0;\n      if (!a.due_date) return 1;\n      if (!b.due_date) return -1;\n      return a.due_date - b.due_date;\n    });\n    console.log(\"Mapped and sorted tasks:\", mappedTasks);\n    setTasks(mappedTasks);\n    const filtered = filterTasksByUser(mappedTasks, selectedUserId);\n    setFilteredTasks(filtered);\n    updateReportData(filtered);\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n  }\n}, [activeTab, selectedSprintId, selectedUserId]);\nuseEffect(() => {\n  loadProjectsAndSprints();\n}, [loadProjectsAndSprints]);\nuseEffect(() => {\n  loadTasks();\n}, [loadTasks, activeTab, selectedSprintId, selectedUserId]);\n\n// ... (rest of the component remains the same)","map":{"version":3,"names":["loadTasks","useCallback","mode","activeTab","data","fetchTasks","console","log","currentDate","Date","mappedTasks","filter","task","sprint_id","selectedSprintId","map","id","task_id","title","date","due_date","toLocaleDateString","time","toLocaleTimeString","hour","minute","tags","avatar","assigned_to","comments","comment_count","subTasks","checklists","length","checklist","checklist_id","text","item_description","completed","is_completed","status","toLowerCase","replace","overdue","progress_percentage","sort","a","b","setTasks","filtered","filterTasksByUser","selectedUserId","setFilteredTasks","updateReportData","error","useEffect","loadProjectsAndSprints"],"sources":["D:/ITSS_Project/frontend/src/components/task/KanbanView.js"],"sourcesContent":["// ... (previous imports and state declarations remain the same)\r\n\r\n     const loadTasks = useCallback(async () => {\r\n       try {\r\n         const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\r\n         const data = await fetchTasks(mode);\r\n         console.log(`Fetched tasks (mode=${mode}):`, data);\r\n\r\n         const currentDate = new Date('2025-05-12');\r\n\r\n         const mappedTasks = data\r\n           .filter(task => {\r\n             console.log(\"Filtering task with sprint_id:\", task.sprint_id, \"against selectedSprintId:\", selectedSprintId);\r\n             if (!selectedSprintId) return true;\r\n             return task.sprint_id === selectedSprintId;\r\n           })\r\n           .map((task) => ({\r\n             id: task.task_id,\r\n             title: task.title,\r\n             date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\r\n             time: task.due_date\r\n               ? new Date(task.due_date).toLocaleTimeString([], {\r\n                   hour: \"2-digit\",\r\n                   minute: \"2-digit\",\r\n                 })\r\n               : \"\",\r\n             tags: [\"SQL\", \"Backend\"],\r\n             avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\r\n             comments: task.comment_count || 0,\r\n             subTasks: task.checklists && task.checklists.length > 0\r\n               ? task.checklists.map((checklist) => ({\r\n                   id: checklist.checklist_id,\r\n                   text: checklist.item_description,\r\n                   completed: checklist.is_completed,\r\n                 }))\r\n               : [],\r\n             status: task.status\r\n               .toLowerCase()\r\n               .replace(\"to-do\", \"to-do\")\r\n               .replace(\"in-progress\", \"in-progress\")\r\n               .replace(\"completed\", \"done\"),\r\n             overdue:\r\n               task.due_date &&\r\n               new Date(task.due_date) < currentDate &&\r\n               task.status !== \"Completed\",\r\n             progress_percentage: task.progress_percentage || 0,\r\n             assigned_to: task.assigned_to,\r\n             sprint_id: task.sprint_id,\r\n             due_date: task.due_date ? new Date(task.due_date) : null,\r\n           }))\r\n           .sort((a, b) => {\r\n             if (a.status === \"done\" && b.status !== \"done\") return 1;\r\n             if (b.status === \"done\" && a.status !== \"done\") return -1;\r\n             if (a.status === \"done\" && b.status === \"done\") {\r\n               if (!a.due_date && !b.due_date) return 0;\r\n               if (!a.due_date) return 1;\r\n               if (!b.due_date) return -1;\r\n               return a.due_date - b.due_date;\r\n             }\r\n             if (!a.due_date && !b.due_date) return 0;\r\n             if (!a.due_date) return 1;\r\n             if (!b.due_date) return -1;\r\n             return a.due_date - b.due_date;\r\n           });\r\n\r\n         console.log(\"Mapped and sorted tasks:\", mappedTasks);\r\n         setTasks(mappedTasks);\r\n         const filtered = filterTasksByUser(mappedTasks, selectedUserId);\r\n         setFilteredTasks(filtered);\r\n         updateReportData(filtered);\r\n       } catch (error) {\r\n         console.error(\"Error fetching tasks:\", error);\r\n       }\r\n     }, [activeTab, selectedSprintId, selectedUserId]);\r\n\r\n     useEffect(() => {\r\n       loadProjectsAndSprints();\r\n     }, [loadProjectsAndSprints]);\r\n\r\n     useEffect(() => {\r\n       loadTasks();\r\n     }, [loadTasks, activeTab, selectedSprintId, selectedUserId]);\r\n\r\n     // ... (rest of the component remains the same)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}