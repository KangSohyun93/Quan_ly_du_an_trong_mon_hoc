{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITSS_Project\\\\frontend\\\\src\\\\components\\\\task\\\\ProjectManagerKanban.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/task/ProjectManagerKanban.js\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./KanbanView.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchTasks, updateChecklistItem, fetchProjects, fetchSprints } from \"../../services/api-client\";\nimport CreateTask from \"./CreateTask\";\nimport TaskCommentPage from \"./TaskCommentPage\";\nimport TeamHeader from \"../TeamHeader/TeamHeader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProjectManagerKanban = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [reportData, setReportData] = useState([]);\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const [showCreateTask, setShowCreateTask] = useState(false);\n  const [showCommentPage, setShowCommentPage] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [sprints, setSprints] = useState([]);\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"Team task\"); // Default to \"Team task\" for this component\n\n  // Hard-coded user ID and team lead status for testing\n  const currentUserId = 1;\n  const isTeamLead = true;\n\n  // Hard-coded data for TeamHeader (replace with API calls in production)\n  const className = 'Công nghệ phần mềm';\n  const classCode = \"SE2025\";\n  const teamName = \"Nhóm 1\";\n  const projectName = \"Project 1\";\n  const members = [{\n    user_id: 1,\n    username: \"user1\",\n    avatar: \"https://i.pravatar.cc/24?img=1\"\n  }, {\n    user_id: 2,\n    username: \"user2\",\n    avatar: \"https://i.pravatar.cc/24?img=2\"\n  }, {\n    user_id: 3,\n    username: \"user3\",\n    avatar: \"https://i.pravatar.cc/24?img=3\"\n  }, {\n    user_id: 4,\n    username: \"user4\",\n    avatar: \"https://i.pravatar.cc/24?img=4\"\n  }];\n\n  // Fetch projects and sprints\n  const loadProjectsAndSprints = useCallback(async () => {\n    try {\n      const projectData = await fetchProjects();\n      setProjects(projectData);\n      const sprintData = await fetchSprints();\n      setSprints(sprintData);\n      // Set the first sprint as default (or based on some logic)\n      if (sprintData.length > 0) {\n        setSelectedSprintId(sprintData[0].sprint_id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching projects and sprints:\", error);\n    }\n  }, []);\n\n  // Fetch tasks, filtered by selected sprint\n  const loadTasks = useCallback(async () => {\n    if (!selectedSprintId) return; // Wait until a sprint is selected\n    try {\n      const data = await fetchTasks();\n      const filteredTasks = data.filter(task => task.sprint_id === parseInt(selectedSprintId));\n      const mappedTasks = filteredTasks.map(task => ({\n        id: task.task_id,\n        title: task.title,\n        date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\n        time: task.due_date ? new Date(task.due_date).toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }) : \"\",\n        tags: [\"SQL\", \"Backend\"],\n        avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\n        comments: task.comment_count || 0,\n        subTasks: task.checklists && task.checklists.length > 0 ? task.checklists.map(checklist => ({\n          id: checklist.checklist_id,\n          text: checklist.item_description,\n          completed: checklist.is_completed\n        })) : [],\n        status: task.status.toLowerCase().replace(\"to-do\", \"to-do\").replace(\"in-progress\", \"in-progress\").replace(\"completed\", \"done\"),\n        overdue: task.due_date && new Date(task.due_date) < new Date() && task.status !== \"Completed\",\n        progress_percentage: task.progress_percentage || 0,\n        assigned_to: task.assigned_to,\n        sprint_id: task.sprint_id // Keep sprint_id for filtering\n      }));\n      setTasks(mappedTasks);\n      updateReportData(mappedTasks);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  }, [selectedSprintId]);\n  useEffect(() => {\n    loadProjectsAndSprints();\n  }, [loadProjectsAndSprints]);\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n  const updateReportData = updatedTasks => {\n    const counts = {\n      \"to-do\": 0,\n      \"in-progress\": 0,\n      \"done\": 0\n    };\n    updatedTasks.forEach(task => {\n      counts[task.status]++;\n    });\n    setReportData([{\n      id: 1,\n      name: \"To-Do\",\n      status: \"to-do\",\n      count: counts[\"to-do\"]\n    }, {\n      id: 2,\n      name: \"In-progress\",\n      status: \"in-progress\",\n      count: counts[\"in-progress\"]\n    }, {\n      id: 3,\n      name: \"Done\",\n      status: \"done\",\n      count: counts[\"done\"]\n    }]);\n  };\n  const getStatusClass = (status, overdue) => {\n    if (status === \"done\") return \"report-status-completed\";\n    if (overdue) return \"report-status-overdue\";\n    switch (status) {\n      case \"to-do\":\n        return \"report-status-to-do\";\n      case \"in-progress\":\n        return \"report-status-in-progress\";\n      default:\n        return \"\";\n    }\n  };\n  const getCircleClass = status => {\n    switch (status) {\n      case \"to-do\":\n        return \"circle-to-do\";\n      case \"in-progress\":\n        return \"circle-in-progress\";\n      case \"done\":\n        return \"circle-completed\";\n      default:\n        return \"\";\n    }\n  };\n  const toggleSubTask = async (taskId, subTaskId) => {\n    try {\n      const currentTask = tasks.find(task => task.id === taskId);\n      const currentSubTask = currentTask.subTasks.find(sub => sub.id === subTaskId);\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\n      await loadTasks();\n    } catch (error) {\n      console.error(\"Error updating subtask:\", error);\n    }\n  };\n  const handleTaskCreated = () => {\n    loadTasks();\n    setShowCreateTask(false);\n  };\n  const handleCancel = () => {\n    setShowCreateTask(false);\n  };\n  const openCommentPage = taskId => {\n    setShowCommentPage(taskId);\n  };\n  const closeCommentPage = () => {\n    setShowCommentPage(null);\n    loadTasks();\n  };\n  const handleSprintChange = sprint => {\n    setSelectedSprintId(sprint.sprint_id);\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n    // In a real app, you'd navigate to a different component/page\n    console.log(`Tab changed to: ${tab}`);\n  };\n  if (!reportData.length && !selectedSprintId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Kanban board...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(TeamHeader, {\n      className: className,\n      classCode: classCode,\n      teamName: teamName,\n      projectName: projectName,\n      members: members,\n      activeTab: activeTab,\n      sprints: sprints,\n      selectedSprintId: selectedSprintId,\n      onSprintChange: handleSprintChange,\n      onTabChange: handleTabChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-grid\",\n      children: [reportData.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"h3\",\n            children: [group.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count-text\",\n              children: [\"(\", group.count.toString().padStart(2, \"0\"), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-circle ${getCircleClass(group.status)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.status === group.status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `report-card ${getStatusClass(task.status, task.overdue)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"body_1\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: [task.status === \"done\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-label\",\n                  children: \"Completed \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 27\n                }, this), task.date, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-time-space\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 25\n                }, this), (task.status === \"to-do\" || task.status === \"in-progress\") && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-with-clock\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faClock,\n                    className: \"clock-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 31\n                  }, this), task.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 29\n                }, this), task.status === \"done\" && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: task.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress-text\",\n                  children: [\" \", \"- Progress: \", task.progress_percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-tags\",\n            children: task.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `tag ${tag.toLowerCase()}`,\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: task.avatar,\n              alt: \"avatar\",\n              className: \"task-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions body_2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => setOpenTaskId(openTaskId === task.id ? null : task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.subTasks.length, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faClipboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => openCommentPage(task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.comments, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 19\n          }, this), openTaskId === task.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divider active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-subtasks active\",\n              children: task.subTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-subtask-message\",\n                children: \"No subtask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 27\n              }, this) : task.subTasks.map((subTask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subtask\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-count\",\n                    children: [index + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-text\",\n                    children: subTask.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `subtask-status ${subTask.completed ? \"completed\" : \"\"}`,\n                    onClick: e => {\n                      e.stopPropagation();\n                      if (task.assigned_to === currentUserId) {\n                        toggleSubTask(task.id, subTask.id);\n                      }\n                    },\n                    style: {\n                      cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\n                      opacity: task.assigned_to === currentUserId ? 1 : 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: subTask.completed ? fasCheckCircle : farCircle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 31\n                }, this), index !== task.subTasks.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"divider active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 33\n                }, this)]\n              }, subTask.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this)), group.status === \"to-do\" && isTeamLead && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateTask(!showCreateTask),\n            className: \"add-task-btn\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), \" Add Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this)]\n      }, group.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)), showCreateTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(CreateTask, {\n            onTaskCreated: handleTaskCreated,\n            onCancel: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), showCommentPage && /*#__PURE__*/_jsxDEV(TaskCommentPage, {\n        taskId: showCommentPage,\n        onClose: closeCommentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectManagerKanban, \"d8X2RJJUVehDl4pB8qrEzEZ5deo=\");\n_c = ProjectManagerKanban;\nexport default ProjectManagerKanban;\nvar _c;\n$RefreshReg$(_c, \"ProjectManagerKanban\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FontAwesomeIcon","faCheckCircle","fasCheckCircle","faCircle","farCircle","faClipboard","faComment","faClock","faPlus","fetchTasks","updateChecklistItem","fetchProjects","fetchSprints","CreateTask","TaskCommentPage","TeamHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectManagerKanban","_s","tasks","setTasks","reportData","setReportData","openTaskId","setOpenTaskId","showCreateTask","setShowCreateTask","showCommentPage","setShowCommentPage","projects","setProjects","sprints","setSprints","selectedSprintId","setSelectedSprintId","activeTab","setActiveTab","currentUserId","isTeamLead","className","classCode","teamName","projectName","members","user_id","username","avatar","loadProjectsAndSprints","projectData","sprintData","length","sprint_id","error","console","loadTasks","data","filteredTasks","filter","task","parseInt","mappedTasks","map","id","task_id","title","date","due_date","Date","toLocaleDateString","time","toLocaleTimeString","hour","minute","tags","assigned_to","comments","comment_count","subTasks","checklists","checklist","checklist_id","text","item_description","completed","is_completed","status","toLowerCase","replace","overdue","progress_percentage","updateReportData","updatedTasks","counts","forEach","name","count","getStatusClass","getCircleClass","toggleSubTask","taskId","subTaskId","currentTask","find","currentSubTask","sub","handleTaskCreated","handleCancel","openCommentPage","closeCommentPage","handleSprintChange","sprint","handleTabChange","tab","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSprintChange","onTabChange","group","toString","padStart","icon","tag","src","alt","onClick","style","cursor","subTask","index","e","stopPropagation","opacity","onTaskCreated","onCancel","onClose","_c","$RefreshReg$"],"sources":["D:/ITSS_Project/frontend/src/components/task/ProjectManagerKanban.js"],"sourcesContent":["// frontend/src/components/task/ProjectManagerKanban.js\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./KanbanView.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fetchTasks, updateChecklistItem, fetchProjects, fetchSprints } from \"../../services/api-client\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskCommentPage from \"./TaskCommentPage\";\r\nimport TeamHeader from \"../TeamHeader/TeamHeader\";\r\n\r\nexport const ProjectManagerKanban = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [reportData, setReportData] = useState([]);\r\n  const [openTaskId, setOpenTaskId] = useState(null);\r\n  const [showCreateTask, setShowCreateTask] = useState(false);\r\n  const [showCommentPage, setShowCommentPage] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n  const [sprints, setSprints] = useState([]);\r\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(\"Team task\"); // Default to \"Team task\" for this component\r\n\r\n  // Hard-coded user ID and team lead status for testing\r\n  const currentUserId = 1;\r\n  const isTeamLead = true;\r\n\r\n  // Hard-coded data for TeamHeader (replace with API calls in production)\r\n  const className = 'Công nghệ phần mềm';\r\n  const classCode = \"SE2025\";\r\n  const teamName = \"Nhóm 1\";\r\n  const projectName = \"Project 1\";\r\n  const members = [\r\n    { user_id: 1, username: \"user1\", avatar: \"https://i.pravatar.cc/24?img=1\" },\r\n    { user_id: 2, username: \"user2\", avatar: \"https://i.pravatar.cc/24?img=2\" },\r\n    { user_id: 3, username: \"user3\", avatar: \"https://i.pravatar.cc/24?img=3\" },\r\n    { user_id: 4, username: \"user4\", avatar: \"https://i.pravatar.cc/24?img=4\" },\r\n  ];\r\n\r\n  // Fetch projects and sprints\r\n  const loadProjectsAndSprints = useCallback(async () => {\r\n    try {\r\n      const projectData = await fetchProjects();\r\n      setProjects(projectData);\r\n      const sprintData = await fetchSprints();\r\n      setSprints(sprintData);\r\n      // Set the first sprint as default (or based on some logic)\r\n      if (sprintData.length > 0) {\r\n        setSelectedSprintId(sprintData[0].sprint_id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching projects and sprints:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch tasks, filtered by selected sprint\r\n  const loadTasks = useCallback(async () => {\r\n    if (!selectedSprintId) return; // Wait until a sprint is selected\r\n    try {\r\n      const data = await fetchTasks();\r\n      const filteredTasks = data.filter(task => task.sprint_id === parseInt(selectedSprintId));\r\n      const mappedTasks = filteredTasks.map((task) => ({\r\n        id: task.task_id,\r\n        title: task.title,\r\n        date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\r\n        time: task.due_date\r\n          ? new Date(task.due_date).toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })\r\n          : \"\",\r\n        tags: [\"SQL\", \"Backend\"],\r\n        avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\r\n        comments: task.comment_count || 0,\r\n        subTasks: task.checklists && task.checklists.length > 0\r\n          ? task.checklists.map((checklist) => ({\r\n              id: checklist.checklist_id,\r\n              text: checklist.item_description,\r\n              completed: checklist.is_completed,\r\n            }))\r\n          : [],\r\n        status: task.status\r\n          .toLowerCase()\r\n          .replace(\"to-do\", \"to-do\")\r\n          .replace(\"in-progress\", \"in-progress\")\r\n          .replace(\"completed\", \"done\"),\r\n        overdue:\r\n          task.due_date &&\r\n          new Date(task.due_date) < new Date() &&\r\n          task.status !== \"Completed\",\r\n        progress_percentage: task.progress_percentage || 0,\r\n        assigned_to: task.assigned_to,\r\n        sprint_id: task.sprint_id, // Keep sprint_id for filtering\r\n      }));\r\n\r\n      setTasks(mappedTasks);\r\n      updateReportData(mappedTasks);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  }, [selectedSprintId]);\r\n\r\n  useEffect(() => {\r\n    loadProjectsAndSprints();\r\n  }, [loadProjectsAndSprints]);\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, [loadTasks]);\r\n\r\n  const updateReportData = (updatedTasks) => {\r\n    const counts = { \"to-do\": 0, \"in-progress\": 0, \"done\": 0 };\r\n    updatedTasks.forEach((task) => {\r\n      counts[task.status]++;\r\n    });\r\n\r\n    setReportData([\r\n      { id: 1, name: \"To-Do\", status: \"to-do\", count: counts[\"to-do\"] },\r\n      {\r\n        id: 2,\r\n        name: \"In-progress\",\r\n        status: \"in-progress\",\r\n        count: counts[\"in-progress\"],\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Done\",\r\n        status: \"done\",\r\n        count: counts[\"done\"],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const getStatusClass = (status, overdue) => {\r\n    if (status === \"done\") return \"report-status-completed\";\r\n    if (overdue) return \"report-status-overdue\";\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"report-status-to-do\";\r\n      case \"in-progress\":\r\n        return \"report-status-in-progress\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getCircleClass = (status) => {\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"circle-to-do\";\r\n      case \"in-progress\":\r\n        return \"circle-in-progress\";\r\n      case \"done\":\r\n        return \"circle-completed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const toggleSubTask = async (taskId, subTaskId) => {\r\n    try {\r\n      const currentTask = tasks.find((task) => task.id === taskId);\r\n      const currentSubTask = currentTask.subTasks.find((sub) => sub.id === subTaskId);\r\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\r\n      await loadTasks();\r\n    } catch (error) {\r\n      console.error(\"Error updating subtask:\", error);\r\n    }\r\n  };\r\n\r\n  const handleTaskCreated = () => {\r\n    loadTasks();\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const openCommentPage = (taskId) => {\r\n    setShowCommentPage(taskId);\r\n  };\r\n\r\n  const closeCommentPage = () => {\r\n    setShowCommentPage(null);\r\n    loadTasks();\r\n  };\r\n\r\n  const handleSprintChange = (sprint) => {\r\n    setSelectedSprintId(sprint.sprint_id);\r\n  };\r\n\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n    // In a real app, you'd navigate to a different component/page\r\n    console.log(`Tab changed to: ${tab}`);\r\n  };\r\n\r\n  if (!reportData.length && !selectedSprintId) {\r\n    return <div>Loading Kanban board...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      {/* Add TeamHeader at the top */}\r\n      <TeamHeader\r\n        className={className}\r\n        classCode={classCode}\r\n        teamName={teamName}\r\n        projectName={projectName}\r\n        members={members}\r\n        activeTab={activeTab}\r\n        sprints={sprints}\r\n        selectedSprintId={selectedSprintId}\r\n        onSprintChange={handleSprintChange}\r\n        onTabChange={handleTabChange}\r\n      />\r\n\r\n      {/* Kanban Board */}\r\n      <div className=\"report-grid\">\r\n        {reportData.map((group) => (\r\n          <div key={group.id} className=\"status-block\">\r\n            <div className=\"column-header\">\r\n              <h3 className=\"h3\">\r\n                {group.name}{\" \"}\r\n                <span className=\"count-text\">\r\n                  ({group.count.toString().padStart(2, \"0\")})\r\n                </span>\r\n              </h3>\r\n              <span\r\n                className={`status-circle ${getCircleClass(group.status)}`}\r\n              ></span>\r\n            </div>\r\n            {tasks\r\n              .filter((task) => task.status === group.status)\r\n              .map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className={`report-card ${getStatusClass(\r\n                    task.status,\r\n                    task.overdue\r\n                  )}`}\r\n                >\r\n                  <div className=\"report-card-header\">\r\n                    <div className=\"header-left\">\r\n                      <h4 className=\"body_1\">{task.title}</h4>\r\n                      <div className=\"task-meta\">\r\n                        {task.status === \"done\" && (\r\n                          <span className=\"completed-label\">Completed </span>\r\n                        )}\r\n                        {task.date}\r\n                        <span className=\"date-time-space\"></span>\r\n                        {(task.status === \"to-do\" ||\r\n                          task.status === \"in-progress\") &&\r\n                          task.time && (\r\n                            <span className=\"time-with-clock\">\r\n                              <FontAwesomeIcon\r\n                                icon={faClock}\r\n                                className=\"clock-icon\"\r\n                              />\r\n                              {task.time}\r\n                            </span>\r\n                          )}\r\n                        {task.status === \"done\" && task.time && (\r\n                          <span>{task.time}</span>\r\n                        )}\r\n                        <span className=\"progress-text\">\r\n                          {\" \"}\r\n                          - Progress: {task.progress_percentage}%\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"task-tags\">\r\n                    {task.tags.map((tag) => (\r\n                      <span key={tag} className={`tag ${tag.toLowerCase()}`}>\r\n                        {tag}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"task-info\">\r\n                    <img src={task.avatar} alt=\"avatar\" className=\"task-avatar\" />\r\n                    <div className=\"task-actions body_2\">\r\n                      <span\r\n                        className=\"task-action-item\"\r\n                        onClick={() => setOpenTaskId(openTaskId === task.id ? null : task.id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {task.subTasks.length} <FontAwesomeIcon icon={faClipboard} />\r\n                      </span>\r\n                      <span\r\n                        className=\"task-action-item\"\r\n                        onClick={() => openCommentPage(task.id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {task.comments} <FontAwesomeIcon icon={faComment} />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {openTaskId === task.id && (\r\n                    <>\r\n                      <div className=\"divider active\"></div>\r\n                      <div className=\"task-subtasks active\">\r\n                        {task.subTasks.length === 0 ? (\r\n                          <div className=\"no-subtask-message\">No subtask</div>\r\n                        ) : (\r\n                          task.subTasks.map((subTask, index) => (\r\n                            <div key={subTask.id}>\r\n                              <div className=\"subtask\">\r\n                                <span className=\"subtask-icon\">\r\n                                  <span></span>\r\n                                  <div></div>\r\n                                </span>\r\n                                <span className=\"subtask-count\">{index + 1}.</span>\r\n                                <span className=\"subtask-text\">{subTask.text}</span>\r\n                                <span\r\n                                  className={`subtask-status ${\r\n                                    subTask.completed ? \"completed\" : \"\"\r\n                                  }`}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    if (task.assigned_to === currentUserId) {\r\n                                      toggleSubTask(task.id, subTask.id);\r\n                                    }\r\n                                  }}\r\n                                  style={{\r\n                                    cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\r\n                                    opacity: task.assigned_to === currentUserId ? 1 : 0.5,\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon\r\n                                    icon={\r\n                                      subTask.completed ? fasCheckCircle : farCircle\r\n                                    }\r\n                                  />\r\n                                </span>\r\n                              </div>\r\n                              {index !== task.subTasks.length - 1 && (\r\n                                <div className=\"divider active\"></div>\r\n                              )}\r\n                            </div>\r\n                          ))\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            {group.status === \"to-do\" && isTeamLead && (\r\n              <div className=\"add-task-btn-container\">\r\n                <button\r\n                  onClick={() => setShowCreateTask(!showCreateTask)}\r\n                  className=\"add-task-btn\"\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> Add Task\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {showCreateTask && (\r\n          <div className=\"modal-backdrop\">\r\n            <div className=\"modal-content\">\r\n              <CreateTask onTaskCreated={handleTaskCreated} onCancel={handleCancel} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showCommentPage && (\r\n          <TaskCommentPage taskId={showCommentPage} onClose={closeCommentPage} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectManagerKanban;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}