{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITSS_Project\\\\frontend\\\\src\\\\components\\\\task\\\\ProjectManagerKanban.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/task/ProjectManagerKanban.js\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./KanbanView.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchTasks, updateChecklistItem } from \"../../services/api-client\";\nimport CreateTask from \"./CreateTask\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProjectManagerKanban = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [reportData, setReportData] = useState([]);\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const [showCreateTask, setShowCreateTask] = useState(false);\n\n  // Hard-coded user ID and team lead status for testing\n  const currentUserId = 2; // Hard-coded user_id = 1 (team lead for testing)\n  const isTeamLead = false; // Hard-coded as team lead for testing\n  // In production, fetch user role from API or auth context\n\n  // Function to update reportData based on tasks\n  const updateReportData = updatedTasks => {\n    const counts = {\n      \"to-do\": 0,\n      \"in-progress\": 0,\n      \"done\": 0\n    };\n    updatedTasks.forEach(task => {\n      counts[task.status]++;\n    });\n    setReportData([{\n      id: 1,\n      name: \"To-Do\",\n      status: \"to-do\",\n      count: counts[\"to-do\"]\n    }, {\n      id: 2,\n      name: \"In-progress\",\n      status: \"in-progress\",\n      count: counts[\"in-progress\"]\n    }, {\n      id: 3,\n      name: \"Done\",\n      status: \"done\",\n      count: counts[\"done\"]\n    }]);\n  };\n\n  // Fetch tasks from API\n  const loadTasks = useCallback(async () => {\n    try {\n      const data = await fetchTasks();\n      const mappedTasks = data.map(task => ({\n        id: task.task_id,\n        title: task.title,\n        date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\n        time: task.due_date ? new Date(task.due_date).toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }) : \"\",\n        tags: [\"SQL\", \"Backend\"],\n        avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\n        comments: task.comment_count || 0,\n        subTasks: task.checklists && task.checklists.length > 0 ? task.checklists.map(checklist => ({\n          id: checklist.checklist_id,\n          text: checklist.item_description,\n          completed: checklist.is_completed\n        })) : [],\n        status: task.status.toLowerCase().replace(\"to-do\", \"to-do\").replace(\"in-progress\", \"in-progress\").replace(\"completed\", \"done\"),\n        overdue: task.due_date && new Date(task.due_date) < new Date() && task.status !== \"Completed\",\n        progress_percentage: task.progress_percentage || 0,\n        assigned_to: task.assigned_to\n      }));\n      setTasks(mappedTasks);\n      updateReportData(mappedTasks);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n  const getStatusClass = (status, overdue) => {\n    if (status === \"done\") return \"report-status-completed\";\n    if (overdue) return \"report-status-overdue\";\n    switch (status) {\n      case \"to-do\":\n        return \"report-status-to-do\";\n      case \"in-progress\":\n        return \"report-status-in-progress\";\n      default:\n        return \"\";\n    }\n  };\n  const getCircleClass = status => {\n    switch (status) {\n      case \"to-do\":\n        return \"circle-to-do\";\n      case \"in-progress\":\n        return \"circle-in-progress\";\n      case \"done\":\n        return \"circle-completed\";\n      default:\n        return \"\";\n    }\n  };\n  const toggleSubTask = async (taskId, subTaskId) => {\n    try {\n      const currentTask = tasks.find(task => task.id === taskId);\n      const currentSubTask = currentTask.subTasks.find(sub => sub.id === subTaskId);\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\n\n      // Reload tasks to reflect updated status and progress percentage from DB triggers\n      await loadTasks();\n    } catch (error) {\n      console.error(\"Error updating subtask:\", error);\n    }\n  };\n\n  // Callback function to refresh tasks after a new task is created\n  const handleTaskCreated = () => {\n    loadTasks();\n    setShowCreateTask(false);\n  };\n\n  // Callback function to handle cancel action\n  const handleCancel = () => {\n    setShowCreateTask(false);\n  };\n\n  // Add a fallback UI in case reportData is empty\n  if (!reportData.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Kanban board...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-grid\",\n    children: [reportData.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h3\",\n          children: [group.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-text\",\n            children: [\"(\", group.count.toString().padStart(2, \"0\"), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-circle ${getCircleClass(group.status)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), tasks.filter(task => task.status === group.status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `report-card ${getStatusClass(task.status, task.overdue)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"body_1\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-meta\",\n              children: [task.status === \"done\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"completed-label\",\n                children: \"Completed \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 25\n              }, this), task.date, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date-time-space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 23\n              }, this), (task.status === \"to-do\" || task.status === \"in-progress\") && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-with-clock\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faClock,\n                  className: \"clock-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 29\n                }, this), task.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 27\n              }, this), task.status === \"done\" && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-text\",\n                children: [\" \", \"- Progress: \", task.progress_percentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-tags\",\n          children: task.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `tag ${tag.toLowerCase()}`,\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.avatar,\n            alt: \"avatar\",\n            className: \"task-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions body_2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"task-action-item\",\n              onClick: () => setOpenTaskId(openTaskId === task.id ? null : task.id),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [task.subTasks.length, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faClipboard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"task-action-item\",\n              children: [task.comments, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faComment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), openTaskId === task.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-subtasks active\",\n            children: task.subTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-subtask-message\",\n              children: \"No subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this) : task.subTasks.map((subTask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subtask\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"subtask-icon\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"subtask-count\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"subtask-text\",\n                  children: subTask.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `subtask-status ${subTask.completed ? \"completed\" : \"\"}`,\n                  onClick: e => {\n                    e.stopPropagation();\n                    if (task.assigned_to === currentUserId) {\n                      toggleSubTask(task.id, subTask.id);\n                    }\n                  },\n                  style: {\n                    cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\n                    opacity: task.assigned_to === currentUserId ? 1 : 0.5\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: subTask.completed ? fasCheckCircle : farCircle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this), index !== task.subTasks.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"divider active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 31\n              }, this)]\n            }, subTask.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }, this)), group.status === \"to-do\" && isTeamLead && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-task-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateTask(!showCreateTask),\n          className: \"add-task-btn\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), \" Add Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this)]\n    }, group.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)), showCreateTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(CreateTask, {\n          onTaskCreated: handleTaskCreated,\n          onCancel: handleCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectManagerKanban, \"e6rjIz5XE2lgrbcxRN5N0LKq4uk=\");\n_c = ProjectManagerKanban;\nexport default ProjectManagerKanban;\nvar _c;\n$RefreshReg$(_c, \"ProjectManagerKanban\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FontAwesomeIcon","faCheckCircle","fasCheckCircle","faCircle","farCircle","faClipboard","faComment","faClock","faPlus","fetchTasks","updateChecklistItem","CreateTask","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectManagerKanban","_s","tasks","setTasks","reportData","setReportData","openTaskId","setOpenTaskId","showCreateTask","setShowCreateTask","currentUserId","isTeamLead","updateReportData","updatedTasks","counts","forEach","task","status","id","name","count","loadTasks","data","mappedTasks","map","task_id","title","date","due_date","Date","toLocaleDateString","time","toLocaleTimeString","hour","minute","tags","avatar","assigned_to","comments","comment_count","subTasks","checklists","length","checklist","checklist_id","text","item_description","completed","is_completed","toLowerCase","replace","overdue","progress_percentage","error","console","getStatusClass","getCircleClass","toggleSubTask","taskId","subTaskId","currentTask","find","currentSubTask","sub","handleTaskCreated","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","className","group","toString","padStart","filter","icon","tag","src","alt","onClick","style","cursor","subTask","index","e","stopPropagation","opacity","onTaskCreated","onCancel","_c","$RefreshReg$"],"sources":["D:/ITSS_Project/frontend/src/components/task/ProjectManagerKanban.js"],"sourcesContent":["// frontend/src/components/task/ProjectManagerKanban.js\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./KanbanView.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fetchTasks, updateChecklistItem } from \"../../services/api-client\";\r\nimport CreateTask from \"./CreateTask\";\r\n\r\nexport const ProjectManagerKanban = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [reportData, setReportData] = useState([]);\r\n  const [openTaskId, setOpenTaskId] = useState(null);\r\n  const [showCreateTask, setShowCreateTask] = useState(false);\r\n\r\n  // Hard-coded user ID and team lead status for testing\r\n  const currentUserId = 2; // Hard-coded user_id = 1 (team lead for testing)\r\n  const isTeamLead = false; // Hard-coded as team lead for testing\r\n  // In production, fetch user role from API or auth context\r\n\r\n  // Function to update reportData based on tasks\r\n  const updateReportData = (updatedTasks) => {\r\n    const counts = { \"to-do\": 0, \"in-progress\": 0, \"done\": 0 };\r\n    updatedTasks.forEach((task) => {\r\n      counts[task.status]++;\r\n    });\r\n\r\n    setReportData([\r\n      { id: 1, name: \"To-Do\", status: \"to-do\", count: counts[\"to-do\"] },\r\n      {\r\n        id: 2,\r\n        name: \"In-progress\",\r\n        status: \"in-progress\",\r\n        count: counts[\"in-progress\"],\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Done\",\r\n        status: \"done\",\r\n        count: counts[\"done\"],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Fetch tasks from API\r\n  const loadTasks = useCallback(async () => {\r\n    try {\r\n      const data = await fetchTasks();\r\n      const mappedTasks = data.map((task) => ({\r\n        id: task.task_id,\r\n        title: task.title,\r\n        date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\r\n        time: task.due_date\r\n          ? new Date(task.due_date).toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })\r\n          : \"\",\r\n        tags: [\"SQL\", \"Backend\"],\r\n        avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\r\n        comments: task.comment_count || 0,\r\n        subTasks: task.checklists && task.checklists.length > 0\r\n          ? task.checklists.map((checklist) => ({\r\n              id: checklist.checklist_id,\r\n              text: checklist.item_description,\r\n              completed: checklist.is_completed,\r\n            }))\r\n          : [],\r\n        status: task.status\r\n          .toLowerCase()\r\n          .replace(\"to-do\", \"to-do\")\r\n          .replace(\"in-progress\", \"in-progress\")\r\n          .replace(\"completed\", \"done\"),\r\n        overdue:\r\n          task.due_date &&\r\n          new Date(task.due_date) < new Date() &&\r\n          task.status !== \"Completed\",\r\n        progress_percentage: task.progress_percentage || 0,\r\n        assigned_to: task.assigned_to,\r\n      }));\r\n\r\n      setTasks(mappedTasks);\r\n      updateReportData(mappedTasks);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, [loadTasks]);\r\n\r\n  const getStatusClass = (status, overdue) => {\r\n    if (status === \"done\") return \"report-status-completed\";\r\n    if (overdue) return \"report-status-overdue\";\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"report-status-to-do\";\r\n      case \"in-progress\":\r\n        return \"report-status-in-progress\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getCircleClass = (status) => {\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"circle-to-do\";\r\n      case \"in-progress\":\r\n        return \"circle-in-progress\";\r\n      case \"done\":\r\n        return \"circle-completed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const toggleSubTask = async (taskId, subTaskId) => {\r\n    try {\r\n      const currentTask = tasks.find((task) => task.id === taskId);\r\n      const currentSubTask = currentTask.subTasks.find((sub) => sub.id === subTaskId);\r\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\r\n\r\n      // Reload tasks to reflect updated status and progress percentage from DB triggers\r\n      await loadTasks();\r\n    } catch (error) {\r\n      console.error(\"Error updating subtask:\", error);\r\n    }\r\n  };\r\n\r\n  // Callback function to refresh tasks after a new task is created\r\n  const handleTaskCreated = () => {\r\n    loadTasks();\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  // Callback function to handle cancel action\r\n  const handleCancel = () => {\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  // Add a fallback UI in case reportData is empty\r\n  if (!reportData.length) {\r\n    return <div>Loading Kanban board...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"report-grid\">\r\n      {reportData.map((group) => (\r\n        <div key={group.id} className=\"status-block\">\r\n          <div className=\"column-header\">\r\n            <h3 className=\"h3\">\r\n              {group.name}{\" \"}\r\n              <span className=\"count-text\">\r\n                ({group.count.toString().padStart(2, \"0\")})\r\n              </span>\r\n            </h3>\r\n            <span\r\n              className={`status-circle ${getCircleClass(group.status)}`}\r\n            ></span>\r\n          </div>\r\n          {tasks\r\n            .filter((task) => task.status === group.status)\r\n            .map((task) => (\r\n              <div\r\n                key={task.id}\r\n                className={`report-card ${getStatusClass(\r\n                  task.status,\r\n                  task.overdue\r\n                )}`}\r\n              >\r\n                <div className=\"report-card-header\">\r\n                  <div className=\"header-left\">\r\n                    <h4 className=\"body_1\">{task.title}</h4>\r\n                    <div className=\"task-meta\">\r\n                      {task.status === \"done\" && (\r\n                        <span className=\"completed-label\">Completed </span>\r\n                      )}\r\n                      {task.date}\r\n                      <span className=\"date-time-space\"></span>\r\n                      {(task.status === \"to-do\" ||\r\n                        task.status === \"in-progress\") &&\r\n                        task.time && (\r\n                          <span className=\"time-with-clock\">\r\n                            <FontAwesomeIcon\r\n                              icon={faClock}\r\n                              className=\"clock-icon\"\r\n                            />\r\n                            {task.time}\r\n                          </span>\r\n                        )}\r\n                      {task.status === \"done\" && task.time && (\r\n                        <span>{task.time}</span>\r\n                      )}\r\n                      <span className=\"progress-text\">\r\n                        {\" \"}\r\n                        - Progress: {task.progress_percentage}%\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"task-tags\">\r\n                  {task.tags.map((tag) => (\r\n                    <span key={tag} className={`tag ${tag.toLowerCase()}`}>\r\n                      {tag}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n                <div className=\"task-info\">\r\n                  <img src={task.avatar} alt=\"avatar\" className=\"task-avatar\" />\r\n                  <div className=\"task-actions body_2\">\r\n                    <span\r\n                      className=\"task-action-item\"\r\n                      onClick={() => setOpenTaskId(openTaskId === task.id ? null : task.id)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      {task.subTasks.length} <FontAwesomeIcon icon={faClipboard} />\r\n                    </span>\r\n                    <span className=\"task-action-item\">\r\n                      {task.comments} <FontAwesomeIcon icon={faComment} />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                {openTaskId === task.id && (\r\n                  <>\r\n                    <div className=\"divider active\"></div>\r\n                    <div className=\"task-subtasks active\">\r\n                      {task.subTasks.length === 0 ? (\r\n                        <div className=\"no-subtask-message\">No subtask</div>\r\n                      ) : (\r\n                        task.subTasks.map((subTask, index) => (\r\n                          <div key={subTask.id}>\r\n                            <div className=\"subtask\">\r\n                              <span className=\"subtask-icon\">\r\n                                <span></span>\r\n                                <div></div>\r\n                              </span>\r\n                              <span className=\"subtask-count\">{index + 1}.</span>\r\n                              <span className=\"subtask-text\">{subTask.text}</span>\r\n                              <span\r\n                                className={`subtask-status ${\r\n                                  subTask.completed ? \"completed\" : \"\"\r\n                                }`}\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  if (task.assigned_to === currentUserId) {\r\n                                    toggleSubTask(task.id, subTask.id);\r\n                                  }\r\n                                }}\r\n                                style={{\r\n                                  cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\r\n                                  opacity: task.assigned_to === currentUserId ? 1 : 0.5,\r\n                                }}\r\n                              >\r\n                                <FontAwesomeIcon\r\n                                  icon={\r\n                                    subTask.completed ? fasCheckCircle : farCircle\r\n                                  }\r\n                                />\r\n                              </span>\r\n                            </div>\r\n                            {index !== task.subTasks.length - 1 && (\r\n                              <div className=\"divider active\"></div>\r\n                            )}\r\n                          </div>\r\n                        ))\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n          {group.status === \"to-do\" && isTeamLead && (\r\n            <div className=\"add-task-btn-container\">\r\n              <button\r\n                onClick={() => setShowCreateTask(!showCreateTask)}\r\n                className=\"add-task-btn\"\r\n              >\r\n                <FontAwesomeIcon icon={faPlus} /> Add Task\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n      {showCreateTask && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <CreateTask onTaskCreated={handleTaskCreated} onCancel={handleCancel} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectManagerKanban;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}