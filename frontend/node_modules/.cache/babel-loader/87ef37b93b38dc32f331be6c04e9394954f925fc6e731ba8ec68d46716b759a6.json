{"ast":null,"code":"const API_URL = 'http://localhost:5000/api/instructor-groups';\nconst fetchGroupsByInstructorId = async instructorId => {\n  try {\n    const response = await fetch(`${API_URL}?instructor_id=${instructorId}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    if (!Array.isArray(data)) {\n      console.warn('Dữ liệu trả về từ API không phải là mảng:', data);\n      return [];\n    }\n    return data;\n  } catch (error) {\n    console.error('Error in fetchGroupsByInstructorId:', error.message);\n    throw error;\n  }\n};\nconst fetchClassById = async classId => {\n  try {\n    const response = await fetch(`${API_URL}/classes/${classId}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error in fetchClassById:', error.message);\n    throw error;\n  }\n};\nexport { fetchGroupsByInstructorId, fetchClassById };","map":{"version":3,"names":["API_URL","fetchGroupsByInstructorId","instructorId","response","fetch","ok","Error","status","data","json","Array","isArray","console","warn","error","message","fetchClassById","classId"],"sources":["C:/2024.2/Quan_ly_du_an_trong_mon_hoc - Copy/frontend/src/services/instructorGroupService.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api/instructor-groups';\r\n\r\nconst fetchGroupsByInstructorId = async (instructorId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}?instructor_id=${instructorId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    if (!Array.isArray(data)) {\r\n      console.warn('Dữ liệu trả về từ API không phải là mảng:', data);\r\n      return [];\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in fetchGroupsByInstructorId:', error.message);\r\n    throw error;\r\n  }\r\n};\r\nconst fetchClassById = async (classId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/classes/${classId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in fetchClassById:', error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { fetchGroupsByInstructorId, fetchClassById };\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,6CAA6C;AAE7D,MAAMC,yBAAyB,GAAG,MAAOC,YAAY,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,kBAAkBE,YAAY,EAAE,CAAC;IACxE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;MACxBI,OAAO,CAACC,IAAI,CAAC,2CAA2C,EAAEL,IAAI,CAAC;MAC/D,OAAO,EAAE;IACX;IACA,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACC,OAAO,CAAC;IACnE,MAAMD,KAAK;EACb;AACF,CAAC;AACD,MAAME,cAAc,GAAG,MAAOC,OAAO,IAAK;EACxC,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,YAAYiB,OAAO,EAAE,CAAC;IAC7D,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,OAAO,CAAC;IACxD,MAAMD,KAAK;EACb;AACF,CAAC;AAED,SAASb,yBAAyB,EAAEe,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}