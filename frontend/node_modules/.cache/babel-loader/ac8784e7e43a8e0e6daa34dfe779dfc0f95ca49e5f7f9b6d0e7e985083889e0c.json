{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const fetchTasks = async () => {\n  try {\n    const response = await apiClient.get('/tasks');\n    return response.data.map(task => ({\n      id: task.id,\n      title: task.title,\n      date: task.date || '',\n      time: task.time || '',\n      avatar: task.avatar || '',\n      status: task.status.toLowerCase(),\n      // Ensure status matches KanbanView (e.g., 'To-Do' to 'to-do')\n      subTasks: task.subTasks.map(subTask => ({\n        id: subTask.id,\n        text: subTask.text,\n        completed: subTask.completed\n      }))\n    }));\n  } catch (error) {\n    console.error('Failed to fetch tasks:', error);\n    throw error; // Let the component handle the error\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_URL","headers","fetchTasks","response","get","data","map","task","id","title","date","time","avatar","status","toLowerCase","subTasks","subTask","text","completed","error","console"],"sources":["D:/ITSS_Project/frontend/src/services/api-client.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\nexport const fetchTasks = async () => {\r\n  try {\r\n    const response = await apiClient.get('/tasks');\r\n    return response.data.map(task => ({\r\n      id: task.id,\r\n      title: task.title,\r\n      date: task.date || '',\r\n      time: task.time || '',\r\n      avatar: task.avatar || '',\r\n      status: task.status.toLowerCase(), // Ensure status matches KanbanView (e.g., 'To-Do' to 'to-do')\r\n      subTasks: task.subTasks.map(subTask => ({\r\n        id: subTask.id,\r\n        text: subTask.text,\r\n        completed: subTask.completed,\r\n      })),\r\n    }));\r\n  } catch (error) {\r\n    console.error('Failed to fetch tasks:', error);\r\n    throw error; // Let the component handle the error\r\n  }\r\n};\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,SAAS,CAACS,GAAG,CAAC,QAAQ,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;MAChCC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,IAAI,EAAEH,IAAI,CAACG,IAAI,IAAI,EAAE;MACrBC,IAAI,EAAEJ,IAAI,CAACI,IAAI,IAAI,EAAE;MACrBC,MAAM,EAAEL,IAAI,CAACK,MAAM,IAAI,EAAE;MACzBC,MAAM,EAAEN,IAAI,CAACM,MAAM,CAACC,WAAW,CAAC,CAAC;MAAE;MACnCC,QAAQ,EAAER,IAAI,CAACQ,QAAQ,CAACT,GAAG,CAACU,OAAO,KAAK;QACtCR,EAAE,EAAEQ,OAAO,CAACR,EAAE;QACdS,IAAI,EAAED,OAAO,CAACC,IAAI;QAClBC,SAAS,EAAEF,OAAO,CAACE;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,eAAexB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}