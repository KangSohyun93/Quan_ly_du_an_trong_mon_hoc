{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nconst fetchGroupsByUserId = async userId => {\n  try {\n    const response = await fetch(`${API_URL}/groups?user_id=${userId}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    // Kiểm tra nếu dữ liệu không phải là mảng, trả về mảng rỗng\n    if (!Array.isArray(data)) {\n      console.warn('Dữ liệu trả về từ API không phải là mảng:', data);\n      return [];\n    }\n    return data;\n  } catch (error) {\n    console.error('Error in fetchGroupsByUserId:', error.message);\n    throw error;\n  }\n};\nconst fetchProjectByClassId = async (userId, classId) => {\n  try {\n    const response = await fetch(`${API_URL}/groups/by-class?class_id=${classId}&user_id=${userId}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error in fetchProjectByClassId:', error.message);\n    throw error;\n  }\n};\nexport { fetchGroupsByUserId, fetchProjectByClassId };","map":{"version":3,"names":["API_URL","fetchGroupsByUserId","userId","response","fetch","ok","Error","status","data","json","Array","isArray","console","warn","error","message","fetchProjectByClassId","classId"],"sources":["C:/2024.2/Quan_ly_du_an_trong_mon_hoc/frontend/src/services/groupService.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\r\n\r\nconst fetchGroupsByUserId = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/groups?user_id=${userId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    // Kiểm tra nếu dữ liệu không phải là mảng, trả về mảng rỗng\r\n    if (!Array.isArray(data)) {\r\n      console.warn('Dữ liệu trả về từ API không phải là mảng:', data);\r\n      return [];\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in fetchGroupsByUserId:', error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst fetchProjectByClassId = async (userId, classId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/groups/by-class?class_id=${classId}&user_id=${userId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in fetchProjectByClassId:', error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { fetchGroupsByUserId, fetchProjectByClassId };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,mBAAmB,GAAG,MAAOC,MAAM,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,mBAAmBE,MAAM,EAAE,CAAC;IACnE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;MACxBI,OAAO,CAACC,IAAI,CAAC,2CAA2C,EAAEL,IAAI,CAAC;MAC/D,OAAO,EAAE;IACX;IACA,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC7D,MAAMD,KAAK;EACb;AACF,CAAC;AAED,MAAME,qBAAqB,GAAG,MAAAA,CAAOd,MAAM,EAAEe,OAAO,KAAK;EACvD,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,6BAA6BiB,OAAO,YAAYf,MAAM,EAAE,CAAC;IAChG,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC/D,MAAMD,KAAK;EACb;AACF,CAAC;AAED,SAASb,mBAAmB,EAAEe,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}