{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITSS_Project\\\\frontend\\\\src\\\\components\\\\task\\\\KanbanView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./KanbanView.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchTasks, updateChecklistItem, fetchSprints, fetchTeamDetails } from \"../../services/api-client\";\nimport CreateTask from \"./CreateTask\";\nimport TaskCommentPage from \"./TaskCommentPage\";\nimport TeamHeader from \"../TeamHeader/TeamHeader\";\nimport { filterTasksByUser } from \"./UserFilter\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const KanbanView = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [reportData, setReportData] = useState([]);\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const [showCreateTask, setShowCreateTask] = useState(false);\n  const [showCommentPage, setShowCommentPage] = useState(null);\n  const [sprints, setSprints] = useState([]);\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"Team task\");\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [teamDetails, setTeamDetails] = useState({\n    className: \"Loading...\",\n    classCode: \"Loading...\",\n    teamName: \"Loading...\",\n    projectName: \"Loading...\",\n    members: [],\n    isTeamLead: false\n  });\n  const currentUserId = 1; // Hardcoded as per request\n  const projectId = 1; // Hardcoded as per request\n\n  const loadTeamDetails = useCallback(async () => {\n    try {\n      const data = await fetchTeamDetails(projectId, currentUserId);\n      console.log(\"Fetched team details:\", data);\n\n      // Map members to include avatar paths based on usernames\n      const mappedMembers = (data.members || []).map(member => ({\n        user_id: member.user_id || 0,\n        username: member.username || \"Unknown\",\n        avatar: member.avatar || `../../assets/images/avatars/${member.username || `user${member.user_id}`}.jpg` // Fallback to local avatar\n      }));\n      setTeamDetails({\n        className: data.class_name || \"Unknown Class\",\n        classCode: data.class_code || \"N/A\",\n        teamName: data.team_name || \"Unknown Team\",\n        projectName: data.project_name || \"Unknown Project\",\n        members: mappedMembers,\n        isTeamLead: data.is_team_lead || false\n      });\n    } catch (error) {\n      console.error(\"Error fetching team details:\", error);\n      setTeamDetails({\n        className: \"Error\",\n        classCode: \"Error\",\n        teamName: \"Error\",\n        projectName: \"Error\",\n        members: [],\n        isTeamLead: false\n      });\n    }\n  }, [projectId, currentUserId]);\n  const loadProjectsAndSprints = useCallback(async () => {\n    try {\n      const sprintData = await fetchSprints();\n      console.log(\"Fetched sprints:\", sprintData);\n      const filteredSprints = sprintData.filter(sprint => sprint.project_id === projectId);\n      console.log(\"Filtered sprints for project_id =\", projectId, \":\", filteredSprints);\n      setSprints(filteredSprints);\n      if (filteredSprints.length > 0) {\n        setSelectedSprintId(filteredSprints[0].sprint_id);\n      } else {\n        setSelectedSprintId(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching sprints:\", error);\n      setSprints([]);\n    }\n  }, [projectId]);\n  const loadTasks = useCallback(async () => {\n    try {\n      const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\n      const data = await fetchTasks(mode);\n      console.log(`Fetched tasks (mode=${mode}):`, data);\n      const currentDate = new Date('2025-05-21T21:06:00+07:00'); // Updated to current date and time\n\n      const mappedTasks = data.filter(task => {\n        console.log(\"Filtering task with sprint_id:\", task.sprint_id, \"against selectedSprintId:\", selectedSprintId);\n        if (!selectedSprintId) return true;\n        return task.sprint_id === selectedSprintId;\n      }).map(task => ({\n        id: task.task_id,\n        title: task.title || \"Untitled Task\",\n        date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\n        time: task.due_date ? new Date(task.due_date).toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }) : \"\",\n        tags: [\"SQL\", \"Backend\"],\n        // Hardcoded tags as per previous logic\n        avatar: task.assigned_to ? `/assets/images/avatars/${task.assigned_to_username || `user${task.assigned_to}`}.jpg` : \"/assets/images/placeholders/placeholder-member.jpg\",\n        comments: task.comment_count || 0,\n        subTasks: task.checklists && task.checklists.length > 0 ? task.checklists.map(checklist => ({\n          id: checklist.checklist_id,\n          text: checklist.item_description,\n          completed: checklist.is_completed\n        })) : [],\n        status: task.status ? task.status.toLowerCase().replace(\"to-do\", \"to-do\").replace(\"in-progress\", \"in-progress\").replace(\"completed\", \"done\") : \"to-do\",\n        overdue: task.due_date && new Date(task.due_date) < currentDate && task.status !== \"Completed\",\n        progress_percentage: task.progress_percentage || 0,\n        assigned_to: task.assigned_to,\n        sprint_id: task.sprint_id,\n        due_date: task.due_date ? new Date(task.due_date) : null\n      })).sort((a, b) => {\n        if (a.status === \"done\" && b.status !== \"done\") return 1;\n        if (b.status === \"done\" && a.status !== \"done\") return -1;\n        if (a.status === \"done\" && b.status === \"done\") {\n          if (!a.due_date && !b.due_date) return 0;\n          if (!a.due_date) return 1;\n          if (!b.due_date) return -1;\n          return a.due_date - b.due_date;\n        }\n        if (!a.due_date && !b.due_date) return 0;\n        if (!a.due_date) return 1;\n        if (!b.due_date) return -1;\n        return a.due_date - b.due_date;\n      });\n      console.log(\"Mapped and sorted tasks:\", mappedTasks);\n      setTasks(mappedTasks);\n      const filtered = filterTasksByUser(mappedTasks, selectedUserId);\n      setFilteredTasks(filtered);\n      updateReportData(filtered);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      setTasks([]);\n      setFilteredTasks([]);\n    }\n  }, [activeTab, selectedSprintId, selectedUserId]);\n  useEffect(() => {\n    loadTeamDetails();\n    loadProjectsAndSprints();\n  }, [loadTeamDetails, loadProjectsAndSprints]);\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks, activeTab, selectedSprintId, selectedUserId]);\n  const updateReportData = updatedTasks => {\n    const counts = {\n      \"to-do\": 0,\n      \"in-progress\": 0,\n      \"done\": 0\n    };\n    updatedTasks.forEach(task => {\n      counts[task.status]++;\n    });\n    setReportData([{\n      id: 1,\n      name: \"To-Do\",\n      status: \"to-do\",\n      count: counts[\"to-do\"]\n    }, {\n      id: 2,\n      name: \"In-progress\",\n      status: \"in-progress\",\n      count: counts[\"in-progress\"]\n    }, {\n      id: 3,\n      name: \"Done\",\n      status: \"done\",\n      count: counts[\"done\"]\n    }]);\n  };\n  const getStatusClass = (status, overdue) => {\n    if (status === \"done\") return \"report-status-completed\";\n    if (overdue) return \"report-status-overdue\";\n    switch (status) {\n      case \"to-do\":\n        return \"report-status-to-do\";\n      case \"in-progress\":\n        return \"report-status-in-progress\";\n      default:\n        return \"\";\n    }\n  };\n  const getCircleClass = status => {\n    switch (status) {\n      case \"to-do\":\n        return \"circle-to-do\";\n      case \"in-progress\":\n        return \"circle-in-progress\";\n      case \"done\":\n        return \"circle-completed\";\n      default:\n        return \"\";\n    }\n  };\n  const toggleSubTask = async (taskId, subTaskId) => {\n    try {\n      const currentTask = tasks.find(task => task.id === taskId);\n      const currentSubTask = currentTask.subTasks.find(sub => sub.id === subTaskId);\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\n      await loadTasks();\n    } catch (error) {\n      console.error(\"Error updating subtask:\", error);\n    }\n  };\n  const handleTaskCreated = () => {\n    loadTasks();\n    setShowCreateTask(false);\n  };\n  const handleCancel = () => {\n    setShowCreateTask(false);\n  };\n  const openCommentPage = taskId => {\n    setShowCommentPage(taskId);\n  };\n  const closeCommentPage = () => {\n    setShowCommentPage(null);\n    loadTasks();\n  };\n  const handleSprintChange = async sprintId => {\n    console.log(\"Selected sprint ID in KanbanView:\", sprintId);\n    setSelectedSprintId(sprintId);\n    await loadTasks();\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  const handleUserChange = userId => {\n    setSelectedUserId(userId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(TeamHeader, {\n      className: teamDetails.className,\n      classCode: teamDetails.classCode,\n      teamName: teamDetails.teamName,\n      projectName: teamDetails.projectName,\n      members: teamDetails.members,\n      activeTab: activeTab,\n      sprints: sprints,\n      selectedSprintId: selectedSprintId,\n      onSprintChange: handleSprintChange,\n      onTabChange: handleTabChange,\n      onUserChange: handleUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-grid\",\n      children: [sprints.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No sprints available for this project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this) : reportData.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"h3\",\n            children: [group.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count-text\",\n              children: [\"(\", group.count.toString().padStart(2, \"0\"), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-circle ${getCircleClass(group.status)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this), filteredTasks.filter(task => task.status === group.status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `report-card ${getStatusClass(task.status, task.overdue)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"body_1\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: [task.status === \"done\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-label\",\n                  children: \"Completed \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 29\n                }, this), task.date, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-time-space\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 27\n                }, this), (task.status === \"to-do\" || task.status === \"in-progress\") && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-with-clock\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faClock,\n                    className: \"clock-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 33\n                  }, this), task.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 31\n                }, this), task.status === \"done\" && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: task.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress-text\",\n                  children: [\" \", \" - Progress: \", task.progress_percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-tags\",\n            children: task.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `tag ${tag.toLowerCase()}`,\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: task.avatar,\n              alt: \"Task assignee avatar\",\n              className: \"task-avatar\",\n              onError: e => {\n                e.target.src = '../../assets/images/placeholders/placeholder-member.jpg';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions body_2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => setOpenTaskId(openTaskId === task.id ? null : task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.subTasks.length, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faClipboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => openCommentPage(task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.comments, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 21\n          }, this), openTaskId === task.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divider active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-subtasks active\",\n              children: task.subTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-subtask-message\",\n                children: \"No subtask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 29\n              }, this) : task.subTasks.map((subTask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subtask\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-count\",\n                    children: [index + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-text\",\n                    children: subTask.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `subtask-status ${subTask.completed ? \"completed\" : \"\"}`,\n                    onClick: e => {\n                      e.stopPropagation();\n                      if (task.assigned_to === currentUserId) {\n                        toggleSubTask(task.id, subTask.id);\n                      }\n                    },\n                    style: {\n                      cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\n                      opacity: task.assigned_to === currentUserId ? 1 : 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: subTask.completed ? fasCheckCircle : farCircle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 33\n                }, this), index !== task.subTasks.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"divider active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 35\n                }, this)]\n              }, subTask.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 31\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 19\n        }, this)), group.status === \"to-do\" && teamDetails.isTeamLead && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateTask(!showCreateTask),\n            className: \"add-task-btn\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this), \" Add Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }, this)]\n      }, group.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this)), showCreateTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(CreateTask, {\n            onTaskCreated: handleTaskCreated,\n            onCancel: handleCancel,\n            selectedSprintId: selectedSprintId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), showCommentPage && /*#__PURE__*/_jsxDEV(TaskCommentPage, {\n        taskId: showCommentPage,\n        onClose: closeCommentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanView, \"udeXsGgoa2sdh4uI34WZdfOf+BI=\");\n_c = KanbanView;\nexport default KanbanView;\nvar _c;\n$RefreshReg$(_c, \"KanbanView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FontAwesomeIcon","faCheckCircle","fasCheckCircle","faCircle","farCircle","faClipboard","faComment","faClock","faPlus","fetchTasks","updateChecklistItem","fetchSprints","fetchTeamDetails","CreateTask","TaskCommentPage","TeamHeader","filterTasksByUser","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanView","_s","tasks","setTasks","filteredTasks","setFilteredTasks","reportData","setReportData","openTaskId","setOpenTaskId","showCreateTask","setShowCreateTask","showCommentPage","setShowCommentPage","sprints","setSprints","selectedSprintId","setSelectedSprintId","activeTab","setActiveTab","selectedUserId","setSelectedUserId","teamDetails","setTeamDetails","className","classCode","teamName","projectName","members","isTeamLead","currentUserId","projectId","loadTeamDetails","data","console","log","mappedMembers","map","member","user_id","username","avatar","class_name","class_code","team_name","project_name","is_team_lead","error","loadProjectsAndSprints","sprintData","filteredSprints","filter","sprint","project_id","length","sprint_id","loadTasks","mode","currentDate","Date","mappedTasks","task","id","task_id","title","date","due_date","toLocaleDateString","time","toLocaleTimeString","hour","minute","tags","assigned_to","assigned_to_username","comments","comment_count","subTasks","checklists","checklist","checklist_id","text","item_description","completed","is_completed","status","toLowerCase","replace","overdue","progress_percentage","sort","a","b","filtered","updateReportData","updatedTasks","counts","forEach","name","count","getStatusClass","getCircleClass","toggleSubTask","taskId","subTaskId","currentTask","find","currentSubTask","sub","handleTaskCreated","handleCancel","openCommentPage","closeCommentPage","handleSprintChange","sprintId","handleTabChange","tab","handleUserChange","userId","children","onSprintChange","onTabChange","onUserChange","fileName","_jsxFileName","lineNumber","columnNumber","group","toString","padStart","icon","tag","src","alt","onError","e","target","onClick","style","cursor","subTask","index","stopPropagation","opacity","onTaskCreated","onCancel","onClose","_c","$RefreshReg$"],"sources":["D:/ITSS_Project/frontend/src/components/task/KanbanView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./KanbanView.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fetchTasks, updateChecklistItem, fetchSprints, fetchTeamDetails } from \"../../services/api-client\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskCommentPage from \"./TaskCommentPage\";\r\nimport TeamHeader from \"../TeamHeader/TeamHeader\";\r\nimport { filterTasksByUser } from \"./UserFilter\";\r\n\r\nexport const KanbanView = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const [reportData, setReportData] = useState([]);\r\n  const [openTaskId, setOpenTaskId] = useState(null);\r\n  const [showCreateTask, setShowCreateTask] = useState(false);\r\n  const [showCommentPage, setShowCommentPage] = useState(null);\r\n  const [sprints, setSprints] = useState([]);\r\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(\"Team task\");\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [teamDetails, setTeamDetails] = useState({\r\n    className: \"Loading...\",\r\n    classCode: \"Loading...\",\r\n    teamName: \"Loading...\",\r\n    projectName: \"Loading...\",\r\n    members: [],\r\n    isTeamLead: false,\r\n  });\r\n\r\n  const currentUserId = 1; // Hardcoded as per request\r\n  const projectId = 1; // Hardcoded as per request\r\n\r\n  const loadTeamDetails = useCallback(async () => {\r\n    try {\r\n      const data = await fetchTeamDetails(projectId, currentUserId);\r\n      console.log(\"Fetched team details:\", data);\r\n\r\n      // Map members to include avatar paths based on usernames\r\n      const mappedMembers = (data.members || []).map(member => ({\r\n        user_id: member.user_id || 0,\r\n        username: member.username || \"Unknown\",\r\n        avatar: member.avatar || `../../assets/images/avatars/${member.username || `user${member.user_id}`}.jpg`, // Fallback to local avatar\r\n      }));\r\n\r\n      setTeamDetails({\r\n        className: data.class_name || \"Unknown Class\",\r\n        classCode: data.class_code || \"N/A\",\r\n        teamName: data.team_name || \"Unknown Team\",\r\n        projectName: data.project_name || \"Unknown Project\",\r\n        members: mappedMembers,\r\n        isTeamLead: data.is_team_lead || false,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching team details:\", error);\r\n      setTeamDetails({\r\n        className: \"Error\",\r\n        classCode: \"Error\",\r\n        teamName: \"Error\",\r\n        projectName: \"Error\",\r\n        members: [],\r\n        isTeamLead: false,\r\n      });\r\n    }\r\n  }, [projectId, currentUserId]);\r\n\r\n  const loadProjectsAndSprints = useCallback(async () => {\r\n    try {\r\n      const sprintData = await fetchSprints();\r\n      console.log(\"Fetched sprints:\", sprintData);\r\n\r\n      const filteredSprints = sprintData.filter(sprint => sprint.project_id === projectId);\r\n      console.log(\"Filtered sprints for project_id =\", projectId, \":\", filteredSprints);\r\n\r\n      setSprints(filteredSprints);\r\n      if (filteredSprints.length > 0) {\r\n        setSelectedSprintId(filteredSprints[0].sprint_id);\r\n      } else {\r\n        setSelectedSprintId(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching sprints:\", error);\r\n      setSprints([]);\r\n    }\r\n  }, [projectId]);\r\n\r\n  const loadTasks = useCallback(async () => {\r\n    try {\r\n      const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\r\n      const data = await fetchTasks(mode);\r\n      console.log(`Fetched tasks (mode=${mode}):`, data);\r\n\r\n      const currentDate = new Date('2025-05-21T21:06:00+07:00'); // Updated to current date and time\r\n\r\n      const mappedTasks = data\r\n        .filter(task => {\r\n          console.log(\"Filtering task with sprint_id:\", task.sprint_id, \"against selectedSprintId:\", selectedSprintId);\r\n          if (!selectedSprintId) return true;\r\n          return task.sprint_id === selectedSprintId;\r\n        })\r\n        .map((task) => ({\r\n          id: task.task_id,\r\n          title: task.title || \"Untitled Task\",\r\n          date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\r\n          time: task.due_date\r\n            ? new Date(task.due_date).toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n              })\r\n            : \"\",\r\n          tags: [\"SQL\", \"Backend\"], // Hardcoded tags as per previous logic\r\n          avatar: task.assigned_to ? `/assets/images/avatars/${task.assigned_to_username || `user${task.assigned_to}`}.jpg` : \"/assets/images/placeholders/placeholder-member.jpg\",\r\n          comments: task.comment_count || 0,\r\n          subTasks: task.checklists && task.checklists.length > 0\r\n            ? task.checklists.map((checklist) => ({\r\n                id: checklist.checklist_id,\r\n                text: checklist.item_description,\r\n                completed: checklist.is_completed,\r\n              }))\r\n            : [],\r\n          status: task.status\r\n            ? task.status\r\n                .toLowerCase()\r\n                .replace(\"to-do\", \"to-do\")\r\n                .replace(\"in-progress\", \"in-progress\")\r\n                .replace(\"completed\", \"done\")\r\n            : \"to-do\",\r\n          overdue:\r\n            task.due_date &&\r\n            new Date(task.due_date) < currentDate &&\r\n            task.status !== \"Completed\",\r\n          progress_percentage: task.progress_percentage || 0,\r\n          assigned_to: task.assigned_to,\r\n          sprint_id: task.sprint_id,\r\n          due_date: task.due_date ? new Date(task.due_date) : null,\r\n        }))\r\n        .sort((a, b) => {\r\n          if (a.status === \"done\" && b.status !== \"done\") return 1;\r\n          if (b.status === \"done\" && a.status !== \"done\") return -1;\r\n          if (a.status === \"done\" && b.status === \"done\") {\r\n            if (!a.due_date && !b.due_date) return 0;\r\n            if (!a.due_date) return 1;\r\n            if (!b.due_date) return -1;\r\n            return a.due_date - b.due_date;\r\n          }\r\n          if (!a.due_date && !b.due_date) return 0;\r\n          if (!a.due_date) return 1;\r\n          if (!b.due_date) return -1;\r\n          return a.due_date - b.due_date;\r\n        });\r\n\r\n      console.log(\"Mapped and sorted tasks:\", mappedTasks);\r\n      setTasks(mappedTasks);\r\n      const filtered = filterTasksByUser(mappedTasks, selectedUserId);\r\n      setFilteredTasks(filtered);\r\n      updateReportData(filtered);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n      setTasks([]);\r\n      setFilteredTasks([]);\r\n    }\r\n  }, [activeTab, selectedSprintId, selectedUserId]);\r\n\r\n  useEffect(() => {\r\n    loadTeamDetails();\r\n    loadProjectsAndSprints();\r\n  }, [loadTeamDetails, loadProjectsAndSprints]);\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, [loadTasks, activeTab, selectedSprintId, selectedUserId]);\r\n\r\n  const updateReportData = (updatedTasks) => {\r\n    const counts = { \"to-do\": 0, \"in-progress\": 0, \"done\": 0 };\r\n    updatedTasks.forEach((task) => {\r\n      counts[task.status]++;\r\n    });\r\n\r\n    setReportData([\r\n      { id: 1, name: \"To-Do\", status: \"to-do\", count: counts[\"to-do\"] },\r\n      { id: 2, name: \"In-progress\", status: \"in-progress\", count: counts[\"in-progress\"] },\r\n      { id: 3, name: \"Done\", status: \"done\", count: counts[\"done\"] },\r\n    ]);\r\n  };\r\n\r\n  const getStatusClass = (status, overdue) => {\r\n    if (status === \"done\") return \"report-status-completed\";\r\n    if (overdue) return \"report-status-overdue\";\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"report-status-to-do\";\r\n      case \"in-progress\":\r\n        return \"report-status-in-progress\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getCircleClass = (status) => {\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"circle-to-do\";\r\n      case \"in-progress\":\r\n        return \"circle-in-progress\";\r\n      case \"done\":\r\n        return \"circle-completed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const toggleSubTask = async (taskId, subTaskId) => {\r\n    try {\r\n      const currentTask = tasks.find((task) => task.id === taskId);\r\n      const currentSubTask = currentTask.subTasks.find((sub) => sub.id === subTaskId);\r\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\r\n      await loadTasks();\r\n    } catch (error) {\r\n      console.error(\"Error updating subtask:\", error);\r\n    }\r\n  };\r\n\r\n  const handleTaskCreated = () => {\r\n    loadTasks();\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const openCommentPage = (taskId) => {\r\n    setShowCommentPage(taskId);\r\n  };\r\n\r\n  const closeCommentPage = () => {\r\n    setShowCommentPage(null);\r\n    loadTasks();\r\n  };\r\n\r\n  const handleSprintChange = async (sprintId) => {\r\n    console.log(\"Selected sprint ID in KanbanView:\", sprintId);\r\n    setSelectedSprintId(sprintId);\r\n    await loadTasks();\r\n  };\r\n\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const handleUserChange = (userId) => {\r\n    setSelectedUserId(userId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      <TeamHeader\r\n        className={teamDetails.className}\r\n        classCode={teamDetails.classCode}\r\n        teamName={teamDetails.teamName}\r\n        projectName={teamDetails.projectName}\r\n        members={teamDetails.members}\r\n        activeTab={activeTab}\r\n        sprints={sprints}\r\n        selectedSprintId={selectedSprintId}\r\n        onSprintChange={handleSprintChange}\r\n        onTabChange={handleTabChange}\r\n        onUserChange={handleUserChange}\r\n      />\r\n      <div className=\"report-grid\">\r\n        {sprints.length === 0 ? (\r\n          <div>No sprints available for this project.</div>\r\n        ) : (\r\n          reportData.map((group) => (\r\n            <div key={group.id} className=\"status-block\">\r\n              <div className=\"column-header\">\r\n                <h3 className=\"h3\">\r\n                  {group.name}{\" \"}\r\n                  <span className=\"count-text\">\r\n                    ({group.count.toString().padStart(2, \"0\")})\r\n                  </span>\r\n                </h3>\r\n                <span\r\n                  className={`status-circle ${getCircleClass(group.status)}`}\r\n                ></span>\r\n              </div>\r\n              {filteredTasks\r\n                .filter((task) => task.status === group.status)\r\n                .map((task) => (\r\n                  <div\r\n                    key={task.id}\r\n                    className={`report-card ${getStatusClass(\r\n                      task.status,\r\n                      task.overdue\r\n                    )}`}\r\n                  >\r\n                    <div className=\"report-card-header\">\r\n                      <div className=\"header-left\">\r\n                        <h4 className=\"body_1\">{task.title}</h4>\r\n                        <div className=\"task-meta\">\r\n                          {task.status === \"done\" && (\r\n                            <span className=\"completed-label\">Completed </span>\r\n                          )}\r\n                          {task.date}\r\n                          <span className=\"date-time-space\"></span>\r\n                          {(task.status === \"to-do\" ||\r\n                            task.status === \"in-progress\") &&\r\n                            task.time && (\r\n                              <span className=\"time-with-clock\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faClock}\r\n                                  className=\"clock-icon\"\r\n                                />\r\n                                {task.time}\r\n                              </span>\r\n                            )}\r\n                          {task.status === \"done\" && task.time && (\r\n                            <span>{task.time}</span>\r\n                          )}\r\n                          <span className=\"progress-text\">\r\n                            {\" \"} - Progress: {task.progress_percentage}%\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"task-tags\">\r\n                      {task.tags.map((tag) => (\r\n                        <span key={tag} className={`tag ${tag.toLowerCase()}`}>\r\n                          {tag}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"task-info\">\r\n                      <img\r\n                        src={task.avatar}\r\n                        alt=\"Task assignee avatar\"\r\n                        className=\"task-avatar\"\r\n                        onError={(e) => {\r\n                          e.target.src = '../../assets/images/placeholders/placeholder-member.jpg';\r\n                        }}\r\n                      />\r\n                      <div className=\"task-actions body_2\">\r\n                        <span\r\n                          className=\"task-action-item\"\r\n                          onClick={() => setOpenTaskId(openTaskId === task.id ? null : task.id)}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          {task.subTasks.length} <FontAwesomeIcon icon={faClipboard} />\r\n                        </span>\r\n                        <span\r\n                          className=\"task-action-item\"\r\n                          onClick={() => openCommentPage(task.id)}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          {task.comments} <FontAwesomeIcon icon={faComment} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    {openTaskId === task.id && (\r\n                      <>\r\n                        <div className=\"divider active\"></div>\r\n                        <div className=\"task-subtasks active\">\r\n                          {task.subTasks.length === 0 ? (\r\n                            <div className=\"no-subtask-message\">No subtask</div>\r\n                          ) : (\r\n                            task.subTasks.map((subTask, index) => (\r\n                              <div key={subTask.id}>\r\n                                <div className=\"subtask\">\r\n                                  <span className=\"subtask-icon\">\r\n                                    <span></span>\r\n                                    <div></div>\r\n                                  </span>\r\n                                  <span className=\"subtask-count\">{index + 1}.</span>\r\n                                  <span className=\"subtask-text\">{subTask.text}</span>\r\n                                  <span\r\n                                    className={`subtask-status ${\r\n                                      subTask.completed ? \"completed\" : \"\"\r\n                                    }`}\r\n                                    onClick={(e) => {\r\n                                      e.stopPropagation();\r\n                                      if (task.assigned_to === currentUserId) {\r\n                                        toggleSubTask(task.id, subTask.id);\r\n                                      }\r\n                                    }}\r\n                                    style={{\r\n                                      cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\r\n                                      opacity: task.assigned_to === currentUserId ? 1 : 0.5,\r\n                                    }}\r\n                                  >\r\n                                    <FontAwesomeIcon\r\n                                      icon={\r\n                                        subTask.completed ? fasCheckCircle : farCircle\r\n                                      }\r\n                                    />\r\n                                  </span>\r\n                                </div>\r\n                                {index !== task.subTasks.length - 1 && (\r\n                                  <div className=\"divider active\"></div>\r\n                                )}\r\n                              </div>\r\n                            ))\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {group.status === \"to-do\" && teamDetails.isTeamLead && (\r\n                <div className=\"add-task-btn-container\">\r\n                  <button\r\n                    onClick={() => setShowCreateTask(!showCreateTask)}\r\n                    className=\"add-task-btn\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} /> Add Task\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n        {showCreateTask && (\r\n          <div className=\"modal-backdrop\">\r\n            <div className=\"modal-content\">\r\n              <CreateTask\r\n                onTaskCreated={handleTaskCreated}\r\n                onCancel={handleCancel}\r\n                selectedSprintId={selectedSprintId}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showCommentPage && (\r\n          <TaskCommentPage taskId={showCommentPage} onClose={closeCommentPage} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}