{"ast":null,"code":"/**\r\n * react-router v7.5.1\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\n\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = msg => {\n  throw TypeError(msg);\n};\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// dom-export.ts\nvar dom_export_exports = {};\n__export(dom_export_exports, {\n  HydratedRouter: () => HydratedRouter,\n  RouterProvider: () => RouterProvider2\n});\nmodule.exports = __toCommonJS(dom_export_exports);\n\n// lib/dom-export/dom-router-provider.tsx\nvar React10 = __toESM(require(\"react\"));\nvar ReactDOM = __toESM(require(\"react-dom\"));\n\n// lib/router/history.ts\nvar PopStateEventType = \"popstate\";\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window2.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options = {}) {\n  let {\n    window: window2 = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({\n      ...globalHistory.state,\n      idx: index\n    }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, `No window.location.(origin|href) available to create URL for href: ${href}`);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n\n// lib/router/utils.ts\nvar _map;\nvar unstable_RouterContextProvider = class {\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(key);\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"unstable_middleware\", \"children\"]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(key);\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, `Cannot specify children on an index route`);\n    invariant(!manifest[id], `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`);\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`);\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`);\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo2, {\n    paramName,\n    isOptional\n  }, index) => {\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo2[paramName] = void 0;\n    } else {\n      memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo2;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`);\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {}\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`);\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(path)}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = {\n      ...toArg\n    };\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(data2, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, {\n    ...responseInit,\n    headers\n  });\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\nvar validMutationMethods = new Set(validMutationMethodsArr);\nvar validRequestMethodsArr = [\"GET\", ...validMutationMethodsArr];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      initialMatchesIsFOW = true;\n      initialMatches = fogOfWar.matches;\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    initialized = true;\n  } else {\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== void 0);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  }\n  let router2;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */new Map(),\n    blockers: /* @__PURE__ */new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */new Set();\n  let fetchControllers = /* @__PURE__ */new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */new Map();\n  let fetchRedirectIds = /* @__PURE__ */new Set();\n  let fetchLoadMatches = /* @__PURE__ */new Map();\n  let activeFetchers = /* @__PURE__ */new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */new Set();\n  let blockerFunctions = /* @__PURE__ */new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(({\n      action: historyAction,\n      location,\n      delta\n    }) => {\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = void 0;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: void 0,\n              reset: void 0,\n              location\n            });\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router2;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: unmountedFetchers,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    unmountedFetchers.forEach(key => deleteFetcher(key));\n    mountedFetchers.forEach(key => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, {\n    flushSync: flushSync2\n  } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {} else if (pendingAction === \"POP\" /* Pop */) {} else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState({\n      ...newState,\n      // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }, {\n      viewTransitionOpts,\n      flushSync: flushSync2 === true\n    });\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, to, opts?.fromRouteId, opts?.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {} else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync: flushSync2\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: \"error\" /* error */,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(request, location, opts.submission, matches, scopedContext, fogOfWar.active, opts && opts.initialHydration === true, {\n        replace: opts.replace,\n        flushSync: flushSync2\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync2 = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, scopedContext, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync2, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: \"error\" /* error */,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: \"error\" /* error */,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, actionMatch, initialHydration ? [] : hydrationRouteProperties2, scopedContext);\n      let results = await callDataStrategy(request, dsMatches, scopedContext, null);\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync2, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState({\n          navigation: loadingNavigation,\n          ...(actionData !== void 0 ? {\n            actionData\n          } : {})\n        }, {\n          flushSync: flushSync2\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      dsMatches,\n      revalidatingFetchers\n    } = getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, init.history, state, matches, activeSubmission, location, initialHydration ? [] : hydrationRouteProperties2, initialHydration === true, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some(m => m.shouldLoad) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        ...getActionDataForCommit(pendingActionResult),\n        ...(updatedFetchers2 ? {\n          fetchers: new Map(state.fetchers)\n        } : {})\n      }, {\n        flushSync: flushSync2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync: flushSync2\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, request, scopedContext);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults);\n    if (initialHydration && state.errors) {\n      errors = {\n        ...state.errors,\n        ...errors\n      };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {})\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, href, routeId, opts?.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync2, preventScrollReset, submission);\n      return;\n    }\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    await handleFetcherLoader(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync2, preventScrollReset, submission);\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync: flushSync2\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync: flushSync2\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync: flushSync2\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, requestMatches, match, hydrationRouteProperties2, scopedContext);\n    let actionResults = await callDataStrategy(fetchRequest, fetchMatches, scopedContext, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let {\n      dsMatches,\n      revalidatingFetchers\n    } = getMatchesToLoad(revalidationRequest, scopedContext, mapRouteProperties2, manifest, init.history, state, matches, submission, nextLocation, hydrationRouteProperties2, false, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, revalidationRequest, scopedContext);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults);\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync: flushSync2\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync: flushSync2\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, matches, match, hydrationRouteProperties2, scopedContext);\n    let results = await callDataStrategy(fetchRequest, dsMatches, scopedContext, key);\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, false);\n    } catch (e) {\n      matches.filter(m => m.shouldLoad).forEach(m => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(request, matches, scopedContext, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.request && f.controller) {\n        let results = await callDataStrategy(f.request, f.matches, scopedContext, f.key);\n        let result = results[f.match.route.id];\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: \"error\" /* error */,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties2);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2);\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router2 = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router2;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, [name, value]) => `${acc}${name}=${value}\n`, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex(m => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex(m => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let {\n      route\n    } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, forceShouldLoad);\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false :\n    // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n    isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match);\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, shouldRevalidateArgs);\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(history, f.path, fetchController.signal);\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs);\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return {\n    dsMatches,\n    revalidatingFetchers\n  };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, `No route found to patch children into: routeId = ${routeId}`);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties2, [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every((aChild, i) => existingRoute.children?.some(bChild => isSameRoute(aChild, bChild)));\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(!isUnsupported, \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\");\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(false, `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`);\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, {\n          [key]: value\n        });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every(value => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(typeof route.lazy === \"function\", \"No lazy route function found\");\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 &&\n        // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(!isUnsupported, \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\");\n        } else if (isStaticallyDefined) {\n          warning(!isStaticallyDefined, `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`);\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {});\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {}) : void 0;\n  lazyRoutePromise?.catch(() => {});\n  lazyHandlerPromise?.catch(() => {});\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter(m => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some(m => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runMiddlewarePipeline(args, false, () => defaultDataStrategy(args), (error, routeId) => ({\n    [routeId]: {\n      type: \"error\",\n      result: error\n    }\n  }));\n}\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\n  let {\n    matches,\n    request,\n    params,\n    context\n  } = args;\n  let middlewareState = {\n    handlerResult: void 0\n  };\n  try {\n    let tuples = matches.flatMap(m => m.route.unstable_middleware ? m.route.unstable_middleware.map(fn => [m.route.id, fn]) : []);\n    let result = await callRouteMiddleware({\n      request,\n      params,\n      context\n    }, tuples, propagateResult, middlewareState, handler);\n    return propagateResult ? result : middlewareState.handlerResult;\n  } catch (e) {\n    if (!middlewareState.middlewareError) {\n      throw e;\n    }\n    let result = await errorHandler(middlewareState.middlewareError.error, middlewareState.middlewareError.routeId);\n    if (propagateResult || !middlewareState.handlerResult) {\n      return result;\n    }\n    return Object.assign(middlewareState.handlerResult, result);\n  }\n}\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {\n  let {\n    request\n  } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(`Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`);\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    middlewareState.handlerResult = await handler();\n    return middlewareState.handlerResult;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    let result = await callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx + 1);\n    if (propagateResult) {\n      nextResult = result;\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware({\n      request: args.request,\n      params: args.params,\n      context: args.context\n    }, next);\n    if (nextCalled) {\n      if (result === void 0) {\n        return nextResult;\n      } else {\n        return result;\n      }\n    } else {\n      return next();\n    }\n  } catch (error) {\n    if (!middlewareState.middlewareError) {\n      middlewareState.middlewareError = {\n        routeId,\n        error\n      };\n    } else if (middlewareState.middlewareError.error !== error) {\n      middlewareState.middlewareError = {\n        routeId,\n        error\n      };\n    }\n    throw error;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(match.route, isMutationMethod(request.method) ? \"action\" : \"loader\", manifest, mapRouteProperties2, lazyRoutePropertiesToSkip);\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip);\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({\n        type: \"data\" /* data */,\n        result: void 0\n      });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map(match => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip),\n        resolve: () => Promise.resolve({\n          type: \"data\",\n          result: void 0\n        })\n      };\n    }\n    return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, true, shouldRevalidateArgs);\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some(m => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map(m => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\");\n  } : cb => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runMiddlewarePipeline(typedDataStrategyArgs, false, () => cb({\n      ...typedDataStrategyArgs,\n      fetcherKey,\n      unstable_runClientMiddleware: () => {\n        throw new Error(\"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\");\n      }\n    }), (error, routeId) => ({\n      [routeId]: {\n        type: \"error\",\n        result: error\n      }\n    }));\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(matches.flatMap(m => [m._lazyPromises?.handler, m._lazyPromises?.route]));\n  } catch (e) {}\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = handler => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: scopedContext\n      }, ...(ctx !== void 0 ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }),\n        // Ensure all lazy route promises are resolved before continuing\n        lazyHandlerPromise, lazyRoutePromise]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return {\n            type: \"data\" /* data */,\n            result: void 0\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return {\n      type: \"error\" /* error */,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: \"error\" /* error */,\n        error: e\n      };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.init?.status || 500, void 0, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return {\n    type: \"data\" /* data */,\n    data: result\n  };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, location);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult);\n  revalidatingFetchers.filter(f => !f.matches || f.matches.some(m => m.shouldLoad)).forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({\n    ...parsedPath,\n    hash: \"\"\n  });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {}\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, `Failed to save applied view transitions in sessionStorage (${error}).`);\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nvar React3 = __toESM(require(\"react\"));\n\n// lib/context.ts\nvar React = __toESM(require(\"react\"));\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(/* @__PURE__ */new Map());\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(null);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(null);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\n\n// lib/hooks.tsx\nvar React2 = __toESM(require(\"react\"));\nvar ENABLE_DEV_WARNINGS = true;\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useLocation() may be used only in the context of a <Router> component.`);\n  return React2.useContext(LocationContext).location;\n}\nvar OutletContext = React2.createContext(null);\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useRoutes() may be used only in the context of a <Router> component.`);\n  let {\n    navigator: navigator2,\n    static: isStatic\n  } = React2.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"), `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`);\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase), `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`);\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(parentRoute || matches != null, `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `);\n    warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0, `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`);\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */React2.createElement(LocationContext.Provider, {\n      value: {\n        location: {\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\",\n          ...location\n        },\n        navigationType: \"POP\" /* Pop */\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /* @__PURE__ */React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */React2.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */React2.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */React2.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /* @__PURE__ */React2.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */React2.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /* @__PURE__ */React2.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n};\nfunction RenderedRoute({\n  routeContext,\n  match,\n  children\n}) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */React2.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && errors?.[m.route.id] !== void 0);\n    invariant(errorIndex >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(errors).join(\",\")}`);\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors: errors2\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */React2.createElement(RenderedRoute, {\n        match,\n        routeContext: {\n          outlet,\n          matches: matches2,\n          isDataRoute: dataRouterState != null\n        },\n        children\n      });\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */React2.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches: matches2,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(thisRoute.route.id, `${hookName} can only be used on routes that contain a unique \"id\"`);\n  return thisRoute.route.id;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nvar ENABLE_DEV_WARNINGS2 = true;\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.element) {\n        warning(false, \"You should not include both `Component` and `element` on your route - `Component` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.hydrateFallbackElement) {\n        warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.errorElement) {\n        warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\"HydrateFallback\", \"hydrateFallbackElement\"];\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router: router2,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router2.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */new Map());\n  let setState = React3.useCallback((newState, {\n    deletedFetchers,\n    flushSync: flushSync2,\n    viewTransitionOpts\n  }) => {\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== void 0) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    warnOnce(flushSync2 === false || reactDomFlushSyncImpl != null, 'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.');\n    let isViewTransitionAvailable = router2.window != null && router2.window.document != null && typeof router2.window.document.startViewTransition === \"function\";\n    warnOnce(viewTransitionOpts == null || isViewTransitionAvailable, \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\");\n    if (!viewTransitionOpts || !isViewTransitionAvailable) {\n      if (reactDomFlushSyncImpl && flushSync2) {\n        reactDomFlushSyncImpl(() => setStateImpl(newState));\n      } else {\n        React3.startTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    if (reactDomFlushSyncImpl && flushSync2) {\n      reactDomFlushSyncImpl(() => {\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      let t = router2.window.document.startViewTransition(() => {\n        reactDomFlushSyncImpl(() => setStateImpl(newState));\n      });\n      t.finished.finally(() => {\n        reactDomFlushSyncImpl(() => {\n          setRenderDfd(void 0);\n          setTransition(void 0);\n          setPendingState(void 0);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      reactDomFlushSyncImpl(() => setTransition(t));\n      return;\n    }\n    if (transition) {\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router2.window, reactDomFlushSyncImpl, transition, renderDfd]);\n  React3.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router2.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router2.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router2.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator2 = React3.useMemo(() => {\n    return {\n      createHref: router2.createHref,\n      encodeLocation: router2.encodeLocation,\n      go: n => router2.navigate(n),\n      push: (to, state2, opts) => router2.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router2.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router2]);\n  let basename = router2.basename || \"/\";\n  let dataRouterContext = React3.useMemo(() => ({\n    router: router2,\n    navigator: navigator2,\n    static: false,\n    basename\n  }), [router2, navigator2, basename]);\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, /* @__PURE__ */React3.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /* @__PURE__ */React3.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /* @__PURE__ */React3.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /* @__PURE__ */React3.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /* @__PURE__ */React3.createElement(Router, {\n    basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator2\n  }, /* @__PURE__ */React3.createElement(MemoizedDataRoutes, {\n    routes: router2.routes,\n    future: router2.future,\n    state\n  })))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator: navigator2,\n  static: staticProp = false\n}) {\n  invariant(!useInRouterContext(), `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`);\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(() => ({\n    basename,\n    navigator: navigator2,\n    static: staticProp,\n    future: {}\n  }), [basename, navigator2, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(locationContext != null, `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`);\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */React3.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /* @__PURE__ */React3.createElement(LocationContext.Provider, {\n    children,\n    value: locationContext\n  }));\n}\n\n// lib/dom/ssr/components.tsx\nvar React9 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(/* @vite-ignore */\n    /* webpackIgnore: true */\n    route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(`Error loading route module \\`${route.module}\\`, reloading page...`);\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode &&\n    // @ts-expect-error\n    void 0) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {});\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map(href => ({\n    rel: \"stylesheet\",\n    href\n  }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(`link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`)) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction getModuleLinkHrefs(matches, manifest, {\n  includeHydrateFallback\n} = {}) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    if (!route) return [];\n    let hrefs = [route.module];\n    if (route.clientActionModule) {\n      hrefs = hrefs.concat(route.clientActionModule);\n    }\n    if (route.clientLoaderModule) {\n      hrefs = hrefs.concat(route.clientLoaderModule);\n    }\n    if (includeHydrateFallback && route.hydrateFallbackModule) {\n      hrefs = hrefs.concat(route.hydrateFallbackModule);\n    }\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar React4 = __toESM(require(\"react\"));\nvar import_turbo_stream = require(\"turbo-stream\");\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */new Set([100, 101, 204, 205]);\nfunction getSingleFetchDataStrategy(getRouter, getRouteInfo, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecodeViaTurboStream, ssr, basename);\n  return async args => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\n  return async args => {\n    let {\n      request,\n      matches,\n      fetcherKey\n    } = args;\n    let router2 = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some(m => {\n      let {\n        hasLoader,\n        hasClientLoader\n      } = getRouteInfo(m.route.id);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(args, router2, getRouteInfo, fetchAndDecode, ssr, basename);\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find(m => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async handler => {\n    let result2 = await handler(async () => {\n      let {\n        data: data2,\n        status\n      } = await fetchAndDecode(args, basename, [actionMatch.route.id]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return {\n      [actionMatch.route.id]: result\n    };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(m => m.unstable_shouldCallHandler());\n  let results = {};\n  await Promise.all(matchesToLoad.map(m => m.resolve(async handler => {\n    try {\n      let {\n        hasClientLoader\n      } = getRouteInfo(m.route.id);\n      let routeId = m.route.id;\n      let result = hasClientLoader ? await handler(async () => {\n        let {\n          data: data2\n        } = await fetchAndDecode(args, basename, [routeId]);\n        return unwrapSingleFetchResult(data2, routeId);\n      }) : await handler();\n      results[m.route.id] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[m.route.id] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router2, getRouteInfo, fetchAndDecode, ssr, basename) {\n  let routesParams = /* @__PURE__ */new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(args.matches.map(async (m, i) => m.resolve(async handler => {\n    routeDfds[i].resolve();\n    let routeId = m.route.id;\n    let {\n      hasLoader,\n      hasClientLoader,\n      hasShouldRevalidate\n    } = getRouteInfo(routeId);\n    let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n    let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n    if (!shouldCall) {\n      foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null &&\n      // This is a revalidation,\n      hasLoader &&\n      // for a route with a server loader,\n      hasShouldRevalidate === true);\n      return;\n    }\n    if (hasClientLoader) {\n      if (hasLoader) {\n        foundOptOutRoute = true;\n      }\n      try {\n        let result = await handler(async () => {\n          let {\n            data: data2\n          } = await fetchAndDecode(args, basename, [routeId]);\n          return unwrapSingleFetchResult(data2, routeId);\n        });\n        results[routeId] = {\n          type: \"data\",\n          result\n        };\n      } catch (e) {\n        results[routeId] = {\n          type: \"error\",\n          result: e\n        };\n      }\n      return;\n    }\n    if (hasLoader) {\n      routesParams.add(routeId);\n    }\n    try {\n      let result = await handler(async () => {\n        let data2 = await singleFetchDfd.promise;\n        return unwrapSingleFetchResult(data2, routeId);\n      });\n      results[routeId] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[routeId] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n  await Promise.all(routeDfds.map(d => d.promise));\n  if ((!router2.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({});\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find(m => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(async handler => handler(async () => {\n    let {\n      data: data2\n    } = await fetchAndDecode(args, basename, [routeId]);\n    return unwrapSingleFetchResult(data2, routeId);\n  }));\n  return {\n    [fetcherMatch.route.id]: result\n  };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename) {\n  let url = typeof reqUrl === \"string\" ? new URL(reqUrl,\n  // This can be called during the SSR flow via PrefetchPageLinksImpl so\n  // don't assume window is available\n  typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let {\n    request\n  } = args;\n  let url = singleFetchUrl(request.url, basename);\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = {\n        data: void 0\n      };\n    }\n    return {\n      status: res.status,\n      data: {\n        routes\n      }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = {\n          redirect: typed[SingleFetchRedirectSymbol]\n        };\n      } else {\n        data2 = {\n          routes: typed\n        };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = {\n          redirect: typed\n        };\n      } else {\n        data2 = {\n          routes: {\n            [routeId]: typed\n          }\n        };\n      }\n    }\n    return {\n      status: res.status,\n      data: data2\n    };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return (0, import_turbo_stream.decode)(body, {\n    plugins: [(type, ...rest) => {\n      if (type === \"SanitizedError\") {\n        let [name, message, stack] = rest;\n        let Constructor = Error;\n        if (name && name in global && typeof global[name] === \"function\") {\n          Constructor = global[name];\n        }\n        let error = new Constructor(message);\n        error.stack = stack;\n        return {\n          value: error\n        };\n      }\n      if (type === \"ErrorResponse\") {\n        let [data2, status, statusText] = rest;\n        return {\n          value: new ErrorResponseImpl(status, statusText, data2)\n        };\n      }\n      if (type === \"SingleFetchRedirect\") {\n        return {\n          value: {\n            [SingleFetchRedirectSymbol]: rest[0]\n          }\n        };\n      }\n      if (type === \"SingleFetchClassInstance\") {\n        return {\n          value: rest[0]\n        };\n      }\n      if (type === \"SingleFetchFallback\") {\n        return {\n          value: void 0\n        };\n      }\n    }]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...(revalidate ? {\n          \"X-Remix-Revalidate\": \"yes\"\n        } : null),\n        ...(reload ? {\n          \"X-Remix-Reload-Document\": \"yes\"\n        } : null),\n        ...(replace2 ? {\n          \"X-Remix-Replace\": \"yes\"\n        } : null)\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar React8 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/routes.tsx\nvar React7 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar React5 = __toESM(require(\"react\"));\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    }\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */React5.createElement(RemixRootDefaultErrorBoundary, {\n        error: this.state.error,\n        isOutsideRemixApp: true\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */React5.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n    }\n  });\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */React5.createElement(BoundaryShell, {\n      title: \"Unhandled Thrown Response!\"\n    }, /* @__PURE__ */React5.createElement(\"h1\", {\n      style: {\n        fontSize: \"24px\"\n      }\n    }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */React5.createElement(BoundaryShell, {\n    title: \"Application Error!\",\n    isOutsideRemixApp\n  }, /* @__PURE__ */React5.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), /* @__PURE__ */React5.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, errorInstance.stack), heyDeveloper);\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let {\n    routeModules\n  } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */React5.createElement(\"html\", {\n    lang: \"en\"\n  }, /* @__PURE__ */React5.createElement(\"head\", null, /* @__PURE__ */React5.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /* @__PURE__ */React5.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /* @__PURE__ */React5.createElement(\"title\", null, title)), /* @__PURE__ */React5.createElement(\"body\", null, /* @__PURE__ */React5.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, children, renderScripts ? /* @__PURE__ */React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nvar React6 = __toESM(require(\"react\"));\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */React6.createElement(BoundaryShell, {\n    title: \"Loading...\",\n    renderScripts: true\n  }, /* @__PURE__ */React6.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n    }\n  }));\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach(route => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */React7.createElement(RemixRootDefaultErrorBoundary, {\n    error: useRouteError()\n  }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...(Component4 ? {\n        element: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(Component4, null))\n      } : {\n        Component: Component4\n      }),\n      ...(ErrorBoundary ? {\n        errorElement: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(ErrorBoundary, null))\n      } : {\n        ErrorBoundary\n      }),\n      ...(HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(HydrateFallback, null))\n      } : {\n        HydrateFallback\n      })\n    };\n  }\n  return {\n    Component: Component4,\n    ErrorBoundary,\n    HydrateFallback\n  };\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, \"\", groupRoutesByParentId(manifest), needsRevalidation);\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(typeof singleFetch === \"function\", \"No single fetch function available for route handler\");\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(/* @vite-ignore */\n      /* webpackIgnore: true */\n      modulePath);\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(dataRoute.path, routeModule, route, ssr, needsRevalidation)\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({\n        request,\n        params,\n        context\n      }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(routeModule, \"No `routeModule` available for critical-route loader\");\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(route, routeModule, isSpaMode);\n      dataRoute.action = ({\n        request,\n        params,\n        context\n      }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(routeModule, \"No `routeModule` available for critical-route action\");\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise(resolve => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModulesCache);\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let {\n            clientLoader\n          } = route.clientLoaderModule ? await import(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientLoaderModule) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientActionModule) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let {\n            clientAction\n          } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let {\n            unstable_clientMiddleware\n          } = route.clientMiddlewareModule ? await import(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientMiddlewareModule) : await getLazyRoute();\n          invariant2(unstable_clientMiddleware, \"No `unstable_clientMiddleware` export found\");\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(dataRoute.path, lazyRoute, route, ssr, needsRevalidation);\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, route.id, routesByParentId, needsRevalidation);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(manifestRoute.id, route.shouldRevalidate, needsRevalidation);\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map(p => p.paramName) : [];\n    const didParamsChange = opts => myParams.some(p => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return opts => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return opts => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return opts => fn({\n      ...opts,\n      defaultShouldRevalidate: true\n    });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return arg => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([prefetchRouteCssPromise, prefetchStyleLinks(route, routeModule)]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(ssr) {\n  return ssr === true;\n}\nfunction getPartialManifest({\n  sri,\n  ...manifest\n}, router2) {\n  let routeIds = new Set(router2.state.matches.map(m => m.route.id));\n  let segments = router2.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach(path => {\n    let matches = matchRoutes(router2.routes, path, router2.basename);\n    if (matches) {\n      matches.forEach(m => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce((acc, id) => Object.assign(acc, {\n    [id]: manifest.routes[id]\n  }), {});\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(ssr)) {\n    return void 0;\n  }\n  return async ({\n    path,\n    patch,\n    signal,\n    fetcherKey\n  }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches([path], fetcherKey ? window.location.href : path, manifest, routeModules, ssr, isSpaMode, basename, patch, signal);\n  };\n}\nfunction useFogOFWarDiscovery(router2, manifest, routeModules, ssr, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter(path => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(lazyPaths, null, manifest, routeModules, ssr, isSpaMode, router2.basename, router2.patchRoutes);\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router2]);\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(/\\/+/g, \"/\");\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach(path => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, {\n      signal\n    });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\");\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\"Unable to discover routes due to manifest version mismatch.\");\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      throw new Error(\"Detected manifest version mismatch, reloading...\");\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach(p => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */new Set();\n  Object.values(patches).forEach(patch => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(parentId => patchRoutes(parentId || null, createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)));\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(context, \"You must render this element inside a <HydratedRouter> element\");\n  return context;\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex(m => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    ssr,\n    renderMeta\n  } = useFrameworkContext();\n  let {\n    router: router2,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext();\n  let {\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module: module2\n      } = manifestEntry;\n      let chunks = [...(clientActionModule ? [{\n        module: clientActionModule,\n        varName: `${routeVarName}_clientAction`\n      }] : []), ...(clientLoaderModule ? [{\n        module: clientLoaderModule,\n        varName: `${routeVarName}_clientLoader`\n      }] : []), ...(clientMiddlewareModule ? [{\n        module: clientMiddlewareModule,\n        varName: `${routeVarName}_clientMiddleware`\n      }] : []), ...(hydrateFallbackModule ? [{\n        module: hydrateFallbackModule,\n        varName: `${routeVarName}_HydrateFallback`\n      }] : []), {\n        module: module2,\n        varName: `${routeVarName}_main`\n      }];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module2)};`;\n      }\n      let chunkImportsSnippet = chunks.map(chunk => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map(chunk => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ?\n    // Inline a minimal manifest with the SSR matches\n    `window.__reactRouterManifest = ${JSON.stringify(getPartialManifest(manifest, router2), null, 2)};` : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */React9.createElement(React9.Fragment, null, /* @__PURE__ */React9.createElement(\"script\", {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: void 0\n    }), /* @__PURE__ */React9.createElement(\"script\", {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    }));\n  }, []);\n  let preloads = isHydrated ? [] : dedupe(manifest.entry.imports.concat(getModuleLinkHrefs(matches, manifest, {\n    includeHydrateFallback: true\n  })));\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  return isHydrated ? null : /* @__PURE__ */React9.createElement(React9.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */React9.createElement(\"script\", {\n    \"rr-importmap\": \"\",\n    type: \"importmap\",\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: JSON.stringify({\n        integrity: sri\n      })\n    }\n  }) : null, !enableFogOfWar ? /* @__PURE__ */React9.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.url,\n    crossOrigin: props.crossOrigin,\n    integrity: sri[manifest.url],\n    suppressHydrationWarning: true\n  }) : null, /* @__PURE__ */React9.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: props.crossOrigin,\n    integrity: sri[manifest.entry.module],\n    suppressHydrationWarning: true\n  }), preloads.map(path => /* @__PURE__ */React9.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin,\n    integrity: sri[path],\n    suppressHydrationWarning: true\n  })), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {}\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom-export/dom-router-provider.tsx\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React10.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n}\n\n// lib/dom-export/hydrated-router.tsx\nvar React11 = __toESM(require(\"react\"));\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(importMap.textContent).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  unstable_getContext\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n  let loaderData = ssrInfo.context.state.loaderData;\n  if (ssrInfo.context.isSpaMode) {\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: {\n        ...loaderData\n      }\n    };\n    let initialMatches = matchRoutes(routes, window.location, window.__reactRouterContext?.basename);\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, ssrInfo.context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getSingleFetchDataStrategy(() => router2, routeId => {\n      let manifestRoute = ssrInfo.manifest.routes[routeId];\n      invariant(manifestRoute, \"Route not found in manifest/routeModules\");\n      let routeModule = ssrInfo.routeModules[routeId];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        // In some cases the module may not be loaded yet and we don't care\n        // if it's got shouldRevalidate or not\n        hasShouldRevalidate: routeModule ? routeModule.shouldRevalidate != null : void 0\n      };\n    }, ssrInfo.context.ssr, ssrInfo.context.basename),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React11.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React11.useState(router.state.location);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */\n    React11.createElement(React11.Fragment, null, /* @__PURE__ */React11.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        ssr: ssrInfo.context.ssr,\n        isSpaMode: ssrInfo.context.isSpaMode\n      }\n    }, /* @__PURE__ */React11.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React11.createElement(RouterProvider2, {\n      router\n    }))), /* @__PURE__ */React11.createElement(React11.Fragment, null))\n  );\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  HydratedRouter,\n  RouterProvider\n});","map":{"version":3,"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__typeError","msg","TypeError","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","__accessCheck","obj","member","has","__privateGet","getter","__privateAdd","WeakSet","add","set","dom_export_exports","HydratedRouter","RouterProvider","RouterProvider2","module","exports","React10","require","ReactDOM","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window2","globalHistory","pathname","search","hash","location","createLocation","state","usr","createBrowserHref","createPath","getUrlBasedHistory","invariant","message","Error","warning","cond","console","warn","e","createKey","Math","random","toString","substring","getHistoryState","index","idx","current","parsePath","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","getLocation","createHref","validateLocation","window","document","defaultView","v5Compat","history","action","listener","getIndex","replaceState","handlePop","nextIndex","delta","push","historyState","url","pushState","error","DOMException","assign","replace2","createURL","base","origin","href","replace","URL","listen","fn","addEventListener","removeEventListener","encodeLocation","go","n","_map","unstable_RouterContextProvider","constructor","init","Map","context","defaultValue","WeakMap","unsupportedLazyRouteObjectKeys","Set","isUnsupportedLazyRouteObjectKey","unsupportedLazyRouteFunctionKeys","isUnsupportedLazyRouteFunctionKey","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties2","parentPath","manifest","map","treePath","String","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","length","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","startsWith","slice","joinPaths","routesMeta","concat","score","computeScore","forEach","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","pattern","matcher","compiledParams","compilePath","captureGroups","memo2","paramName","splatValue","regexpSource","_","RegExp","v","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","getResolveToMatches","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","DataWithResponseInit","data2","type","status","redirect","responseInit","headers","Headers","Response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","ResetLoaderDataSymbol","Symbol","createRouter","routerWindow","isBrowser","createElement","hydrationRouteProperties2","hydrationRouteProperties","mapRouteProperties","dataRoutes","inFlightDataRoutes","dataStrategyImpl","dataStrategy","defaultDataStrategyWithMiddleware","future","unstable_middleware","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialMatchesIsFOW","initialErrors","patchRoutesOnNavigation","getInternalRouterError","getShortCircuitMatches","fogOfWar","checkFogOfWar","active","initialized","m","lazy","loader","errors","findIndex","shouldLoadRouteOnHydration","router2","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","fetchersQueuedForDeletion","blockerFunctions","unblockBlockerHistoryUpdate","pendingRevalidationDfd","initialize","size","blockerKey","shouldBlockNavigation","currentLocation","nextLocation","nextHistoryUpdatePromise","Promise","resolve","updateBlocker","then","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","initialHydration","dispose","clear","abort","deleteFetcher","deleteBlocker","subscribe","delete","newState","opts","unmountedFetchers","mountedFetchers","fetcher","subscriber","deletedFetchers","viewTransitionOpts","flushSync","completeNavigation","flushSync2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","k","priorPaths","toPaths","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","fromRouteId","relative","submission","normalizeNavigateOptions","userReplace","pendingError","enableViewTransition","viewTransition","revalidate","createDeferred","interruptActiveLoads","promise","startUninterruptedRevalidation","overrideNavigation","saveScrollPosition","routesToUse","loadingNavigation","isHashChangeOnly","notFoundMatches","handleNavigational404","AbortController","request","createClientSideRequest","signal","scopedContext","unstable_getContext","pendingActionResult","findNearestBoundary","actionResult","handleAction","shortCircuited","routeId","isErrorResult","getLoadingNavigation","updatedMatches","handleLoaders","fetcherSubmission","getActionDataForCommit","isFogOfWar","getSubmittingNavigation","discoverResult","discoverRoutes","boundaryId","partialMatches","actionMatch","getTargetMatch","method","dsMatches","getTargetedDataStrategyMatches","results","callDataStrategy","aborted","isRedirectResult","location2","normalizeRedirectLocation","response","startRedirectNavigation","boundaryMatch","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","revalidatingFetchers","getMatchesToLoad","shouldLoad","updatedFetchers2","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","controller","abortPendingFetchRevalidations","f","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect2","findRedirect","processLoaderData","updatedFetchers","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch2","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","detectAndHandle405Error","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","fetchMatches","actionResults","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","existingFetcher2","r","doneFetcher","isNavigation","redirectLocation","isDocumentReload","redirectNavigationType","fetcherKey","dataResults","callDataStrategyImpl","entries","isRedirectDataStrategyResult","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","loaderResultsPromise","fetcherResultsPromise","acc","getFetcher","queueFetcherForDeletion","count","markFetchersDone","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","Array","blockerFunction","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","fogMatches","isNonHMR","localManifest","patch","patchRoutesImpl","newMatches","newPartialMatches","_internalSetRoutes","newRoutes","patchRoutes","fetch","_internalFetchControllers","isSubmissionNavigation","body","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","URLSearchParams","indexValues","getAll","append","qs","isFetcher","isValidMethod","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","parse","searchParams","convertFormDataToSearchParams","convertSearchParamsToFormData","lazyRoutePropertiesToSkip","currentUrl","nextUrl","maxIdx","actionStatus","statusCode","shouldSkipRevalidation","baseShouldRevalidateArgs","currentParams","nextParams","forceShouldLoad","isNewLoader","getDataStrategyMatch","defaultShouldRevalidate","isNewRouteInstance","shouldRevalidateArgs","shouldRevalidateLoader","fetcherMatches","fetcherMatch","fetchController","fetcherDsMatches","hasData","hasError","hydrate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","childrenToPatch","uniqueChildren","newRoute","existingRoute","isSameRoute","aChild","bChild","lazyRoutePropertyCache","loadLazyRouteProperty","routeToUpdate","lazyFn","cache","cachedPromise","propertyPromise","isUnsupported","staticRouteValue","isStaticallyDefined","values","lazyRouteFunctionCache","loadLazyRoute","lazyRoutePromise","lazyHandlerPromise","lazyRoutePromise2","lazyRoute","routeUpdates","lazyRouteProperty","lazyValue","catch","lazyKeys","lazyPropertyPromises","defaultDataStrategy","args","matchesToLoad","keyedResults","runMiddlewarePipeline","propagateResult","handler","errorHandler","middlewareState","handlerResult","tuples","flatMap","callRouteMiddleware","middlewareError","middlewares","reason","tuple","middleware","nextCalled","nextResult","next","getDataStrategyMatchLazyPromises","lazyMiddlewarePromise","lazyRoutePromises","unstable_shouldRevalidateArgs","isUsingNewApi","_lazyPromises","unstable_shouldCallHandler","handlerOverride","callLoaderOrAction","targetMatch","isStaticHandler","dataStrategyArgs","unstable_runClientMiddleware","cb","typedDataStrategyArgs","onReject","isAction","runHandler","reject","abortPromise","actualHandler","ctx","handlerPromise","val","race","handlerError","handler2","dataStrategyResult","isResponse","contentType","isDataWithResponseInit","trimmedMatches","normalizedLocation","protocol","isSameBasename","Request","processRouteLoaderData","skipLoaderErrorBubbling","foundError","loaderHeaders","newLoaderData","mergedLoaderData","merged","eligibleMatches","reverse","find","errorMessage","_window","transitions","sessionPositions","sessionStorage","getItem","isArray","setItem","res","rej","React3","React","DataRouterContext","createContext","displayName","DataRouterStateContext","ViewTransitionContext","isTransitioning","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","React2","ENABLE_DEV_WARNINGS","useInRouterContext","useContext","useLocation","OutletContext","useRoutesImpl","dataRouterState","navigator","navigator2","static","isStatic","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","element","Component","renderedMatches","_renderMatches","Provider","navigationType","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","Fragment","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","dataRouterContext","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","errorIndex","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","errors2","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","matches2","getChildren","getDataRouterConsoleError","hookName","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","alreadyWarned","alreadyWarned2","warnOnce","condition","ENABLE_DEV_WARNINGS2","Deferred","router","reactDomFlushSyncImpl","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","setState","useCallback","isViewTransitionAvailable","startViewTransition","startTransition","skipTransition","t","finished","finally","useLayoutEffect","useEffect","renderPromise","transition2","useMemo","state2","Router","MemoizedDataRoutes","memo","DataRoutes","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","React9","invariant2","loadRouteModule","routeModulesCache","routeModule","__reactRouterContext","isSpaMode","reload","getRouteCssDescriptors","css","rel","prefetchRouteCss","descriptors","prefetchStyleLink","prefetchStyleLinks","links","isPreloadSupported","styleLinks","descriptor","isPageLinkDescriptor","as","media","matchMedia","querySelector","link","removeLink","head","contains","removeChild","onload","onerror","appendChild","object","page","getModuleLinkHrefs","includeHydrateFallback","dedupeHrefs","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","flat","_isPreloadSupported","el","relList","supports","createHtml","html","__html","React4","import_turbo_stream","createRequestInit","SingleFetchRedirectSymbol","NO_BODY_STATUS_CODES","getSingleFetchDataStrategy","getRouter","getRouteInfo","ssr","getSingleFetchDataStrategyImpl","fetchAndDecodeViaTurboStream","fetchAndDecode","singleFetchActionStrategy","foundRevalidatingServerLoader","hasLoader","hasClientLoader","nonSsrStrategy","singleFetchLoaderFetcherStrategy","singleFetchLoaderNavigationStrategy","result2","unwrapSingleFetchResult","routesParams","foundOptOutRoute","routeDfds","createDeferred2","singleFetchDfd","resolvePromise","hasShouldRevalidate","shouldCall","d","__reactRouterHdrActive","targetRoutes","stripIndexParam","indexValuesToKeep","indexValue","toKeep","singleFetchUrl","reqUrl","decodeViaTurboStream","typed","global","decode","plugins","Constructor","routeResult","React8","React7","React5","RemixErrorBoundary","RemixRootDefaultErrorBoundary","isOutsideRemixApp","heyDeveloper","dangerouslySetInnerHTML","BoundaryShell","title","fontSize","errorInstance","errorString","background","color","overflow","renderScripts","routeModules","useFrameworkContext","root","Layout","lang","charSet","content","fontFamily","Scripts","React6","RemixRootDefaultHydrateFallback","groupRoutesByParentId","parentId","getRouteComponents","Component4","getRouteModuleComponent","createClientRoutesWithHMRRevalidationOptOut","needsRevalidation","initialState","createClientRoutes","preventInvalidServerHandlerCall","hasAction","noActionDefinedError","article","routesByParentId","fetchServerHandler","singleFetch","fetchServerLoader","fetchServerAction","prefetchModule","modulePath","prefetchRouteModuleChunks","route2","prefetchStylesAndCallHandler","cachedModule","linkPrefetchPromise","dataRoute","unstable_clientMiddleware","getShouldRevalidateFunction","hasInitialData","initialData","hasInitialError","initialError","isHydrationRequest","clientLoader","serverLoader","shouldHydrateRouteLoader","clientAction","serverAction","hasClientAction","getLazyRoute","setTimeout","routeModulePromise","loadRouteModuleWithBlockingLinks","clientActionPromise","hasClientMiddleware","clientMiddlewareModule","manifestRoute","wrapShouldRevalidateForHdr","myParams","p","didParamsChange","routeShouldRevalidate","handledRevalidation","prefetchRouteCssPromise","default","isEmptyObject","nextPaths","discoveredPathsMaxSize","discoveredPaths","URL_LIMIT","isFogOfWarEnabled","getPartialManifest","sri","routeIds","initialRoutes","getPatchRoutesOnNavigationFunction","fetchAndApplyManifestPatches","useFogOFWarDiscovery","connection","saveData","registerElement","tagName","getAttribute","fetchPatches","querySelectorAll","lazyPaths","debouncedFetchPatches","debounce","observer","MutationObserver","observe","documentElement","subtree","childList","attributes","attributeFilter","disconnect","MANIFEST_VERSION_STORAGE_KEY","errorReloadPath","manifestPath","version","serverPatches","ok","removeItem","knownRoutes","patches","addToFifoQueue","parentIds","queue","callback","wait","timeoutId","clearTimeout","useDataRouterContext","useDataRouterStateContext","FrameworkContext","getActiveMatches","isHydrated","errorIdx","serverHandoffString","renderMeta","routerMatches","enableFogOfWar","didRenderScripts","initialScripts","streamScript","contextScript","routeModulesScript","hmr","runtime","routeIndex","routeVarName","manifestEntry","module2","chunks","varName","chunkImportsSnippet","chunk","mergedChunksSnippet","entry","suppressHydrationWarning","async","preloads","dedupe","integrity","crossOrigin","array","deserializeErrors","serialized","__type","__subType","ErrorConstructor","React11","ssrInfo","initSsrInfo","__reactRouterManifest","__reactRouterRouteModules","importMap","textContent","err","stateDecodingPromise","routerInitialized","createHydratedRouter","localSsrInfo","stream","createRoutesForHMR","__reactRouterDataRouter","criticalCss","setCriticalCss","process","env","NODE_ENV","__reactRouterClearCriticalCss","setLocation"],"sources":["D:/ITSS_Project/frontend/node_modules/react-router/dist/development/dom-export.js"],"sourcesContent":["/**\r\n * react-router v7.5.1\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\n\"use strict\";\r\nvar __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __typeError = (msg) => {\r\n  throw TypeError(msg);\r\n};\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\r\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\r\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\r\n\r\n// dom-export.ts\r\nvar dom_export_exports = {};\r\n__export(dom_export_exports, {\r\n  HydratedRouter: () => HydratedRouter,\r\n  RouterProvider: () => RouterProvider2\r\n});\r\nmodule.exports = __toCommonJS(dom_export_exports);\r\n\r\n// lib/dom-export/dom-router-provider.tsx\r\nvar React10 = __toESM(require(\"react\"));\r\nvar ReactDOM = __toESM(require(\"react-dom\"));\r\n\r\n// lib/router/history.ts\r\nvar PopStateEventType = \"popstate\";\r\nfunction createBrowserHistory(options = {}) {\r\n  function createBrowserLocation(window2, globalHistory) {\r\n    let { pathname, search, hash } = window2.location;\r\n    return createLocation(\r\n      \"\",\r\n      { pathname, search, hash },\r\n      // state defaults to `null` because `window.history.state` does\r\n      globalHistory.state && globalHistory.state.usr || null,\r\n      globalHistory.state && globalHistory.state.key || \"default\"\r\n    );\r\n  }\r\n  function createBrowserHref(window2, to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  return getUrlBasedHistory(\r\n    createBrowserLocation,\r\n    createBrowserHref,\r\n    null,\r\n    options\r\n  );\r\n}\r\nfunction invariant(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\nfunction warning(cond, message) {\r\n  if (!cond) {\r\n    if (typeof console !== \"undefined\") console.warn(message);\r\n    try {\r\n      throw new Error(message);\r\n    } catch (e) {\r\n    }\r\n  }\r\n}\r\nfunction createKey() {\r\n  return Math.random().toString(36).substring(2, 10);\r\n}\r\nfunction getHistoryState(location, index) {\r\n  return {\r\n    usr: location.state,\r\n    key: location.key,\r\n    idx: index\r\n  };\r\n}\r\nfunction createLocation(current, to, state = null, key) {\r\n  let location = {\r\n    pathname: typeof current === \"string\" ? current : current.pathname,\r\n    search: \"\",\r\n    hash: \"\",\r\n    ...typeof to === \"string\" ? parsePath(to) : to,\r\n    state,\r\n    // TODO: This could be cleaned up.  push/replace should probably just take\r\n    // full Locations now and avoid the need to run through this flow at all\r\n    // But that's a pretty big refactor to the current test suite so going to\r\n    // keep as is for the time being and just let any incoming keys take precedence\r\n    key: to && to.key || key || createKey()\r\n  };\r\n  return location;\r\n}\r\nfunction createPath({\r\n  pathname = \"/\",\r\n  search = \"\",\r\n  hash = \"\"\r\n}) {\r\n  if (search && search !== \"?\")\r\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\r\n  if (hash && hash !== \"#\")\r\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\r\n  return pathname;\r\n}\r\nfunction parsePath(path) {\r\n  let parsedPath = {};\r\n  if (path) {\r\n    let hashIndex = path.indexOf(\"#\");\r\n    if (hashIndex >= 0) {\r\n      parsedPath.hash = path.substring(hashIndex);\r\n      path = path.substring(0, hashIndex);\r\n    }\r\n    let searchIndex = path.indexOf(\"?\");\r\n    if (searchIndex >= 0) {\r\n      parsedPath.search = path.substring(searchIndex);\r\n      path = path.substring(0, searchIndex);\r\n    }\r\n    if (path) {\r\n      parsedPath.pathname = path;\r\n    }\r\n  }\r\n  return parsedPath;\r\n}\r\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options = {}) {\r\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\r\n  let globalHistory = window2.history;\r\n  let action = \"POP\" /* Pop */;\r\n  let listener = null;\r\n  let index = getIndex();\r\n  if (index == null) {\r\n    index = 0;\r\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\r\n  }\r\n  function getIndex() {\r\n    let state = globalHistory.state || { idx: null };\r\n    return state.idx;\r\n  }\r\n  function handlePop() {\r\n    action = \"POP\" /* Pop */;\r\n    let nextIndex = getIndex();\r\n    let delta = nextIndex == null ? null : nextIndex - index;\r\n    index = nextIndex;\r\n    if (listener) {\r\n      listener({ action, location: history.location, delta });\r\n    }\r\n  }\r\n  function push(to, state) {\r\n    action = \"PUSH\" /* Push */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex() + 1;\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    try {\r\n      globalHistory.pushState(historyState, \"\", url);\r\n    } catch (error) {\r\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\r\n        throw error;\r\n      }\r\n      window2.location.assign(url);\r\n    }\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 1 });\r\n    }\r\n  }\r\n  function replace2(to, state) {\r\n    action = \"REPLACE\" /* Replace */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex();\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    globalHistory.replaceState(historyState, \"\", url);\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 0 });\r\n    }\r\n  }\r\n  function createURL(to) {\r\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\r\n    let href = typeof to === \"string\" ? to : createPath(to);\r\n    href = href.replace(/ $/, \"%20\");\r\n    invariant(\r\n      base,\r\n      `No window.location.(origin|href) available to create URL for href: ${href}`\r\n    );\r\n    return new URL(href, base);\r\n  }\r\n  let history = {\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getLocation(window2, globalHistory);\r\n    },\r\n    listen(fn) {\r\n      if (listener) {\r\n        throw new Error(\"A history only accepts one active listener\");\r\n      }\r\n      window2.addEventListener(PopStateEventType, handlePop);\r\n      listener = fn;\r\n      return () => {\r\n        window2.removeEventListener(PopStateEventType, handlePop);\r\n        listener = null;\r\n      };\r\n    },\r\n    createHref(to) {\r\n      return createHref(window2, to);\r\n    },\r\n    createURL,\r\n    encodeLocation(to) {\r\n      let url = createURL(to);\r\n      return {\r\n        pathname: url.pathname,\r\n        search: url.search,\r\n        hash: url.hash\r\n      };\r\n    },\r\n    push,\r\n    replace: replace2,\r\n    go(n) {\r\n      return globalHistory.go(n);\r\n    }\r\n  };\r\n  return history;\r\n}\r\n\r\n// lib/router/utils.ts\r\nvar _map;\r\nvar unstable_RouterContextProvider = class {\r\n  constructor(init) {\r\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\r\n    if (init) {\r\n      for (let [context, value] of init) {\r\n        this.set(context, value);\r\n      }\r\n    }\r\n  }\r\n  get(context) {\r\n    if (__privateGet(this, _map).has(context)) {\r\n      return __privateGet(this, _map).get(context);\r\n    }\r\n    if (context.defaultValue !== void 0) {\r\n      return context.defaultValue;\r\n    }\r\n    throw new Error(\"No value found for context\");\r\n  }\r\n  set(context, value) {\r\n    __privateGet(this, _map).set(context, value);\r\n  }\r\n};\r\n_map = new WeakMap();\r\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\r\n  \"lazy\",\r\n  \"caseSensitive\",\r\n  \"path\",\r\n  \"id\",\r\n  \"index\",\r\n  \"children\"\r\n]);\r\nfunction isUnsupportedLazyRouteObjectKey(key) {\r\n  return unsupportedLazyRouteObjectKeys.has(\r\n    key\r\n  );\r\n}\r\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\r\n  \"lazy\",\r\n  \"caseSensitive\",\r\n  \"path\",\r\n  \"id\",\r\n  \"index\",\r\n  \"unstable_middleware\",\r\n  \"children\"\r\n]);\r\nfunction isUnsupportedLazyRouteFunctionKey(key) {\r\n  return unsupportedLazyRouteFunctionKeys.has(\r\n    key\r\n  );\r\n}\r\nfunction isIndexRoute(route) {\r\n  return route.index === true;\r\n}\r\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\r\n  return routes.map((route, index) => {\r\n    let treePath = [...parentPath, String(index)];\r\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\r\n    invariant(\r\n      route.index !== true || !route.children,\r\n      `Cannot specify children on an index route`\r\n    );\r\n    invariant(\r\n      !manifest[id],\r\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\r\n    );\r\n    if (isIndexRoute(route)) {\r\n      let indexRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id\r\n      };\r\n      manifest[id] = indexRoute;\r\n      return indexRoute;\r\n    } else {\r\n      let pathOrLayoutRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id,\r\n        children: void 0\r\n      };\r\n      manifest[id] = pathOrLayoutRoute;\r\n      if (route.children) {\r\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\r\n          route.children,\r\n          mapRouteProperties2,\r\n          treePath,\r\n          manifest\r\n        );\r\n      }\r\n      return pathOrLayoutRoute;\r\n    }\r\n  });\r\n}\r\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\r\n  return matchRoutesImpl(routes, locationArg, basename, false);\r\n}\r\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\r\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n  let pathname = stripBasename(location.pathname || \"/\", basename);\r\n  if (pathname == null) {\r\n    return null;\r\n  }\r\n  let branches = flattenRoutes(routes);\r\n  rankRouteBranches(branches);\r\n  let matches = null;\r\n  for (let i = 0; matches == null && i < branches.length; ++i) {\r\n    let decoded = decodePath(pathname);\r\n    matches = matchRouteBranch(\r\n      branches[i],\r\n      decoded,\r\n      allowPartial\r\n    );\r\n  }\r\n  return matches;\r\n}\r\nfunction convertRouteMatchToUiMatch(match, loaderData) {\r\n  let { route, pathname, params } = match;\r\n  return {\r\n    id: route.id,\r\n    pathname,\r\n    params,\r\n    data: loaderData[route.id],\r\n    handle: route.handle\r\n  };\r\n}\r\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\r\n  let flattenRoute = (route, index, relativePath) => {\r\n    let meta = {\r\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\r\n      caseSensitive: route.caseSensitive === true,\r\n      childrenIndex: index,\r\n      route\r\n    };\r\n    if (meta.relativePath.startsWith(\"/\")) {\r\n      invariant(\r\n        meta.relativePath.startsWith(parentPath),\r\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\r\n      );\r\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\r\n    }\r\n    let path = joinPaths([parentPath, meta.relativePath]);\r\n    let routesMeta = parentsMeta.concat(meta);\r\n    if (route.children && route.children.length > 0) {\r\n      invariant(\r\n        // Our types know better, but runtime JS may not!\r\n        // @ts-expect-error\r\n        route.index !== true,\r\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\r\n      );\r\n      flattenRoutes(route.children, branches, routesMeta, path);\r\n    }\r\n    if (route.path == null && !route.index) {\r\n      return;\r\n    }\r\n    branches.push({\r\n      path,\r\n      score: computeScore(path, route.index),\r\n      routesMeta\r\n    });\r\n  };\r\n  routes.forEach((route, index) => {\r\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\r\n      flattenRoute(route, index);\r\n    } else {\r\n      for (let exploded of explodeOptionalSegments(route.path)) {\r\n        flattenRoute(route, index, exploded);\r\n      }\r\n    }\r\n  });\r\n  return branches;\r\n}\r\nfunction explodeOptionalSegments(path) {\r\n  let segments = path.split(\"/\");\r\n  if (segments.length === 0) return [];\r\n  let [first, ...rest] = segments;\r\n  let isOptional = first.endsWith(\"?\");\r\n  let required = first.replace(/\\?$/, \"\");\r\n  if (rest.length === 0) {\r\n    return isOptional ? [required, \"\"] : [required];\r\n  }\r\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\r\n  let result = [];\r\n  result.push(\r\n    ...restExploded.map(\r\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\r\n    )\r\n  );\r\n  if (isOptional) {\r\n    result.push(...restExploded);\r\n  }\r\n  return result.map(\r\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\r\n  );\r\n}\r\nfunction rankRouteBranches(branches) {\r\n  branches.sort(\r\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\r\n      a.routesMeta.map((meta) => meta.childrenIndex),\r\n      b.routesMeta.map((meta) => meta.childrenIndex)\r\n    )\r\n  );\r\n}\r\nvar paramRe = /^:[\\w-]+$/;\r\nvar dynamicSegmentValue = 3;\r\nvar indexRouteValue = 2;\r\nvar emptySegmentValue = 1;\r\nvar staticSegmentValue = 10;\r\nvar splatPenalty = -2;\r\nvar isSplat = (s) => s === \"*\";\r\nfunction computeScore(path, index) {\r\n  let segments = path.split(\"/\");\r\n  let initialScore = segments.length;\r\n  if (segments.some(isSplat)) {\r\n    initialScore += splatPenalty;\r\n  }\r\n  if (index) {\r\n    initialScore += indexRouteValue;\r\n  }\r\n  return segments.filter((s) => !isSplat(s)).reduce(\r\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\r\n    initialScore\r\n  );\r\n}\r\nfunction compareIndexes(a, b) {\r\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\r\n  return siblings ? (\r\n    // If two routes are siblings, we should try to match the earlier sibling\r\n    // first. This allows people to have fine-grained control over the matching\r\n    // behavior by simply putting routes with identical paths in the order they\r\n    // want them tried.\r\n    a[a.length - 1] - b[b.length - 1]\r\n  ) : (\r\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\r\n    // so they sort equally.\r\n    0\r\n  );\r\n}\r\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\r\n  let { routesMeta } = branch;\r\n  let matchedParams = {};\r\n  let matchedPathname = \"/\";\r\n  let matches = [];\r\n  for (let i = 0; i < routesMeta.length; ++i) {\r\n    let meta = routesMeta[i];\r\n    let end = i === routesMeta.length - 1;\r\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\r\n    let match = matchPath(\r\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\r\n      remainingPathname\r\n    );\r\n    let route = meta.route;\r\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\r\n      match = matchPath(\r\n        {\r\n          path: meta.relativePath,\r\n          caseSensitive: meta.caseSensitive,\r\n          end: false\r\n        },\r\n        remainingPathname\r\n      );\r\n    }\r\n    if (!match) {\r\n      return null;\r\n    }\r\n    Object.assign(matchedParams, match.params);\r\n    matches.push({\r\n      // TODO: Can this as be avoided?\r\n      params: matchedParams,\r\n      pathname: joinPaths([matchedPathname, match.pathname]),\r\n      pathnameBase: normalizePathname(\r\n        joinPaths([matchedPathname, match.pathnameBase])\r\n      ),\r\n      route\r\n    });\r\n    if (match.pathnameBase !== \"/\") {\r\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\r\n    }\r\n  }\r\n  return matches;\r\n}\r\nfunction matchPath(pattern, pathname) {\r\n  if (typeof pattern === \"string\") {\r\n    pattern = { path: pattern, caseSensitive: false, end: true };\r\n  }\r\n  let [matcher, compiledParams] = compilePath(\r\n    pattern.path,\r\n    pattern.caseSensitive,\r\n    pattern.end\r\n  );\r\n  let match = pathname.match(matcher);\r\n  if (!match) return null;\r\n  let matchedPathname = match[0];\r\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\r\n  let captureGroups = match.slice(1);\r\n  let params = compiledParams.reduce(\r\n    (memo2, { paramName, isOptional }, index) => {\r\n      if (paramName === \"*\") {\r\n        let splatValue = captureGroups[index] || \"\";\r\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\r\n      }\r\n      const value = captureGroups[index];\r\n      if (isOptional && !value) {\r\n        memo2[paramName] = void 0;\r\n      } else {\r\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\r\n      }\r\n      return memo2;\r\n    },\r\n    {}\r\n  );\r\n  return {\r\n    params,\r\n    pathname: matchedPathname,\r\n    pathnameBase,\r\n    pattern\r\n  };\r\n}\r\nfunction compilePath(path, caseSensitive = false, end = true) {\r\n  warning(\r\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\r\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n  );\r\n  let params = [];\r\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\r\n    /\\/:([\\w-]+)(\\?)?/g,\r\n    (_, paramName, isOptional) => {\r\n      params.push({ paramName, isOptional: isOptional != null });\r\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\r\n    }\r\n  );\r\n  if (path.endsWith(\"*\")) {\r\n    params.push({ paramName: \"*\" });\r\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\r\n  } else if (end) {\r\n    regexpSource += \"\\\\/*$\";\r\n  } else if (path !== \"\" && path !== \"/\") {\r\n    regexpSource += \"(?:(?=\\\\/|$))\";\r\n  } else {\r\n  }\r\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\r\n  return [matcher, params];\r\n}\r\nfunction decodePath(value) {\r\n  try {\r\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\r\n  } catch (error) {\r\n    warning(\r\n      false,\r\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\r\n    );\r\n    return value;\r\n  }\r\n}\r\nfunction stripBasename(pathname, basename) {\r\n  if (basename === \"/\") return pathname;\r\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\r\n    return null;\r\n  }\r\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\r\n  let nextChar = pathname.charAt(startIndex);\r\n  if (nextChar && nextChar !== \"/\") {\r\n    return null;\r\n  }\r\n  return pathname.slice(startIndex) || \"/\";\r\n}\r\nfunction resolvePath(to, fromPathname = \"/\") {\r\n  let {\r\n    pathname: toPathname,\r\n    search = \"\",\r\n    hash = \"\"\r\n  } = typeof to === \"string\" ? parsePath(to) : to;\r\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\r\n  return {\r\n    pathname,\r\n    search: normalizeSearch(search),\r\n    hash: normalizeHash(hash)\r\n  };\r\n}\r\nfunction resolvePathname(relativePath, fromPathname) {\r\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\r\n  let relativeSegments = relativePath.split(\"/\");\r\n  relativeSegments.forEach((segment) => {\r\n    if (segment === \"..\") {\r\n      if (segments.length > 1) segments.pop();\r\n    } else if (segment !== \".\") {\r\n      segments.push(segment);\r\n    }\r\n  });\r\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\r\n}\r\nfunction getInvalidPathError(char, field, dest, path) {\r\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\r\n    path\r\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\r\n}\r\nfunction getPathContributingMatches(matches) {\r\n  return matches.filter(\r\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\r\n  );\r\n}\r\nfunction getResolveToMatches(matches) {\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches.map(\r\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\r\n  );\r\n}\r\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\r\n  let to;\r\n  if (typeof toArg === \"string\") {\r\n    to = parsePath(toArg);\r\n  } else {\r\n    to = { ...toArg };\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"?\"),\r\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\r\n    );\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\r\n    );\r\n    invariant(\r\n      !to.search || !to.search.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\r\n    );\r\n  }\r\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\r\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\r\n  let from;\r\n  if (toPathname == null) {\r\n    from = locationPathname;\r\n  } else {\r\n    let routePathnameIndex = routePathnames.length - 1;\r\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\r\n      let toSegments = toPathname.split(\"/\");\r\n      while (toSegments[0] === \"..\") {\r\n        toSegments.shift();\r\n        routePathnameIndex -= 1;\r\n      }\r\n      to.pathname = toSegments.join(\"/\");\r\n    }\r\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\r\n  }\r\n  let path = resolvePath(to, from);\r\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\r\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\r\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\r\n    path.pathname += \"/\";\r\n  }\r\n  return path;\r\n}\r\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\r\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\r\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\r\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\r\nvar DataWithResponseInit = class {\r\n  constructor(data2, init) {\r\n    this.type = \"DataWithResponseInit\";\r\n    this.data = data2;\r\n    this.init = init || null;\r\n  }\r\n};\r\nfunction data(data2, init) {\r\n  return new DataWithResponseInit(\r\n    data2,\r\n    typeof init === \"number\" ? { status: init } : init\r\n  );\r\n}\r\nvar redirect = (url, init = 302) => {\r\n  let responseInit = init;\r\n  if (typeof responseInit === \"number\") {\r\n    responseInit = { status: responseInit };\r\n  } else if (typeof responseInit.status === \"undefined\") {\r\n    responseInit.status = 302;\r\n  }\r\n  let headers = new Headers(responseInit.headers);\r\n  headers.set(\"Location\", url);\r\n  return new Response(null, { ...responseInit, headers });\r\n};\r\nvar ErrorResponseImpl = class {\r\n  constructor(status, statusText, data2, internal = false) {\r\n    this.status = status;\r\n    this.statusText = statusText || \"\";\r\n    this.internal = internal;\r\n    if (data2 instanceof Error) {\r\n      this.data = data2.toString();\r\n      this.error = data2;\r\n    } else {\r\n      this.data = data2;\r\n    }\r\n  }\r\n};\r\nfunction isRouteErrorResponse(error) {\r\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\r\n}\r\n\r\n// lib/router/router.ts\r\nvar validMutationMethodsArr = [\r\n  \"POST\",\r\n  \"PUT\",\r\n  \"PATCH\",\r\n  \"DELETE\"\r\n];\r\nvar validMutationMethods = new Set(\r\n  validMutationMethodsArr\r\n);\r\nvar validRequestMethodsArr = [\r\n  \"GET\",\r\n  ...validMutationMethodsArr\r\n];\r\nvar validRequestMethods = new Set(validRequestMethodsArr);\r\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\r\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\r\nvar IDLE_NAVIGATION = {\r\n  state: \"idle\",\r\n  location: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_FETCHER = {\r\n  state: \"idle\",\r\n  data: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_BLOCKER = {\r\n  state: \"unblocked\",\r\n  proceed: void 0,\r\n  reset: void 0,\r\n  location: void 0\r\n};\r\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar defaultMapRouteProperties = (route) => ({\r\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\r\n});\r\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\r\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\r\nfunction createRouter(init) {\r\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\r\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\r\n  invariant(\r\n    init.routes.length > 0,\r\n    \"You must provide a non-empty routes array to createRouter\"\r\n  );\r\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\r\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\r\n  let manifest = {};\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    init.routes,\r\n    mapRouteProperties2,\r\n    void 0,\r\n    manifest\r\n  );\r\n  let inFlightDataRoutes;\r\n  let basename = init.basename || \"/\";\r\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\r\n  let future = {\r\n    unstable_middleware: false,\r\n    ...init.future\r\n  };\r\n  let unlistenHistory = null;\r\n  let subscribers = /* @__PURE__ */ new Set();\r\n  let savedScrollPositions = null;\r\n  let getScrollRestorationKey = null;\r\n  let getScrollPosition = null;\r\n  let initialScrollRestored = init.hydrationData != null;\r\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\r\n  let initialMatchesIsFOW = false;\r\n  let initialErrors = null;\r\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\r\n    let error = getInternalRouterError(404, {\r\n      pathname: init.history.location.pathname\r\n    });\r\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\r\n    initialMatches = matches;\r\n    initialErrors = { [route.id]: error };\r\n  }\r\n  if (initialMatches && !init.hydrationData) {\r\n    let fogOfWar = checkFogOfWar(\r\n      initialMatches,\r\n      dataRoutes,\r\n      init.history.location.pathname\r\n    );\r\n    if (fogOfWar.active) {\r\n      initialMatches = null;\r\n    }\r\n  }\r\n  let initialized;\r\n  if (!initialMatches) {\r\n    initialized = false;\r\n    initialMatches = [];\r\n    let fogOfWar = checkFogOfWar(\r\n      null,\r\n      dataRoutes,\r\n      init.history.location.pathname\r\n    );\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      initialMatchesIsFOW = true;\r\n      initialMatches = fogOfWar.matches;\r\n    }\r\n  } else if (initialMatches.some((m) => m.route.lazy)) {\r\n    initialized = false;\r\n  } else if (!initialMatches.some((m) => m.route.loader)) {\r\n    initialized = true;\r\n  } else {\r\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\r\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\r\n    if (errors) {\r\n      let idx = initialMatches.findIndex(\r\n        (m) => errors[m.route.id] !== void 0\r\n      );\r\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\r\n    } else {\r\n      initialized = initialMatches.every(\r\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\r\n      );\r\n    }\r\n  }\r\n  let router2;\r\n  let state = {\r\n    historyAction: init.history.action,\r\n    location: init.history.location,\r\n    matches: initialMatches,\r\n    initialized,\r\n    navigation: IDLE_NAVIGATION,\r\n    // Don't restore on initial updateState() if we were SSR'd\r\n    restoreScrollPosition: init.hydrationData != null ? false : null,\r\n    preventScrollReset: false,\r\n    revalidation: \"idle\",\r\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\r\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\r\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\r\n    fetchers: /* @__PURE__ */ new Map(),\r\n    blockers: /* @__PURE__ */ new Map()\r\n  };\r\n  let pendingAction = \"POP\" /* Pop */;\r\n  let pendingPreventScrollReset = false;\r\n  let pendingNavigationController;\r\n  let pendingViewTransitionEnabled = false;\r\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\r\n  let removePageHideEventListener = null;\r\n  let isUninterruptedRevalidation = false;\r\n  let isRevalidationRequired = false;\r\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\r\n  let fetchControllers = /* @__PURE__ */ new Map();\r\n  let incrementingLoadId = 0;\r\n  let pendingNavigationLoadId = -1;\r\n  let fetchReloadIds = /* @__PURE__ */ new Map();\r\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\r\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\r\n  let activeFetchers = /* @__PURE__ */ new Map();\r\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\r\n  let blockerFunctions = /* @__PURE__ */ new Map();\r\n  let unblockBlockerHistoryUpdate = void 0;\r\n  let pendingRevalidationDfd = null;\r\n  function initialize() {\r\n    unlistenHistory = init.history.listen(\r\n      ({ action: historyAction, location, delta }) => {\r\n        if (unblockBlockerHistoryUpdate) {\r\n          unblockBlockerHistoryUpdate();\r\n          unblockBlockerHistoryUpdate = void 0;\r\n          return;\r\n        }\r\n        warning(\r\n          blockerFunctions.size === 0 || delta != null,\r\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\r\n        );\r\n        let blockerKey = shouldBlockNavigation({\r\n          currentLocation: state.location,\r\n          nextLocation: location,\r\n          historyAction\r\n        });\r\n        if (blockerKey && delta != null) {\r\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\r\n            unblockBlockerHistoryUpdate = resolve;\r\n          });\r\n          init.history.go(delta * -1);\r\n          updateBlocker(blockerKey, {\r\n            state: \"blocked\",\r\n            location,\r\n            proceed() {\r\n              updateBlocker(blockerKey, {\r\n                state: \"proceeding\",\r\n                proceed: void 0,\r\n                reset: void 0,\r\n                location\r\n              });\r\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\r\n            },\r\n            reset() {\r\n              let blockers = new Map(state.blockers);\r\n              blockers.set(blockerKey, IDLE_BLOCKER);\r\n              updateState({ blockers });\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        return startNavigation(historyAction, location);\r\n      }\r\n    );\r\n    if (isBrowser) {\r\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\r\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\r\n    }\r\n    if (!state.initialized) {\r\n      startNavigation(\"POP\" /* Pop */, state.location, {\r\n        initialHydration: true\r\n      });\r\n    }\r\n    return router2;\r\n  }\r\n  function dispose() {\r\n    if (unlistenHistory) {\r\n      unlistenHistory();\r\n    }\r\n    if (removePageHideEventListener) {\r\n      removePageHideEventListener();\r\n    }\r\n    subscribers.clear();\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\r\n    state.blockers.forEach((_, key) => deleteBlocker(key));\r\n  }\r\n  function subscribe(fn) {\r\n    subscribers.add(fn);\r\n    return () => subscribers.delete(fn);\r\n  }\r\n  function updateState(newState, opts = {}) {\r\n    state = {\r\n      ...state,\r\n      ...newState\r\n    };\r\n    let unmountedFetchers = [];\r\n    let mountedFetchers = [];\r\n    state.fetchers.forEach((fetcher, key) => {\r\n      if (fetcher.state === \"idle\") {\r\n        if (fetchersQueuedForDeletion.has(key)) {\r\n          unmountedFetchers.push(key);\r\n        } else {\r\n          mountedFetchers.push(key);\r\n        }\r\n      }\r\n    });\r\n    fetchersQueuedForDeletion.forEach((key) => {\r\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\r\n        unmountedFetchers.push(key);\r\n      }\r\n    });\r\n    [...subscribers].forEach(\r\n      (subscriber) => subscriber(state, {\r\n        deletedFetchers: unmountedFetchers,\r\n        viewTransitionOpts: opts.viewTransitionOpts,\r\n        flushSync: opts.flushSync === true\r\n      })\r\n    );\r\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\r\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\r\n  }\r\n  function completeNavigation(location, newState, { flushSync: flushSync2 } = {}) {\r\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\r\n    let actionData;\r\n    if (newState.actionData) {\r\n      if (Object.keys(newState.actionData).length > 0) {\r\n        actionData = newState.actionData;\r\n      } else {\r\n        actionData = null;\r\n      }\r\n    } else if (isActionReload) {\r\n      actionData = state.actionData;\r\n    } else {\r\n      actionData = null;\r\n    }\r\n    let loaderData = newState.loaderData ? mergeLoaderData(\r\n      state.loaderData,\r\n      newState.loaderData,\r\n      newState.matches || [],\r\n      newState.errors\r\n    ) : state.loaderData;\r\n    let blockers = state.blockers;\r\n    if (blockers.size > 0) {\r\n      blockers = new Map(blockers);\r\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\r\n    }\r\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\r\n    if (inFlightDataRoutes) {\r\n      dataRoutes = inFlightDataRoutes;\r\n      inFlightDataRoutes = void 0;\r\n    }\r\n    if (isUninterruptedRevalidation) {\r\n    } else if (pendingAction === \"POP\" /* Pop */) {\r\n    } else if (pendingAction === \"PUSH\" /* Push */) {\r\n      init.history.push(location, location.state);\r\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\r\n      init.history.replace(location, location.state);\r\n    }\r\n    let viewTransitionOpts;\r\n    if (pendingAction === \"POP\" /* Pop */) {\r\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (priorPaths && priorPaths.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: state.location,\r\n          nextLocation: location\r\n        };\r\n      } else if (appliedViewTransitions.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: location,\r\n          nextLocation: state.location\r\n        };\r\n      }\r\n    } else if (pendingViewTransitionEnabled) {\r\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (toPaths) {\r\n        toPaths.add(location.pathname);\r\n      } else {\r\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\r\n        appliedViewTransitions.set(state.location.pathname, toPaths);\r\n      }\r\n      viewTransitionOpts = {\r\n        currentLocation: state.location,\r\n        nextLocation: location\r\n      };\r\n    }\r\n    updateState(\r\n      {\r\n        ...newState,\r\n        // matches, errors, fetchers go through as-is\r\n        actionData,\r\n        loaderData,\r\n        historyAction: pendingAction,\r\n        location,\r\n        initialized: true,\r\n        navigation: IDLE_NAVIGATION,\r\n        revalidation: \"idle\",\r\n        restoreScrollPosition: getSavedScrollPosition(\r\n          location,\r\n          newState.matches || state.matches\r\n        ),\r\n        preventScrollReset,\r\n        blockers\r\n      },\r\n      {\r\n        viewTransitionOpts,\r\n        flushSync: flushSync2 === true\r\n      }\r\n    );\r\n    pendingAction = \"POP\" /* Pop */;\r\n    pendingPreventScrollReset = false;\r\n    pendingViewTransitionEnabled = false;\r\n    isUninterruptedRevalidation = false;\r\n    isRevalidationRequired = false;\r\n    pendingRevalidationDfd?.resolve();\r\n    pendingRevalidationDfd = null;\r\n  }\r\n  async function navigate(to, opts) {\r\n    if (typeof to === \"number\") {\r\n      init.history.go(to);\r\n      return;\r\n    }\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      to,\r\n      opts?.fromRouteId,\r\n      opts?.relative\r\n    );\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      false,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    let currentLocation = state.location;\r\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\r\n    nextLocation = {\r\n      ...nextLocation,\r\n      ...init.history.encodeLocation(nextLocation)\r\n    };\r\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\r\n    let historyAction = \"PUSH\" /* Push */;\r\n    if (userReplace === true) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    } else if (userReplace === false) {\r\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    }\r\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\r\n    let flushSync2 = (opts && opts.flushSync) === true;\r\n    let blockerKey = shouldBlockNavigation({\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    });\r\n    if (blockerKey) {\r\n      updateBlocker(blockerKey, {\r\n        state: \"blocked\",\r\n        location: nextLocation,\r\n        proceed() {\r\n          updateBlocker(blockerKey, {\r\n            state: \"proceeding\",\r\n            proceed: void 0,\r\n            reset: void 0,\r\n            location: nextLocation\r\n          });\r\n          navigate(to, opts);\r\n        },\r\n        reset() {\r\n          let blockers = new Map(state.blockers);\r\n          blockers.set(blockerKey, IDLE_BLOCKER);\r\n          updateState({ blockers });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    await startNavigation(historyAction, nextLocation, {\r\n      submission,\r\n      // Send through the formData serialization error if we have one so we can\r\n      // render at the right error boundary after we match routes\r\n      pendingError: error,\r\n      preventScrollReset,\r\n      replace: opts && opts.replace,\r\n      enableViewTransition: opts && opts.viewTransition,\r\n      flushSync: flushSync2\r\n    });\r\n  }\r\n  function revalidate() {\r\n    if (!pendingRevalidationDfd) {\r\n      pendingRevalidationDfd = createDeferred();\r\n    }\r\n    interruptActiveLoads();\r\n    updateState({ revalidation: \"loading\" });\r\n    let promise = pendingRevalidationDfd.promise;\r\n    if (state.navigation.state === \"submitting\") {\r\n      return promise;\r\n    }\r\n    if (state.navigation.state === \"idle\") {\r\n      startNavigation(state.historyAction, state.location, {\r\n        startUninterruptedRevalidation: true\r\n      });\r\n      return promise;\r\n    }\r\n    startNavigation(\r\n      pendingAction || state.historyAction,\r\n      state.navigation.location,\r\n      {\r\n        overrideNavigation: state.navigation,\r\n        // Proxy through any rending view transition\r\n        enableViewTransition: pendingViewTransitionEnabled === true\r\n      }\r\n    );\r\n    return promise;\r\n  }\r\n  async function startNavigation(historyAction, location, opts) {\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    pendingNavigationController = null;\r\n    pendingAction = historyAction;\r\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\r\n    saveScrollPosition(state.location, state.matches);\r\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let loadingNavigation = opts && opts.overrideNavigation;\r\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\r\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\r\n      state.matches\r\n    ) : matchRoutes(routesToUse, location, basename);\r\n    let flushSync2 = (opts && opts.flushSync) === true;\r\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\r\n      completeNavigation(location, { matches }, { flushSync: flushSync2 });\r\n      return;\r\n    }\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      let { error, notFoundMatches, route } = handleNavigational404(\r\n        location.pathname\r\n      );\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        },\r\n        { flushSync: flushSync2 }\r\n      );\r\n      return;\r\n    }\r\n    pendingNavigationController = new AbortController();\r\n    let request = createClientSideRequest(\r\n      init.history,\r\n      location,\r\n      pendingNavigationController.signal,\r\n      opts && opts.submission\r\n    );\r\n    let scopedContext = new unstable_RouterContextProvider(\r\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\r\n    );\r\n    let pendingActionResult;\r\n    if (opts && opts.pendingError) {\r\n      pendingActionResult = [\r\n        findNearestBoundary(matches).route.id,\r\n        { type: \"error\" /* error */, error: opts.pendingError }\r\n      ];\r\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\r\n      let actionResult = await handleAction(\r\n        request,\r\n        location,\r\n        opts.submission,\r\n        matches,\r\n        scopedContext,\r\n        fogOfWar.active,\r\n        opts && opts.initialHydration === true,\r\n        { replace: opts.replace, flushSync: flushSync2 }\r\n      );\r\n      if (actionResult.shortCircuited) {\r\n        return;\r\n      }\r\n      if (actionResult.pendingActionResult) {\r\n        let [routeId, result] = actionResult.pendingActionResult;\r\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\r\n          pendingNavigationController = null;\r\n          completeNavigation(location, {\r\n            matches: actionResult.matches,\r\n            loaderData: {},\r\n            errors: {\r\n              [routeId]: result.error\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      matches = actionResult.matches || matches;\r\n      pendingActionResult = actionResult.pendingActionResult;\r\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\r\n      flushSync2 = false;\r\n      fogOfWar.active = false;\r\n      request = createClientSideRequest(\r\n        init.history,\r\n        request.url,\r\n        request.signal\r\n      );\r\n    }\r\n    let {\r\n      shortCircuited,\r\n      matches: updatedMatches,\r\n      loaderData,\r\n      errors\r\n    } = await handleLoaders(\r\n      request,\r\n      location,\r\n      matches,\r\n      scopedContext,\r\n      fogOfWar.active,\r\n      loadingNavigation,\r\n      opts && opts.submission,\r\n      opts && opts.fetcherSubmission,\r\n      opts && opts.replace,\r\n      opts && opts.initialHydration === true,\r\n      flushSync2,\r\n      pendingActionResult\r\n    );\r\n    if (shortCircuited) {\r\n      return;\r\n    }\r\n    pendingNavigationController = null;\r\n    completeNavigation(location, {\r\n      matches: updatedMatches || matches,\r\n      ...getActionDataForCommit(pendingActionResult),\r\n      loaderData,\r\n      errors\r\n    });\r\n  }\r\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\r\n    interruptActiveLoads();\r\n    let navigation = getSubmittingNavigation(location, submission);\r\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          pendingActionResult: [\r\n            boundaryId,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error: discoverResult.error\r\n            }\r\n          ]\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { notFoundMatches, error, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          pendingActionResult: [\r\n            route.id,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error\r\n            }\r\n          ]\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let result;\r\n    let actionMatch = getTargetMatch(matches, location);\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      result = {\r\n        type: \"error\" /* error */,\r\n        error: getInternalRouterError(405, {\r\n          method: request.method,\r\n          pathname: location.pathname,\r\n          routeId: actionMatch.route.id\r\n        })\r\n      };\r\n    } else {\r\n      let dsMatches = getTargetedDataStrategyMatches(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        request,\r\n        matches,\r\n        actionMatch,\r\n        initialHydration ? [] : hydrationRouteProperties2,\r\n        scopedContext\r\n      );\r\n      let results = await callDataStrategy(\r\n        request,\r\n        dsMatches,\r\n        scopedContext,\r\n        null\r\n      );\r\n      result = results[actionMatch.route.id];\r\n      if (!result) {\r\n        for (let match of matches) {\r\n          if (results[match.route.id]) {\r\n            result = results[match.route.id];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (request.signal.aborted) {\r\n        return { shortCircuited: true };\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      let replace2;\r\n      if (opts && opts.replace != null) {\r\n        replace2 = opts.replace;\r\n      } else {\r\n        let location2 = normalizeRedirectLocation(\r\n          result.response.headers.get(\"Location\"),\r\n          new URL(request.url),\r\n          basename\r\n        );\r\n        replace2 = location2 === state.location.pathname + state.location.search;\r\n      }\r\n      await startRedirectNavigation(request, result, true, {\r\n        submission,\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\r\n      if ((opts && opts.replace) !== true) {\r\n        pendingAction = \"PUSH\" /* Push */;\r\n      }\r\n      return {\r\n        matches,\r\n        pendingActionResult: [boundaryMatch.route.id, result]\r\n      };\r\n    }\r\n    return {\r\n      matches,\r\n      pendingActionResult: [actionMatch.route.id, result]\r\n    };\r\n  }\r\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync2, pendingActionResult) {\r\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\r\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\r\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\r\n    if (isFogOfWar) {\r\n      if (shouldUpdateNavigationState) {\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        updateState(\r\n          {\r\n            navigation: loadingNavigation,\r\n            ...actionData !== void 0 ? { actionData } : {}\r\n          },\r\n          {\r\n            flushSync: flushSync2\r\n          }\r\n        );\r\n      }\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [boundaryId]: discoverResult.error\r\n          }\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { error, notFoundMatches, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\r\n      request,\r\n      scopedContext,\r\n      mapRouteProperties2,\r\n      manifest,\r\n      init.history,\r\n      state,\r\n      matches,\r\n      activeSubmission,\r\n      location,\r\n      initialHydration ? [] : hydrationRouteProperties2,\r\n      initialHydration === true,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      pendingActionResult\r\n    );\r\n    pendingNavigationLoadId = ++incrementingLoadId;\r\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && revalidatingFetchers.length === 0) {\r\n      let updatedFetchers2 = markFetchRedirectsDone();\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches,\r\n          loaderData: {},\r\n          // Commit pending error if we're short circuiting\r\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\r\n          ...getActionDataForCommit(pendingActionResult),\r\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\r\n        },\r\n        { flushSync: flushSync2 }\r\n      );\r\n      return { shortCircuited: true };\r\n    }\r\n    if (shouldUpdateNavigationState) {\r\n      let updates = {};\r\n      if (!isFogOfWar) {\r\n        updates.navigation = loadingNavigation;\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        if (actionData !== void 0) {\r\n          updates.actionData = actionData;\r\n        }\r\n      }\r\n      if (revalidatingFetchers.length > 0) {\r\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\r\n      }\r\n      updateState(updates, { flushSync: flushSync2 });\r\n    }\r\n    revalidatingFetchers.forEach((rf) => {\r\n      abortFetcher(rf.key);\r\n      if (rf.controller) {\r\n        fetchControllers.set(rf.key, rf.controller);\r\n      }\r\n    });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.addEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      dsMatches,\r\n      revalidatingFetchers,\r\n      request,\r\n      scopedContext\r\n    );\r\n    if (request.signal.aborted) {\r\n      return { shortCircuited: true };\r\n    }\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.removeEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      pendingActionResult,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    if (initialHydration && state.errors) {\r\n      errors = { ...state.errors, ...errors };\r\n    }\r\n    let updatedFetchers = markFetchRedirectsDone();\r\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\r\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\r\n    return {\r\n      matches,\r\n      loaderData,\r\n      errors,\r\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\r\n    };\r\n  }\r\n  function getUpdatedActionData(pendingActionResult) {\r\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\r\n      return {\r\n        [pendingActionResult[0]]: pendingActionResult[1].data\r\n      };\r\n    } else if (state.actionData) {\r\n      if (Object.keys(state.actionData).length === 0) {\r\n        return null;\r\n      } else {\r\n        return state.actionData;\r\n      }\r\n    }\r\n  }\r\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\r\n    revalidatingFetchers.forEach((rf) => {\r\n      let fetcher = state.fetchers.get(rf.key);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        fetcher ? fetcher.data : void 0\r\n      );\r\n      state.fetchers.set(rf.key, revalidatingFetcher);\r\n    });\r\n    return new Map(state.fetchers);\r\n  }\r\n  async function fetch2(key, routeId, href, opts) {\r\n    abortFetcher(key);\r\n    let flushSync2 = (opts && opts.flushSync) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      href,\r\n      routeId,\r\n      opts?.relative\r\n    );\r\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      setFetcherError(\r\n        key,\r\n        routeId,\r\n        getInternalRouterError(404, { pathname: normalizedPath }),\r\n        { flushSync: flushSync2 }\r\n      );\r\n      return;\r\n    }\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      true,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    if (error) {\r\n      setFetcherError(key, routeId, error, { flushSync: flushSync2 });\r\n      return;\r\n    }\r\n    let match = getTargetMatch(matches, path);\r\n    let scopedContext = new unstable_RouterContextProvider(\r\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\r\n    );\r\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    if (submission && isMutationMethod(submission.formMethod)) {\r\n      await handleFetcherAction(\r\n        key,\r\n        routeId,\r\n        path,\r\n        match,\r\n        matches,\r\n        scopedContext,\r\n        fogOfWar.active,\r\n        flushSync2,\r\n        preventScrollReset,\r\n        submission\r\n      );\r\n      return;\r\n    }\r\n    fetchLoadMatches.set(key, { routeId, path });\r\n    await handleFetcherLoader(\r\n      key,\r\n      routeId,\r\n      path,\r\n      match,\r\n      matches,\r\n      scopedContext,\r\n      fogOfWar.active,\r\n      flushSync2,\r\n      preventScrollReset,\r\n      submission\r\n    );\r\n  }\r\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\r\n    interruptActiveLoads();\r\n    fetchLoadMatches.delete(key);\r\n    function detectAndHandle405Error(m) {\r\n      if (!m.route.action && !m.route.lazy) {\r\n        let error = getInternalRouterError(405, {\r\n          method: submission.formMethod,\r\n          pathname: path,\r\n          routeId\r\n        });\r\n        setFetcherError(key, routeId, error, { flushSync: flushSync2 });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\r\n      return;\r\n    }\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\r\n      flushSync: flushSync2\r\n    });\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal,\r\n      submission\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        requestMatches,\r\n        path,\r\n        fetchRequest.signal,\r\n        key\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync: flushSync2 });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync: flushSync2 }\r\n        );\r\n        return;\r\n      } else {\r\n        requestMatches = discoverResult.matches;\r\n        match = getTargetMatch(requestMatches, path);\r\n        if (detectAndHandle405Error(match)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let fetchMatches = getTargetedDataStrategyMatches(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      fetchRequest,\r\n      requestMatches,\r\n      match,\r\n      hydrationRouteProperties2,\r\n      scopedContext\r\n    );\r\n    let actionResults = await callDataStrategy(\r\n      fetchRequest,\r\n      fetchMatches,\r\n      scopedContext,\r\n      key\r\n    );\r\n    let actionResult = actionResults[match.route.id];\r\n    if (fetchRequest.signal.aborted) {\r\n      if (fetchControllers.get(key) === abortController) {\r\n        fetchControllers.delete(key);\r\n      }\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      }\r\n    } else {\r\n      if (isRedirectResult(actionResult)) {\r\n        fetchControllers.delete(key);\r\n        if (pendingNavigationLoadId > originatingLoadId) {\r\n          updateFetcherState(key, getDoneFetcher(void 0));\r\n          return;\r\n        } else {\r\n          fetchRedirectIds.add(key);\r\n          updateFetcherState(key, getLoadingFetcher(submission));\r\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\r\n            fetcherSubmission: submission,\r\n            preventScrollReset\r\n          });\r\n        }\r\n      }\r\n      if (isErrorResult(actionResult)) {\r\n        setFetcherError(key, routeId, actionResult.error);\r\n        return;\r\n      }\r\n    }\r\n    let nextLocation = state.navigation.location || state.location;\r\n    let revalidationRequest = createClientSideRequest(\r\n      init.history,\r\n      nextLocation,\r\n      abortController.signal\r\n    );\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\r\n    invariant(matches, \"Didn't find any matches after fetcher action\");\r\n    let loadId = ++incrementingLoadId;\r\n    fetchReloadIds.set(key, loadId);\r\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\r\n    state.fetchers.set(key, loadFetcher);\r\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\r\n      revalidationRequest,\r\n      scopedContext,\r\n      mapRouteProperties2,\r\n      manifest,\r\n      init.history,\r\n      state,\r\n      matches,\r\n      submission,\r\n      nextLocation,\r\n      hydrationRouteProperties2,\r\n      false,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      [match.route.id, actionResult]\r\n    );\r\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\r\n      let staleKey = rf.key;\r\n      let existingFetcher2 = state.fetchers.get(staleKey);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        existingFetcher2 ? existingFetcher2.data : void 0\r\n      );\r\n      state.fetchers.set(staleKey, revalidatingFetcher);\r\n      abortFetcher(staleKey);\r\n      if (rf.controller) {\r\n        fetchControllers.set(staleKey, rf.controller);\r\n      }\r\n    });\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\r\n    abortController.signal.addEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      dsMatches,\r\n      revalidatingFetchers,\r\n      revalidationRequest,\r\n      scopedContext\r\n    );\r\n    if (abortController.signal.aborted) {\r\n      return;\r\n    }\r\n    abortController.signal.removeEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    fetchReloadIds.delete(key);\r\n    fetchControllers.delete(key);\r\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      void 0,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    if (state.fetchers.has(key)) {\r\n      let doneFetcher = getDoneFetcher(actionResult.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n    abortStaleFetchLoads(loadId);\r\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\r\n      invariant(pendingAction, \"Expected pending action\");\r\n      pendingNavigationController && pendingNavigationController.abort();\r\n      completeNavigation(state.navigation.location, {\r\n        matches,\r\n        loaderData,\r\n        errors,\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n    } else {\r\n      updateState({\r\n        errors,\r\n        loaderData: mergeLoaderData(\r\n          state.loaderData,\r\n          loaderData,\r\n          matches,\r\n          errors\r\n        ),\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n      isRevalidationRequired = false;\r\n    }\r\n  }\r\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(\r\n      key,\r\n      getLoadingFetcher(\r\n        submission,\r\n        existingFetcher ? existingFetcher.data : void 0\r\n      ),\r\n      { flushSync: flushSync2 }\r\n    );\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        path,\r\n        fetchRequest.signal,\r\n        key\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync: flushSync2 });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync: flushSync2 }\r\n        );\r\n        return;\r\n      } else {\r\n        matches = discoverResult.matches;\r\n        match = getTargetMatch(matches, path);\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let dsMatches = getTargetedDataStrategyMatches(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      fetchRequest,\r\n      matches,\r\n      match,\r\n      hydrationRouteProperties2,\r\n      scopedContext\r\n    );\r\n    let results = await callDataStrategy(\r\n      fetchRequest,\r\n      dsMatches,\r\n      scopedContext,\r\n      key\r\n    );\r\n    let result = results[match.route.id];\r\n    if (fetchControllers.get(key) === abortController) {\r\n      fetchControllers.delete(key);\r\n    }\r\n    if (fetchRequest.signal.aborted) {\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      updateFetcherState(key, getDoneFetcher(void 0));\r\n      return;\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      if (pendingNavigationLoadId > originatingLoadId) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      } else {\r\n        fetchRedirectIds.add(key);\r\n        await startRedirectNavigation(fetchRequest, result, false, {\r\n          preventScrollReset\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    if (isErrorResult(result)) {\r\n      setFetcherError(key, routeId, result.error);\r\n      return;\r\n    }\r\n    updateFetcherState(key, getDoneFetcher(result.data));\r\n  }\r\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\r\n    submission,\r\n    fetcherSubmission,\r\n    preventScrollReset,\r\n    replace: replace2\r\n  } = {}) {\r\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\r\n      isRevalidationRequired = true;\r\n    }\r\n    let location = redirect2.response.headers.get(\"Location\");\r\n    invariant(location, \"Expected a Location header on the redirect Response\");\r\n    location = normalizeRedirectLocation(\r\n      location,\r\n      new URL(request.url),\r\n      basename\r\n    );\r\n    let redirectLocation = createLocation(state.location, location, {\r\n      _isRedirect: true\r\n    });\r\n    if (isBrowser) {\r\n      let isDocumentReload = false;\r\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\r\n        isDocumentReload = true;\r\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\r\n        const url = init.history.createURL(location);\r\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\r\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\r\n        stripBasename(url.pathname, basename) == null;\r\n      }\r\n      if (isDocumentReload) {\r\n        if (replace2) {\r\n          routerWindow.location.replace(location);\r\n        } else {\r\n          routerWindow.location.assign(location);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    pendingNavigationController = null;\r\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\r\n    let { formMethod, formAction, formEncType } = state.navigation;\r\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\r\n      submission = getSubmissionFromNavigation(state.navigation);\r\n    }\r\n    let activeSubmission = submission || fetcherSubmission;\r\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        submission: {\r\n          ...activeSubmission,\r\n          formAction: location\r\n        },\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    } else {\r\n      let overrideNavigation = getLoadingNavigation(\r\n        redirectLocation,\r\n        submission\r\n      );\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        overrideNavigation,\r\n        // Send fetcher submissions through for shouldRevalidate\r\n        fetcherSubmission,\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    }\r\n  }\r\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\r\n    let results;\r\n    let dataResults = {};\r\n    try {\r\n      results = await callDataStrategyImpl(\r\n        dataStrategyImpl,\r\n        request,\r\n        matches,\r\n        fetcherKey,\r\n        scopedContext,\r\n        false\r\n      );\r\n    } catch (e) {\r\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\r\n        dataResults[m.route.id] = {\r\n          type: \"error\" /* error */,\r\n          error: e\r\n        };\r\n      });\r\n      return dataResults;\r\n    }\r\n    for (let [routeId, result] of Object.entries(results)) {\r\n      if (isRedirectDataStrategyResult(result)) {\r\n        let response = result.result;\r\n        dataResults[routeId] = {\r\n          type: \"redirect\" /* redirect */,\r\n          response: normalizeRelativeRoutingRedirectResponse(\r\n            response,\r\n            request,\r\n            routeId,\r\n            matches,\r\n            basename\r\n          )\r\n        };\r\n      } else {\r\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\r\n          result\r\n        );\r\n      }\r\n    }\r\n    return dataResults;\r\n  }\r\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\r\n    let loaderResultsPromise = callDataStrategy(\r\n      request,\r\n      matches,\r\n      scopedContext,\r\n      null\r\n    );\r\n    let fetcherResultsPromise = Promise.all(\r\n      fetchersToLoad.map(async (f) => {\r\n        if (f.matches && f.match && f.request && f.controller) {\r\n          let results = await callDataStrategy(\r\n            f.request,\r\n            f.matches,\r\n            scopedContext,\r\n            f.key\r\n          );\r\n          let result = results[f.match.route.id];\r\n          return { [f.key]: result };\r\n        } else {\r\n          return Promise.resolve({\r\n            [f.key]: {\r\n              type: \"error\" /* error */,\r\n              error: getInternalRouterError(404, {\r\n                pathname: f.path\r\n              })\r\n            }\r\n          });\r\n        }\r\n      })\r\n    );\r\n    let loaderResults = await loaderResultsPromise;\r\n    let fetcherResults = (await fetcherResultsPromise).reduce(\r\n      (acc, r) => Object.assign(acc, r),\r\n      {}\r\n    );\r\n    return {\r\n      loaderResults,\r\n      fetcherResults\r\n    };\r\n  }\r\n  function interruptActiveLoads() {\r\n    isRevalidationRequired = true;\r\n    fetchLoadMatches.forEach((_, key) => {\r\n      if (fetchControllers.has(key)) {\r\n        cancelledFetcherLoads.add(key);\r\n      }\r\n      abortFetcher(key);\r\n    });\r\n  }\r\n  function updateFetcherState(key, fetcher, opts = {}) {\r\n    state.fetchers.set(key, fetcher);\r\n    updateState(\r\n      { fetchers: new Map(state.fetchers) },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function setFetcherError(key, routeId, error, opts = {}) {\r\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\r\n    deleteFetcher(key);\r\n    updateState(\r\n      {\r\n        errors: {\r\n          [boundaryMatch.route.id]: error\r\n        },\r\n        fetchers: new Map(state.fetchers)\r\n      },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function getFetcher(key) {\r\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      fetchersQueuedForDeletion.delete(key);\r\n    }\r\n    return state.fetchers.get(key) || IDLE_FETCHER;\r\n  }\r\n  function deleteFetcher(key) {\r\n    let fetcher = state.fetchers.get(key);\r\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\r\n      abortFetcher(key);\r\n    }\r\n    fetchLoadMatches.delete(key);\r\n    fetchReloadIds.delete(key);\r\n    fetchRedirectIds.delete(key);\r\n    fetchersQueuedForDeletion.delete(key);\r\n    cancelledFetcherLoads.delete(key);\r\n    state.fetchers.delete(key);\r\n  }\r\n  function queueFetcherForDeletion(key) {\r\n    let count = (activeFetchers.get(key) || 0) - 1;\r\n    if (count <= 0) {\r\n      activeFetchers.delete(key);\r\n      fetchersQueuedForDeletion.add(key);\r\n    } else {\r\n      activeFetchers.set(key, count);\r\n    }\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n  }\r\n  function abortFetcher(key) {\r\n    let controller = fetchControllers.get(key);\r\n    if (controller) {\r\n      controller.abort();\r\n      fetchControllers.delete(key);\r\n    }\r\n  }\r\n  function markFetchersDone(keys) {\r\n    for (let key of keys) {\r\n      let fetcher = getFetcher(key);\r\n      let doneFetcher = getDoneFetcher(fetcher.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  }\r\n  function markFetchRedirectsDone() {\r\n    let doneKeys = [];\r\n    let updatedFetchers = false;\r\n    for (let key of fetchRedirectIds) {\r\n      let fetcher = state.fetchers.get(key);\r\n      invariant(fetcher, `Expected fetcher: ${key}`);\r\n      if (fetcher.state === \"loading\") {\r\n        fetchRedirectIds.delete(key);\r\n        doneKeys.push(key);\r\n        updatedFetchers = true;\r\n      }\r\n    }\r\n    markFetchersDone(doneKeys);\r\n    return updatedFetchers;\r\n  }\r\n  function abortStaleFetchLoads(landedId) {\r\n    let yeetedKeys = [];\r\n    for (let [key, id] of fetchReloadIds) {\r\n      if (id < landedId) {\r\n        let fetcher = state.fetchers.get(key);\r\n        invariant(fetcher, `Expected fetcher: ${key}`);\r\n        if (fetcher.state === \"loading\") {\r\n          abortFetcher(key);\r\n          fetchReloadIds.delete(key);\r\n          yeetedKeys.push(key);\r\n        }\r\n      }\r\n    }\r\n    markFetchersDone(yeetedKeys);\r\n    return yeetedKeys.length > 0;\r\n  }\r\n  function getBlocker(key, fn) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    if (blockerFunctions.get(key) !== fn) {\r\n      blockerFunctions.set(key, fn);\r\n    }\r\n    return blocker;\r\n  }\r\n  function deleteBlocker(key) {\r\n    state.blockers.delete(key);\r\n    blockerFunctions.delete(key);\r\n  }\r\n  function updateBlocker(key, newBlocker) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    invariant(\r\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\r\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\r\n    );\r\n    let blockers = new Map(state.blockers);\r\n    blockers.set(key, newBlocker);\r\n    updateState({ blockers });\r\n  }\r\n  function shouldBlockNavigation({\r\n    currentLocation,\r\n    nextLocation,\r\n    historyAction\r\n  }) {\r\n    if (blockerFunctions.size === 0) {\r\n      return;\r\n    }\r\n    if (blockerFunctions.size > 1) {\r\n      warning(false, \"A router only supports one blocker at a time\");\r\n    }\r\n    let entries = Array.from(blockerFunctions.entries());\r\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\r\n    let blocker = state.blockers.get(blockerKey);\r\n    if (blocker && blocker.state === \"proceeding\") {\r\n      return;\r\n    }\r\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\r\n      return blockerKey;\r\n    }\r\n  }\r\n  function handleNavigational404(pathname) {\r\n    let error = getInternalRouterError(404, { pathname });\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let { matches, route } = getShortCircuitMatches(routesToUse);\r\n    return { notFoundMatches: matches, route, error };\r\n  }\r\n  function enableScrollRestoration(positions, getPosition, getKey) {\r\n    savedScrollPositions = positions;\r\n    getScrollPosition = getPosition;\r\n    getScrollRestorationKey = getKey || null;\r\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\r\n      initialScrollRestored = true;\r\n      let y = getSavedScrollPosition(state.location, state.matches);\r\n      if (y != null) {\r\n        updateState({ restoreScrollPosition: y });\r\n      }\r\n    }\r\n    return () => {\r\n      savedScrollPositions = null;\r\n      getScrollPosition = null;\r\n      getScrollRestorationKey = null;\r\n    };\r\n  }\r\n  function getScrollKey(location, matches) {\r\n    if (getScrollRestorationKey) {\r\n      let key = getScrollRestorationKey(\r\n        location,\r\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\r\n      );\r\n      return key || location.key;\r\n    }\r\n    return location.key;\r\n  }\r\n  function saveScrollPosition(location, matches) {\r\n    if (savedScrollPositions && getScrollPosition) {\r\n      let key = getScrollKey(location, matches);\r\n      savedScrollPositions[key] = getScrollPosition();\r\n    }\r\n  }\r\n  function getSavedScrollPosition(location, matches) {\r\n    if (savedScrollPositions) {\r\n      let key = getScrollKey(location, matches);\r\n      let y = savedScrollPositions[key];\r\n      if (typeof y === \"number\") {\r\n        return y;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  function checkFogOfWar(matches, routesToUse, pathname) {\r\n    if (init.patchRoutesOnNavigation) {\r\n      if (!matches) {\r\n        let fogMatches = matchRoutesImpl(\r\n          routesToUse,\r\n          pathname,\r\n          basename,\r\n          true\r\n        );\r\n        return { active: true, matches: fogMatches || [] };\r\n      } else {\r\n        if (Object.keys(matches[0].params).length > 0) {\r\n          let partialMatches = matchRoutesImpl(\r\n            routesToUse,\r\n            pathname,\r\n            basename,\r\n            true\r\n          );\r\n          return { active: true, matches: partialMatches };\r\n        }\r\n      }\r\n    }\r\n    return { active: false, matches: null };\r\n  }\r\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\r\n    if (!init.patchRoutesOnNavigation) {\r\n      return { type: \"success\", matches };\r\n    }\r\n    let partialMatches = matches;\r\n    while (true) {\r\n      let isNonHMR = inFlightDataRoutes == null;\r\n      let routesToUse = inFlightDataRoutes || dataRoutes;\r\n      let localManifest = manifest;\r\n      try {\r\n        await init.patchRoutesOnNavigation({\r\n          signal,\r\n          path: pathname,\r\n          matches: partialMatches,\r\n          fetcherKey,\r\n          patch: (routeId, children) => {\r\n            if (signal.aborted) return;\r\n            patchRoutesImpl(\r\n              routeId,\r\n              children,\r\n              routesToUse,\r\n              localManifest,\r\n              mapRouteProperties2\r\n            );\r\n          }\r\n        });\r\n      } catch (e) {\r\n        return { type: \"error\", error: e, partialMatches };\r\n      } finally {\r\n        if (isNonHMR && !signal.aborted) {\r\n          dataRoutes = [...dataRoutes];\r\n        }\r\n      }\r\n      if (signal.aborted) {\r\n        return { type: \"aborted\" };\r\n      }\r\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\r\n      if (newMatches) {\r\n        return { type: \"success\", matches: newMatches };\r\n      }\r\n      let newPartialMatches = matchRoutesImpl(\r\n        routesToUse,\r\n        pathname,\r\n        basename,\r\n        true\r\n      );\r\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\r\n        (m, i) => m.route.id === newPartialMatches[i].route.id\r\n      )) {\r\n        return { type: \"success\", matches: null };\r\n      }\r\n      partialMatches = newPartialMatches;\r\n    }\r\n  }\r\n  function _internalSetRoutes(newRoutes) {\r\n    manifest = {};\r\n    inFlightDataRoutes = convertRoutesToDataRoutes(\r\n      newRoutes,\r\n      mapRouteProperties2,\r\n      void 0,\r\n      manifest\r\n    );\r\n  }\r\n  function patchRoutes(routeId, children) {\r\n    let isNonHMR = inFlightDataRoutes == null;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    patchRoutesImpl(\r\n      routeId,\r\n      children,\r\n      routesToUse,\r\n      manifest,\r\n      mapRouteProperties2\r\n    );\r\n    if (isNonHMR) {\r\n      dataRoutes = [...dataRoutes];\r\n      updateState({});\r\n    }\r\n  }\r\n  router2 = {\r\n    get basename() {\r\n      return basename;\r\n    },\r\n    get future() {\r\n      return future;\r\n    },\r\n    get state() {\r\n      return state;\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return routerWindow;\r\n    },\r\n    initialize,\r\n    subscribe,\r\n    enableScrollRestoration,\r\n    navigate,\r\n    fetch: fetch2,\r\n    revalidate,\r\n    // Passthrough to history-aware createHref used by useHref so we get proper\r\n    // hash-aware URLs in DOM paths\r\n    createHref: (to) => init.history.createHref(to),\r\n    encodeLocation: (to) => init.history.encodeLocation(to),\r\n    getFetcher,\r\n    deleteFetcher: queueFetcherForDeletion,\r\n    dispose,\r\n    getBlocker,\r\n    deleteBlocker,\r\n    patchRoutes,\r\n    _internalFetchControllers: fetchControllers,\r\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\r\n    // updating the tree while validating the update algorithm.\r\n    _internalSetRoutes\r\n  };\r\n  return router2;\r\n}\r\nfunction isSubmissionNavigation(opts) {\r\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\r\n}\r\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\r\n  let contextualMatches;\r\n  let activeRouteMatch;\r\n  if (fromRouteId) {\r\n    contextualMatches = [];\r\n    for (let match of matches) {\r\n      contextualMatches.push(match);\r\n      if (match.route.id === fromRouteId) {\r\n        activeRouteMatch = match;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    contextualMatches = matches;\r\n    activeRouteMatch = matches[matches.length - 1];\r\n  }\r\n  let path = resolveTo(\r\n    to ? to : \".\",\r\n    getResolveToMatches(contextualMatches),\r\n    stripBasename(location.pathname, basename) || location.pathname,\r\n    relative === \"path\"\r\n  );\r\n  if (to == null) {\r\n    path.search = location.search;\r\n    path.hash = location.hash;\r\n  }\r\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\r\n    let nakedIndex = hasNakedIndexQuery(path.search);\r\n    if (activeRouteMatch.route.index && !nakedIndex) {\r\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\r\n      let params = new URLSearchParams(path.search);\r\n      let indexValues = params.getAll(\"index\");\r\n      params.delete(\"index\");\r\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? `?${qs}` : \"\";\r\n    }\r\n  }\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\r\n  if (!opts || !isSubmissionNavigation(opts)) {\r\n    return { path };\r\n  }\r\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\r\n    return {\r\n      path,\r\n      error: getInternalRouterError(405, { method: opts.formMethod })\r\n    };\r\n  }\r\n  let getInvalidBodyError = () => ({\r\n    path,\r\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\r\n  });\r\n  let rawFormMethod = opts.formMethod || \"get\";\r\n  let formMethod = rawFormMethod.toUpperCase();\r\n  let formAction = stripHashFromPath(path);\r\n  if (opts.body !== void 0) {\r\n    if (opts.formEncType === \"text/plain\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\r\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\r\n        Array.from(opts.body.entries()).reduce(\r\n          (acc, [name, value]) => `${acc}${name}=${value}\r\n`,\r\n          \"\"\r\n        )\r\n      ) : String(opts.body);\r\n      return {\r\n        path,\r\n        submission: {\r\n          formMethod,\r\n          formAction,\r\n          formEncType: opts.formEncType,\r\n          formData: void 0,\r\n          json: void 0,\r\n          text\r\n        }\r\n      };\r\n    } else if (opts.formEncType === \"application/json\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      try {\r\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\r\n        return {\r\n          path,\r\n          submission: {\r\n            formMethod,\r\n            formAction,\r\n            formEncType: opts.formEncType,\r\n            formData: void 0,\r\n            json,\r\n            text: void 0\r\n          }\r\n        };\r\n      } catch (e) {\r\n        return getInvalidBodyError();\r\n      }\r\n    }\r\n  }\r\n  invariant(\r\n    typeof FormData === \"function\",\r\n    \"FormData is not available in this environment\"\r\n  );\r\n  let searchParams;\r\n  let formData;\r\n  if (opts.formData) {\r\n    searchParams = convertFormDataToSearchParams(opts.formData);\r\n    formData = opts.formData;\r\n  } else if (opts.body instanceof FormData) {\r\n    searchParams = convertFormDataToSearchParams(opts.body);\r\n    formData = opts.body;\r\n  } else if (opts.body instanceof URLSearchParams) {\r\n    searchParams = opts.body;\r\n    formData = convertSearchParamsToFormData(searchParams);\r\n  } else if (opts.body == null) {\r\n    searchParams = new URLSearchParams();\r\n    formData = new FormData();\r\n  } else {\r\n    try {\r\n      searchParams = new URLSearchParams(opts.body);\r\n      formData = convertSearchParamsToFormData(searchParams);\r\n    } catch (e) {\r\n      return getInvalidBodyError();\r\n    }\r\n  }\r\n  let submission = {\r\n    formMethod,\r\n    formAction,\r\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\r\n    formData,\r\n    json: void 0,\r\n    text: void 0\r\n  };\r\n  if (isMutationMethod(submission.formMethod)) {\r\n    return { path, submission };\r\n  }\r\n  let parsedPath = parsePath(path);\r\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\r\n    searchParams.append(\"index\", \"\");\r\n  }\r\n  parsedPath.search = `?${searchParams}`;\r\n  return { path: createPath(parsedPath), submission };\r\n}\r\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\r\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\r\n  let currentUrl = history.createURL(state.location);\r\n  let nextUrl = history.createURL(location);\r\n  let maxIdx;\r\n  if (initialHydration && state.errors) {\r\n    let boundaryId = Object.keys(state.errors)[0];\r\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\r\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\r\n    let boundaryId = pendingActionResult[0];\r\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\r\n  }\r\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\r\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\r\n  let baseShouldRevalidateArgs = {\r\n    currentUrl,\r\n    currentParams: state.matches[0]?.params || {},\r\n    nextUrl,\r\n    nextParams: matches[0].params,\r\n    ...submission,\r\n    actionResult,\r\n    actionStatus\r\n  };\r\n  let dsMatches = matches.map((match, index) => {\r\n    let { route } = match;\r\n    let forceShouldLoad = null;\r\n    if (maxIdx != null && index > maxIdx) {\r\n      forceShouldLoad = false;\r\n    } else if (route.lazy) {\r\n      forceShouldLoad = true;\r\n    } else if (route.loader == null) {\r\n      forceShouldLoad = false;\r\n    } else if (initialHydration) {\r\n      forceShouldLoad = shouldLoadRouteOnHydration(\r\n        route,\r\n        state.loaderData,\r\n        state.errors\r\n      );\r\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\r\n      forceShouldLoad = true;\r\n    }\r\n    if (forceShouldLoad !== null) {\r\n      return getDataStrategyMatch(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        request,\r\n        match,\r\n        lazyRoutePropertiesToSkip,\r\n        scopedContext,\r\n        forceShouldLoad\r\n      );\r\n    }\r\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\r\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\r\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\r\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\r\n    );\r\n    let shouldRevalidateArgs = {\r\n      ...baseShouldRevalidateArgs,\r\n      defaultShouldRevalidate\r\n    };\r\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\r\n    return getDataStrategyMatch(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      request,\r\n      match,\r\n      lazyRoutePropertiesToSkip,\r\n      scopedContext,\r\n      shouldLoad,\r\n      shouldRevalidateArgs\r\n    );\r\n  });\r\n  let revalidatingFetchers = [];\r\n  fetchLoadMatches.forEach((f, key) => {\r\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\r\n      return;\r\n    }\r\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\r\n    if (!fetcherMatches) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: null,\r\n        match: null,\r\n        request: null,\r\n        controller: null\r\n      });\r\n      return;\r\n    }\r\n    if (fetchRedirectIds.has(key)) {\r\n      return;\r\n    }\r\n    let fetcher = state.fetchers.get(key);\r\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\r\n    let fetchController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      history,\r\n      f.path,\r\n      fetchController.signal\r\n    );\r\n    let fetcherDsMatches = null;\r\n    if (cancelledFetcherLoads.has(key)) {\r\n      cancelledFetcherLoads.delete(key);\r\n      fetcherDsMatches = getTargetedDataStrategyMatches(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        fetchRequest,\r\n        fetcherMatches,\r\n        fetcherMatch,\r\n        lazyRoutePropertiesToSkip,\r\n        scopedContext\r\n      );\r\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\r\n      if (isRevalidationRequired) {\r\n        fetcherDsMatches = getTargetedDataStrategyMatches(\r\n          mapRouteProperties2,\r\n          manifest,\r\n          fetchRequest,\r\n          fetcherMatches,\r\n          fetcherMatch,\r\n          lazyRoutePropertiesToSkip,\r\n          scopedContext\r\n        );\r\n      }\r\n    } else {\r\n      let shouldRevalidateArgs = {\r\n        ...baseShouldRevalidateArgs,\r\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\r\n      };\r\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\r\n        fetcherDsMatches = getTargetedDataStrategyMatches(\r\n          mapRouteProperties2,\r\n          manifest,\r\n          fetchRequest,\r\n          fetcherMatches,\r\n          fetcherMatch,\r\n          lazyRoutePropertiesToSkip,\r\n          scopedContext,\r\n          shouldRevalidateArgs\r\n        );\r\n      }\r\n    }\r\n    if (fetcherDsMatches) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: fetcherDsMatches,\r\n        match: fetcherMatch,\r\n        request: fetchRequest,\r\n        controller: fetchController\r\n      });\r\n    }\r\n  });\r\n  return { dsMatches, revalidatingFetchers };\r\n}\r\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\r\n  if (route.lazy) {\r\n    return true;\r\n  }\r\n  if (!route.loader) {\r\n    return false;\r\n  }\r\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\r\n  let hasError = errors != null && errors[route.id] !== void 0;\r\n  if (!hasData && hasError) {\r\n    return false;\r\n  }\r\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\r\n    return true;\r\n  }\r\n  return !hasData && !hasError;\r\n}\r\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\r\n  let isNew = (\r\n    // [a] -> [a, b]\r\n    !currentMatch || // [a, b] -> [a, c]\r\n    match.route.id !== currentMatch.route.id\r\n  );\r\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\r\n  return isNew || isMissingData;\r\n}\r\nfunction isNewRouteInstance(currentMatch, match) {\r\n  let currentPath = currentMatch.route.path;\r\n  return (\r\n    // param change for this match, /users/123 -> /users/456\r\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\r\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\r\n  );\r\n}\r\nfunction shouldRevalidateLoader(loaderMatch, arg) {\r\n  if (loaderMatch.route.shouldRevalidate) {\r\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\r\n    if (typeof routeChoice === \"boolean\") {\r\n      return routeChoice;\r\n    }\r\n  }\r\n  return arg.defaultShouldRevalidate;\r\n}\r\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\r\n  let childrenToPatch;\r\n  if (routeId) {\r\n    let route = manifest[routeId];\r\n    invariant(\r\n      route,\r\n      `No route found to patch children into: routeId = ${routeId}`\r\n    );\r\n    if (!route.children) {\r\n      route.children = [];\r\n    }\r\n    childrenToPatch = route.children;\r\n  } else {\r\n    childrenToPatch = routesToUse;\r\n  }\r\n  let uniqueChildren = children.filter(\r\n    (newRoute) => !childrenToPatch.some(\r\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\r\n    )\r\n  );\r\n  let newRoutes = convertRoutesToDataRoutes(\r\n    uniqueChildren,\r\n    mapRouteProperties2,\r\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\r\n    manifest\r\n  );\r\n  childrenToPatch.push(...newRoutes);\r\n}\r\nfunction isSameRoute(newRoute, existingRoute) {\r\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\r\n    return true;\r\n  }\r\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\r\n    return false;\r\n  }\r\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\r\n    return true;\r\n  }\r\n  return newRoute.children.every(\r\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\r\n  );\r\n}\r\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\r\nvar loadLazyRouteProperty = ({\r\n  key,\r\n  route,\r\n  manifest,\r\n  mapRouteProperties: mapRouteProperties2\r\n}) => {\r\n  let routeToUpdate = manifest[route.id];\r\n  invariant(routeToUpdate, \"No route found in manifest\");\r\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\r\n    return;\r\n  }\r\n  let lazyFn = routeToUpdate.lazy[key];\r\n  if (!lazyFn) {\r\n    return;\r\n  }\r\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\r\n  if (!cache) {\r\n    cache = {};\r\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\r\n  }\r\n  let cachedPromise = cache[key];\r\n  if (cachedPromise) {\r\n    return cachedPromise;\r\n  }\r\n  let propertyPromise = (async () => {\r\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\r\n    let staticRouteValue = routeToUpdate[key];\r\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\r\n    if (isUnsupported) {\r\n      warning(\r\n        !isUnsupported,\r\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\r\n      );\r\n      cache[key] = Promise.resolve();\r\n    } else if (isStaticallyDefined) {\r\n      warning(\r\n        false,\r\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\r\n      );\r\n    } else {\r\n      let value = await lazyFn();\r\n      if (value != null) {\r\n        Object.assign(routeToUpdate, { [key]: value });\r\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\r\n      }\r\n    }\r\n    if (typeof routeToUpdate.lazy === \"object\") {\r\n      routeToUpdate.lazy[key] = void 0;\r\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\r\n        routeToUpdate.lazy = void 0;\r\n      }\r\n    }\r\n  })();\r\n  cache[key] = propertyPromise;\r\n  return propertyPromise;\r\n};\r\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\r\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\r\n  let routeToUpdate = manifest[route.id];\r\n  invariant(routeToUpdate, \"No route found in manifest\");\r\n  if (!route.lazy) {\r\n    return {\r\n      lazyRoutePromise: void 0,\r\n      lazyHandlerPromise: void 0\r\n    };\r\n  }\r\n  if (typeof route.lazy === \"function\") {\r\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\r\n    if (cachedPromise) {\r\n      return {\r\n        lazyRoutePromise: cachedPromise,\r\n        lazyHandlerPromise: cachedPromise\r\n      };\r\n    }\r\n    let lazyRoutePromise2 = (async () => {\r\n      invariant(\r\n        typeof route.lazy === \"function\",\r\n        \"No lazy route function found\"\r\n      );\r\n      let lazyRoute = await route.lazy();\r\n      let routeUpdates = {};\r\n      for (let lazyRouteProperty in lazyRoute) {\r\n        let lazyValue = lazyRoute[lazyRouteProperty];\r\n        if (lazyValue === void 0) {\r\n          continue;\r\n        }\r\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\r\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\r\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\r\n        // on the route updates\r\n        lazyRouteProperty !== \"hasErrorBoundary\";\r\n        if (isUnsupported) {\r\n          warning(\r\n            !isUnsupported,\r\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\r\n          );\r\n        } else if (isStaticallyDefined) {\r\n          warning(\r\n            !isStaticallyDefined,\r\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\r\n          );\r\n        } else {\r\n          routeUpdates[lazyRouteProperty] = lazyValue;\r\n        }\r\n      }\r\n      Object.assign(routeToUpdate, routeUpdates);\r\n      Object.assign(routeToUpdate, {\r\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\r\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\r\n        // since the logic will differ between frameworks.\r\n        ...mapRouteProperties2(routeToUpdate),\r\n        lazy: void 0\r\n      });\r\n    })();\r\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\r\n    lazyRoutePromise2.catch(() => {\r\n    });\r\n    return {\r\n      lazyRoutePromise: lazyRoutePromise2,\r\n      lazyHandlerPromise: lazyRoutePromise2\r\n    };\r\n  }\r\n  let lazyKeys = Object.keys(route.lazy);\r\n  let lazyPropertyPromises = [];\r\n  let lazyHandlerPromise = void 0;\r\n  for (let key of lazyKeys) {\r\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\r\n      continue;\r\n    }\r\n    let promise = loadLazyRouteProperty({\r\n      key,\r\n      route,\r\n      manifest,\r\n      mapRouteProperties: mapRouteProperties2\r\n    });\r\n    if (promise) {\r\n      lazyPropertyPromises.push(promise);\r\n      if (key === type) {\r\n        lazyHandlerPromise = promise;\r\n      }\r\n    }\r\n  }\r\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\r\n  }) : void 0;\r\n  lazyRoutePromise?.catch(() => {\r\n  });\r\n  lazyHandlerPromise?.catch(() => {\r\n  });\r\n  return {\r\n    lazyRoutePromise,\r\n    lazyHandlerPromise\r\n  };\r\n}\r\nasync function defaultDataStrategy(args) {\r\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\r\n  let keyedResults = {};\r\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\r\n  results.forEach((result, i) => {\r\n    keyedResults[matchesToLoad[i].route.id] = result;\r\n  });\r\n  return keyedResults;\r\n}\r\nasync function defaultDataStrategyWithMiddleware(args) {\r\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\r\n    return defaultDataStrategy(args);\r\n  }\r\n  return runMiddlewarePipeline(\r\n    args,\r\n    false,\r\n    () => defaultDataStrategy(args),\r\n    (error, routeId) => ({ [routeId]: { type: \"error\", result: error } })\r\n  );\r\n}\r\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\r\n  let { matches, request, params, context } = args;\r\n  let middlewareState = {\r\n    handlerResult: void 0\r\n  };\r\n  try {\r\n    let tuples = matches.flatMap(\r\n      (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\r\n    );\r\n    let result = await callRouteMiddleware(\r\n      { request, params, context },\r\n      tuples,\r\n      propagateResult,\r\n      middlewareState,\r\n      handler\r\n    );\r\n    return propagateResult ? result : middlewareState.handlerResult;\r\n  } catch (e) {\r\n    if (!middlewareState.middlewareError) {\r\n      throw e;\r\n    }\r\n    let result = await errorHandler(\r\n      middlewareState.middlewareError.error,\r\n      middlewareState.middlewareError.routeId\r\n    );\r\n    if (propagateResult || !middlewareState.handlerResult) {\r\n      return result;\r\n    }\r\n    return Object.assign(middlewareState.handlerResult, result);\r\n  }\r\n}\r\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {\r\n  let { request } = args;\r\n  if (request.signal.aborted) {\r\n    if (request.signal.reason) {\r\n      throw request.signal.reason;\r\n    }\r\n    throw new Error(\r\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\r\n    );\r\n  }\r\n  let tuple = middlewares[idx];\r\n  if (!tuple) {\r\n    middlewareState.handlerResult = await handler();\r\n    return middlewareState.handlerResult;\r\n  }\r\n  let [routeId, middleware] = tuple;\r\n  let nextCalled = false;\r\n  let nextResult = void 0;\r\n  let next = async () => {\r\n    if (nextCalled) {\r\n      throw new Error(\"You may only call `next()` once per middleware\");\r\n    }\r\n    nextCalled = true;\r\n    let result = await callRouteMiddleware(\r\n      args,\r\n      middlewares,\r\n      propagateResult,\r\n      middlewareState,\r\n      handler,\r\n      idx + 1\r\n    );\r\n    if (propagateResult) {\r\n      nextResult = result;\r\n      return nextResult;\r\n    }\r\n  };\r\n  try {\r\n    let result = await middleware(\r\n      {\r\n        request: args.request,\r\n        params: args.params,\r\n        context: args.context\r\n      },\r\n      next\r\n    );\r\n    if (nextCalled) {\r\n      if (result === void 0) {\r\n        return nextResult;\r\n      } else {\r\n        return result;\r\n      }\r\n    } else {\r\n      return next();\r\n    }\r\n  } catch (error) {\r\n    if (!middlewareState.middlewareError) {\r\n      middlewareState.middlewareError = { routeId, error };\r\n    } else if (middlewareState.middlewareError.error !== error) {\r\n      middlewareState.middlewareError = { routeId, error };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\r\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\r\n    key: \"unstable_middleware\",\r\n    route: match.route,\r\n    manifest,\r\n    mapRouteProperties: mapRouteProperties2\r\n  });\r\n  let lazyRoutePromises = loadLazyRoute(\r\n    match.route,\r\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\r\n    manifest,\r\n    mapRouteProperties2,\r\n    lazyRoutePropertiesToSkip\r\n  );\r\n  return {\r\n    middleware: lazyMiddlewarePromise,\r\n    route: lazyRoutePromises.lazyRoutePromise,\r\n    handler: lazyRoutePromises.lazyHandlerPromise\r\n  };\r\n}\r\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\r\n  let isUsingNewApi = false;\r\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\r\n    mapRouteProperties2,\r\n    manifest,\r\n    request,\r\n    match,\r\n    lazyRoutePropertiesToSkip\r\n  );\r\n  return {\r\n    ...match,\r\n    _lazyPromises,\r\n    shouldLoad,\r\n    unstable_shouldRevalidateArgs,\r\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\r\n      isUsingNewApi = true;\r\n      if (!unstable_shouldRevalidateArgs) {\r\n        return shouldLoad;\r\n      }\r\n      if (typeof defaultShouldRevalidate === \"boolean\") {\r\n        return shouldRevalidateLoader(match, {\r\n          ...unstable_shouldRevalidateArgs,\r\n          defaultShouldRevalidate\r\n        });\r\n      }\r\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\r\n    },\r\n    resolve(handlerOverride) {\r\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\r\n        return callLoaderOrAction({\r\n          request,\r\n          match,\r\n          lazyHandlerPromise: _lazyPromises?.handler,\r\n          lazyRoutePromise: _lazyPromises?.route,\r\n          handlerOverride,\r\n          scopedContext\r\n        });\r\n      }\r\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\r\n    }\r\n  };\r\n}\r\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\r\n  return matches.map((match) => {\r\n    if (match.route.id !== targetMatch.route.id) {\r\n      return {\r\n        ...match,\r\n        shouldLoad: false,\r\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\r\n        unstable_shouldCallHandler: () => false,\r\n        _lazyPromises: getDataStrategyMatchLazyPromises(\r\n          mapRouteProperties2,\r\n          manifest,\r\n          request,\r\n          match,\r\n          lazyRoutePropertiesToSkip\r\n        ),\r\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\r\n      };\r\n    }\r\n    return getDataStrategyMatch(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      request,\r\n      match,\r\n      lazyRoutePropertiesToSkip,\r\n      scopedContext,\r\n      true,\r\n      shouldRevalidateArgs\r\n    );\r\n  });\r\n}\r\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\r\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\r\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\r\n  }\r\n  let dataStrategyArgs = {\r\n    request,\r\n    params: matches[0].params,\r\n    context: scopedContext,\r\n    matches\r\n  };\r\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\r\n    throw new Error(\r\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\r\n    );\r\n  } : (cb) => {\r\n    let typedDataStrategyArgs = dataStrategyArgs;\r\n    return runMiddlewarePipeline(\r\n      typedDataStrategyArgs,\r\n      false,\r\n      () => cb({\r\n        ...typedDataStrategyArgs,\r\n        fetcherKey,\r\n        unstable_runClientMiddleware: () => {\r\n          throw new Error(\r\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\r\n          );\r\n        }\r\n      }),\r\n      (error, routeId) => ({\r\n        [routeId]: { type: \"error\", result: error }\r\n      })\r\n    );\r\n  };\r\n  let results = await dataStrategyImpl({\r\n    ...dataStrategyArgs,\r\n    fetcherKey,\r\n    unstable_runClientMiddleware\r\n  });\r\n  try {\r\n    await Promise.all(\r\n      matches.flatMap((m) => [m._lazyPromises?.handler, m._lazyPromises?.route])\r\n    );\r\n  } catch (e) {\r\n  }\r\n  return results;\r\n}\r\nasync function callLoaderOrAction({\r\n  request,\r\n  match,\r\n  lazyHandlerPromise,\r\n  lazyRoutePromise,\r\n  handlerOverride,\r\n  scopedContext\r\n}) {\r\n  let result;\r\n  let onReject;\r\n  let isAction = isMutationMethod(request.method);\r\n  let type = isAction ? \"action\" : \"loader\";\r\n  let runHandler = (handler) => {\r\n    let reject;\r\n    let abortPromise = new Promise((_, r) => reject = r);\r\n    onReject = () => reject();\r\n    request.signal.addEventListener(\"abort\", onReject);\r\n    let actualHandler = (ctx) => {\r\n      if (typeof handler !== \"function\") {\r\n        return Promise.reject(\r\n          new Error(\r\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\r\n          )\r\n        );\r\n      }\r\n      return handler(\r\n        {\r\n          request,\r\n          params: match.params,\r\n          context: scopedContext\r\n        },\r\n        ...ctx !== void 0 ? [ctx] : []\r\n      );\r\n    };\r\n    let handlerPromise = (async () => {\r\n      try {\r\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\r\n        return { type: \"data\", result: val };\r\n      } catch (e) {\r\n        return { type: \"error\", result: e };\r\n      }\r\n    })();\r\n    return Promise.race([handlerPromise, abortPromise]);\r\n  };\r\n  try {\r\n    let handler = isAction ? match.route.action : match.route.loader;\r\n    if (lazyHandlerPromise || lazyRoutePromise) {\r\n      if (handler) {\r\n        let handlerError;\r\n        let [value] = await Promise.all([\r\n          // If the handler throws, don't let it immediately bubble out,\r\n          // since we need to let the lazy() execution finish so we know if this\r\n          // route has a boundary that can handle the error\r\n          runHandler(handler).catch((e) => {\r\n            handlerError = e;\r\n          }),\r\n          // Ensure all lazy route promises are resolved before continuing\r\n          lazyHandlerPromise,\r\n          lazyRoutePromise\r\n        ]);\r\n        if (handlerError !== void 0) {\r\n          throw handlerError;\r\n        }\r\n        result = value;\r\n      } else {\r\n        await lazyHandlerPromise;\r\n        let handler2 = isAction ? match.route.action : match.route.loader;\r\n        if (handler2) {\r\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\r\n        } else if (type === \"action\") {\r\n          let url = new URL(request.url);\r\n          let pathname = url.pathname + url.search;\r\n          throw getInternalRouterError(405, {\r\n            method: request.method,\r\n            pathname,\r\n            routeId: match.route.id\r\n          });\r\n        } else {\r\n          return { type: \"data\" /* data */, result: void 0 };\r\n        }\r\n      }\r\n    } else if (!handler) {\r\n      let url = new URL(request.url);\r\n      let pathname = url.pathname + url.search;\r\n      throw getInternalRouterError(404, {\r\n        pathname\r\n      });\r\n    } else {\r\n      result = await runHandler(handler);\r\n    }\r\n  } catch (e) {\r\n    return { type: \"error\" /* error */, result: e };\r\n  } finally {\r\n    if (onReject) {\r\n      request.signal.removeEventListener(\"abort\", onReject);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\r\n  let { result, type } = dataStrategyResult;\r\n  if (isResponse(result)) {\r\n    let data2;\r\n    try {\r\n      let contentType = result.headers.get(\"Content-Type\");\r\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n        if (result.body == null) {\r\n          data2 = null;\r\n        } else {\r\n          data2 = await result.json();\r\n        }\r\n      } else {\r\n        data2 = await result.text();\r\n      }\r\n    } catch (e) {\r\n      return { type: \"error\" /* error */, error: e };\r\n    }\r\n    if (type === \"error\" /* error */) {\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\r\n        statusCode: result.status,\r\n        headers: result.headers\r\n      };\r\n    }\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: data2,\r\n      statusCode: result.status,\r\n      headers: result.headers\r\n    };\r\n  }\r\n  if (type === \"error\" /* error */) {\r\n    if (isDataWithResponseInit(result)) {\r\n      if (result.data instanceof Error) {\r\n        return {\r\n          type: \"error\" /* error */,\r\n          error: result.data,\r\n          statusCode: result.init?.status,\r\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n        };\r\n      }\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(\r\n          result.init?.status || 500,\r\n          void 0,\r\n          result.data\r\n        ),\r\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\r\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n      };\r\n    }\r\n    return {\r\n      type: \"error\" /* error */,\r\n      error: result,\r\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\r\n    };\r\n  }\r\n  if (isDataWithResponseInit(result)) {\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: result.data,\r\n      statusCode: result.init?.status,\r\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n    };\r\n  }\r\n  return { type: \"data\" /* data */, data: result };\r\n}\r\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\r\n  let location = response.headers.get(\"Location\");\r\n  invariant(\r\n    location,\r\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\r\n  );\r\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\r\n    let trimmedMatches = matches.slice(\r\n      0,\r\n      matches.findIndex((m) => m.route.id === routeId) + 1\r\n    );\r\n    location = normalizeTo(\r\n      new URL(request.url),\r\n      trimmedMatches,\r\n      basename,\r\n      location\r\n    );\r\n    response.headers.set(\"Location\", location);\r\n  }\r\n  return response;\r\n}\r\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\r\n  if (ABSOLUTE_URL_REGEX.test(location)) {\r\n    let normalizedLocation = location;\r\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\r\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\r\n    if (url.origin === currentUrl.origin && isSameBasename) {\r\n      return url.pathname + url.search + url.hash;\r\n    }\r\n  }\r\n  return location;\r\n}\r\nfunction createClientSideRequest(history, location, signal, submission) {\r\n  let url = history.createURL(stripHashFromPath(location)).toString();\r\n  let init = { signal };\r\n  if (submission && isMutationMethod(submission.formMethod)) {\r\n    let { formMethod, formEncType } = submission;\r\n    init.method = formMethod.toUpperCase();\r\n    if (formEncType === \"application/json\") {\r\n      init.headers = new Headers({ \"Content-Type\": formEncType });\r\n      init.body = JSON.stringify(submission.json);\r\n    } else if (formEncType === \"text/plain\") {\r\n      init.body = submission.text;\r\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\r\n      init.body = convertFormDataToSearchParams(submission.formData);\r\n    } else {\r\n      init.body = submission.formData;\r\n    }\r\n  }\r\n  return new Request(url, init);\r\n}\r\nfunction convertFormDataToSearchParams(formData) {\r\n  let searchParams = new URLSearchParams();\r\n  for (let [key, value] of formData.entries()) {\r\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\r\n  }\r\n  return searchParams;\r\n}\r\nfunction convertSearchParamsToFormData(searchParams) {\r\n  let formData = new FormData();\r\n  for (let [key, value] of searchParams.entries()) {\r\n    formData.append(key, value);\r\n  }\r\n  return formData;\r\n}\r\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\r\n  let loaderData = {};\r\n  let errors = null;\r\n  let statusCode;\r\n  let foundError = false;\r\n  let loaderHeaders = {};\r\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\r\n  matches.forEach((match) => {\r\n    if (!(match.route.id in results)) {\r\n      return;\r\n    }\r\n    let id = match.route.id;\r\n    let result = results[id];\r\n    invariant(\r\n      !isRedirectResult(result),\r\n      \"Cannot handle redirect results in processLoaderData\"\r\n    );\r\n    if (isErrorResult(result)) {\r\n      let error = result.error;\r\n      if (pendingError !== void 0) {\r\n        error = pendingError;\r\n        pendingError = void 0;\r\n      }\r\n      errors = errors || {};\r\n      if (skipLoaderErrorBubbling) {\r\n        errors[id] = error;\r\n      } else {\r\n        let boundaryMatch = findNearestBoundary(matches, id);\r\n        if (errors[boundaryMatch.route.id] == null) {\r\n          errors[boundaryMatch.route.id] = error;\r\n        }\r\n      }\r\n      if (!isStaticHandler) {\r\n        loaderData[id] = ResetLoaderDataSymbol;\r\n      }\r\n      if (!foundError) {\r\n        foundError = true;\r\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    } else {\r\n      loaderData[id] = result.data;\r\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\r\n        statusCode = result.statusCode;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    }\r\n  });\r\n  if (pendingError !== void 0 && pendingActionResult) {\r\n    errors = { [pendingActionResult[0]]: pendingError };\r\n    loaderData[pendingActionResult[0]] = void 0;\r\n  }\r\n  return {\r\n    loaderData,\r\n    errors,\r\n    statusCode: statusCode || 200,\r\n    loaderHeaders\r\n  };\r\n}\r\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\r\n  let { loaderData, errors } = processRouteLoaderData(\r\n    matches,\r\n    results,\r\n    pendingActionResult\r\n  );\r\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\r\n    let { key, match, controller } = rf;\r\n    let result = fetcherResults[key];\r\n    invariant(result, \"Did not find corresponding fetcher result\");\r\n    if (controller && controller.signal.aborted) {\r\n      return;\r\n    } else if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\r\n      if (!(errors && errors[boundaryMatch.route.id])) {\r\n        errors = {\r\n          ...errors,\r\n          [boundaryMatch.route.id]: result.error\r\n        };\r\n      }\r\n      state.fetchers.delete(key);\r\n    } else if (isRedirectResult(result)) {\r\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\r\n    } else {\r\n      let doneFetcher = getDoneFetcher(result.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  });\r\n  return { loaderData, errors };\r\n}\r\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\r\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\r\n    merged[k] = v;\r\n    return merged;\r\n  }, {});\r\n  for (let match of matches) {\r\n    let id = match.route.id;\r\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\r\n      mergedLoaderData[id] = loaderData[id];\r\n    }\r\n    if (errors && errors.hasOwnProperty(id)) {\r\n      break;\r\n    }\r\n  }\r\n  return mergedLoaderData;\r\n}\r\nfunction getActionDataForCommit(pendingActionResult) {\r\n  if (!pendingActionResult) {\r\n    return {};\r\n  }\r\n  return isErrorResult(pendingActionResult[1]) ? {\r\n    // Clear out prior actionData on errors\r\n    actionData: {}\r\n  } : {\r\n    actionData: {\r\n      [pendingActionResult[0]]: pendingActionResult[1].data\r\n    }\r\n  };\r\n}\r\nfunction findNearestBoundary(matches, routeId) {\r\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\r\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\r\n}\r\nfunction getShortCircuitMatches(routes) {\r\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\r\n    id: `__shim-error-route__`\r\n  };\r\n  return {\r\n    matches: [\r\n      {\r\n        params: {},\r\n        pathname: \"\",\r\n        pathnameBase: \"\",\r\n        route\r\n      }\r\n    ],\r\n    route\r\n  };\r\n}\r\nfunction getInternalRouterError(status, {\r\n  pathname,\r\n  routeId,\r\n  method,\r\n  type,\r\n  message\r\n} = {}) {\r\n  let statusText = \"Unknown Server Error\";\r\n  let errorMessage = \"Unknown @remix-run/router error\";\r\n  if (status === 400) {\r\n    statusText = \"Bad Request\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (type === \"invalid-body\") {\r\n      errorMessage = \"Unable to encode submission body\";\r\n    }\r\n  } else if (status === 403) {\r\n    statusText = \"Forbidden\";\r\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\r\n  } else if (status === 404) {\r\n    statusText = \"Not Found\";\r\n    errorMessage = `No route matches URL \"${pathname}\"`;\r\n  } else if (status === 405) {\r\n    statusText = \"Method Not Allowed\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (method) {\r\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\r\n    }\r\n  }\r\n  return new ErrorResponseImpl(\r\n    status || 500,\r\n    statusText,\r\n    new Error(errorMessage),\r\n    true\r\n  );\r\n}\r\nfunction findRedirect(results) {\r\n  let entries = Object.entries(results);\r\n  for (let i = entries.length - 1; i >= 0; i--) {\r\n    let [key, result] = entries[i];\r\n    if (isRedirectResult(result)) {\r\n      return { key, result };\r\n    }\r\n  }\r\n}\r\nfunction stripHashFromPath(path) {\r\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\r\n  return createPath({ ...parsedPath, hash: \"\" });\r\n}\r\nfunction isHashChangeOnly(a, b) {\r\n  if (a.pathname !== b.pathname || a.search !== b.search) {\r\n    return false;\r\n  }\r\n  if (a.hash === \"\") {\r\n    return b.hash !== \"\";\r\n  } else if (a.hash === b.hash) {\r\n    return true;\r\n  } else if (b.hash !== \"\") {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isRedirectDataStrategyResult(result) {\r\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\r\n}\r\nfunction isErrorResult(result) {\r\n  return result.type === \"error\" /* error */;\r\n}\r\nfunction isRedirectResult(result) {\r\n  return (result && result.type) === \"redirect\" /* redirect */;\r\n}\r\nfunction isDataWithResponseInit(value) {\r\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\r\n}\r\nfunction isResponse(value) {\r\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\r\n}\r\nfunction isValidMethod(method) {\r\n  return validRequestMethods.has(method.toUpperCase());\r\n}\r\nfunction isMutationMethod(method) {\r\n  return validMutationMethods.has(method.toUpperCase());\r\n}\r\nfunction hasNakedIndexQuery(search) {\r\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\r\n}\r\nfunction getTargetMatch(matches, location) {\r\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\r\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\r\n    return matches[matches.length - 1];\r\n  }\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches[pathMatches.length - 1];\r\n}\r\nfunction getSubmissionFromNavigation(navigation) {\r\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\r\n  if (!formMethod || !formAction || !formEncType) {\r\n    return;\r\n  }\r\n  if (text != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text\r\n    };\r\n  } else if (formData != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n  } else if (json !== void 0) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json,\r\n      text: void 0\r\n    };\r\n  }\r\n}\r\nfunction getLoadingNavigation(location, submission) {\r\n  if (submission) {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text\r\n    };\r\n    return navigation;\r\n  } else {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n    return navigation;\r\n  }\r\n}\r\nfunction getSubmittingNavigation(location, submission) {\r\n  let navigation = {\r\n    state: \"submitting\",\r\n    location,\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text\r\n  };\r\n  return navigation;\r\n}\r\nfunction getLoadingFetcher(submission, data2) {\r\n  if (submission) {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  } else {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  }\r\n}\r\nfunction getSubmittingFetcher(submission, existingFetcher) {\r\n  let fetcher = {\r\n    state: \"submitting\",\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text,\r\n    data: existingFetcher ? existingFetcher.data : void 0\r\n  };\r\n  return fetcher;\r\n}\r\nfunction getDoneFetcher(data2) {\r\n  let fetcher = {\r\n    state: \"idle\",\r\n    formMethod: void 0,\r\n    formAction: void 0,\r\n    formEncType: void 0,\r\n    formData: void 0,\r\n    json: void 0,\r\n    text: void 0,\r\n    data: data2\r\n  };\r\n  return fetcher;\r\n}\r\nfunction restoreAppliedTransitions(_window, transitions) {\r\n  try {\r\n    let sessionPositions = _window.sessionStorage.getItem(\r\n      TRANSITIONS_STORAGE_KEY\r\n    );\r\n    if (sessionPositions) {\r\n      let json = JSON.parse(sessionPositions);\r\n      for (let [k, v] of Object.entries(json || {})) {\r\n        if (v && Array.isArray(v)) {\r\n          transitions.set(k, new Set(v || []));\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n  }\r\n}\r\nfunction persistAppliedTransitions(_window, transitions) {\r\n  if (transitions.size > 0) {\r\n    let json = {};\r\n    for (let [k, v] of transitions) {\r\n      json[k] = [...v];\r\n    }\r\n    try {\r\n      _window.sessionStorage.setItem(\r\n        TRANSITIONS_STORAGE_KEY,\r\n        JSON.stringify(json)\r\n      );\r\n    } catch (error) {\r\n      warning(\r\n        false,\r\n        `Failed to save applied view transitions in sessionStorage (${error}).`\r\n      );\r\n    }\r\n  }\r\n}\r\nfunction createDeferred() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/components.tsx\r\nvar React3 = __toESM(require(\"react\"));\r\n\r\n// lib/context.ts\r\nvar React = __toESM(require(\"react\"));\r\nvar DataRouterContext = React.createContext(null);\r\nDataRouterContext.displayName = \"DataRouter\";\r\nvar DataRouterStateContext = React.createContext(null);\r\nDataRouterStateContext.displayName = \"DataRouterState\";\r\nvar ViewTransitionContext = React.createContext({\r\n  isTransitioning: false\r\n});\r\nViewTransitionContext.displayName = \"ViewTransition\";\r\nvar FetchersContext = React.createContext(\r\n  /* @__PURE__ */ new Map()\r\n);\r\nFetchersContext.displayName = \"Fetchers\";\r\nvar AwaitContext = React.createContext(null);\r\nAwaitContext.displayName = \"Await\";\r\nvar NavigationContext = React.createContext(\r\n  null\r\n);\r\nNavigationContext.displayName = \"Navigation\";\r\nvar LocationContext = React.createContext(\r\n  null\r\n);\r\nLocationContext.displayName = \"Location\";\r\nvar RouteContext = React.createContext({\r\n  outlet: null,\r\n  matches: [],\r\n  isDataRoute: false\r\n});\r\nRouteContext.displayName = \"Route\";\r\nvar RouteErrorContext = React.createContext(null);\r\nRouteErrorContext.displayName = \"RouteError\";\r\n\r\n// lib/hooks.tsx\r\nvar React2 = __toESM(require(\"react\"));\r\nvar ENABLE_DEV_WARNINGS = true;\r\nfunction useInRouterContext() {\r\n  return React2.useContext(LocationContext) != null;\r\n}\r\nfunction useLocation() {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useLocation() may be used only in the context of a <Router> component.`\r\n  );\r\n  return React2.useContext(LocationContext).location;\r\n}\r\nvar OutletContext = React2.createContext(null);\r\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useRoutes() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { navigator: navigator2, static: isStatic } = React2.useContext(NavigationContext);\r\n  let { matches: parentMatches } = React2.useContext(RouteContext);\r\n  let routeMatch = parentMatches[parentMatches.length - 1];\r\n  let parentParams = routeMatch ? routeMatch.params : {};\r\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\r\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\r\n  let parentRoute = routeMatch && routeMatch.route;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    let parentPath = parentRoute && parentRoute.path || \"\";\r\n    warningOnce(\r\n      parentPathname,\r\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\r\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\r\n\r\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\r\n    );\r\n  }\r\n  let locationFromContext = useLocation();\r\n  let location;\r\n  if (locationArg) {\r\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n    invariant(\r\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\r\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\r\n    );\r\n    location = parsedLocationArg;\r\n  } else {\r\n    location = locationFromContext;\r\n  }\r\n  let pathname = location.pathname || \"/\";\r\n  let remainingPathname = pathname;\r\n  if (parentPathnameBase !== \"/\") {\r\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\r\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\r\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\r\n  }\r\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    warning(\r\n      parentRoute || matches != null,\r\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\r\n    );\r\n    warning(\r\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\r\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\r\n    );\r\n  }\r\n  let renderedMatches = _renderMatches(\r\n    matches && matches.map(\r\n      (match) => Object.assign({}, match, {\r\n        params: Object.assign({}, parentParams, match.params),\r\n        pathname: joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\r\n        ]),\r\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\r\n        ])\r\n      })\r\n    ),\r\n    parentMatches,\r\n    dataRouterState,\r\n    future\r\n  );\r\n  if (locationArg && renderedMatches) {\r\n    return /* @__PURE__ */ React2.createElement(\r\n      LocationContext.Provider,\r\n      {\r\n        value: {\r\n          location: {\r\n            pathname: \"/\",\r\n            search: \"\",\r\n            hash: \"\",\r\n            state: null,\r\n            key: \"default\",\r\n            ...location\r\n          },\r\n          navigationType: \"POP\" /* Pop */\r\n        }\r\n      },\r\n      renderedMatches\r\n    );\r\n  }\r\n  return renderedMatches;\r\n}\r\nfunction DefaultErrorComponent() {\r\n  let error = useRouteError();\r\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\r\n  let stack = error instanceof Error ? error.stack : null;\r\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\r\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\r\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\r\n  let devInfo = null;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    console.error(\r\n      \"Error handled by React Router default ErrorBoundary:\",\r\n      error\r\n    );\r\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\r\n  }\r\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\r\n}\r\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\r\nvar RenderErrorBoundary = class extends React2.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: props.location,\r\n      revalidation: props.revalidation,\r\n      error: props.error\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\r\n      return {\r\n        error: props.error,\r\n        location: props.location,\r\n        revalidation: props.revalidation\r\n      };\r\n    }\r\n    return {\r\n      error: props.error !== void 0 ? props.error : state.error,\r\n      location: state.location,\r\n      revalidation: props.revalidation || state.revalidation\r\n    };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\r\n      \"React Router caught the following error during render\",\r\n      error,\r\n      errorInfo\r\n    );\r\n  }\r\n  render() {\r\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\r\n      RouteErrorContext.Provider,\r\n      {\r\n        value: this.state.error,\r\n        children: this.props.component\r\n      }\r\n    )) : this.props.children;\r\n  }\r\n};\r\nfunction RenderedRoute({ routeContext, match, children }) {\r\n  let dataRouterContext = React2.useContext(DataRouterContext);\r\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\r\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\r\n  }\r\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\r\n}\r\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\r\n  if (matches == null) {\r\n    if (!dataRouterState) {\r\n      return null;\r\n    }\r\n    if (dataRouterState.errors) {\r\n      matches = dataRouterState.matches;\r\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\r\n      matches = dataRouterState.matches;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  let renderedMatches = matches;\r\n  let errors = dataRouterState?.errors;\r\n  if (errors != null) {\r\n    let errorIndex = renderedMatches.findIndex(\r\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\r\n    );\r\n    invariant(\r\n      errorIndex >= 0,\r\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\r\n        errors\r\n      ).join(\",\")}`\r\n    );\r\n    renderedMatches = renderedMatches.slice(\r\n      0,\r\n      Math.min(renderedMatches.length, errorIndex + 1)\r\n    );\r\n  }\r\n  let renderFallback = false;\r\n  let fallbackIndex = -1;\r\n  if (dataRouterState) {\r\n    for (let i = 0; i < renderedMatches.length; i++) {\r\n      let match = renderedMatches[i];\r\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\r\n        fallbackIndex = i;\r\n      }\r\n      if (match.route.id) {\r\n        let { loaderData, errors: errors2 } = dataRouterState;\r\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\r\n        if (match.route.lazy || needsToRunLoader) {\r\n          renderFallback = true;\r\n          if (fallbackIndex >= 0) {\r\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\r\n          } else {\r\n            renderedMatches = [renderedMatches[0]];\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return renderedMatches.reduceRight((outlet, match, index) => {\r\n    let error;\r\n    let shouldRenderHydrateFallback = false;\r\n    let errorElement = null;\r\n    let hydrateFallbackElement = null;\r\n    if (dataRouterState) {\r\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\r\n      errorElement = match.route.errorElement || defaultErrorElement;\r\n      if (renderFallback) {\r\n        if (fallbackIndex < 0 && index === 0) {\r\n          warningOnce(\r\n            \"route-fallback\",\r\n            false,\r\n            \"No `HydrateFallback` element provided to render during initial hydration\"\r\n          );\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = null;\r\n        } else if (fallbackIndex === index) {\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\r\n        }\r\n      }\r\n    }\r\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\r\n    let getChildren = () => {\r\n      let children;\r\n      if (error) {\r\n        children = errorElement;\r\n      } else if (shouldRenderHydrateFallback) {\r\n        children = hydrateFallbackElement;\r\n      } else if (match.route.Component) {\r\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\r\n      } else if (match.route.element) {\r\n        children = match.route.element;\r\n      } else {\r\n        children = outlet;\r\n      }\r\n      return /* @__PURE__ */ React2.createElement(\r\n        RenderedRoute,\r\n        {\r\n          match,\r\n          routeContext: {\r\n            outlet,\r\n            matches: matches2,\r\n            isDataRoute: dataRouterState != null\r\n          },\r\n          children\r\n        }\r\n      );\r\n    };\r\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\r\n      RenderErrorBoundary,\r\n      {\r\n        location: dataRouterState.location,\r\n        revalidation: dataRouterState.revalidation,\r\n        component: errorElement,\r\n        error,\r\n        children: getChildren(),\r\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\r\n      }\r\n    ) : getChildren();\r\n  }, null);\r\n}\r\nfunction getDataRouterConsoleError(hookName) {\r\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\r\n}\r\nfunction useDataRouterState(hookName) {\r\n  let state = React2.useContext(DataRouterStateContext);\r\n  invariant(state, getDataRouterConsoleError(hookName));\r\n  return state;\r\n}\r\nfunction useRouteContext(hookName) {\r\n  let route = React2.useContext(RouteContext);\r\n  invariant(route, getDataRouterConsoleError(hookName));\r\n  return route;\r\n}\r\nfunction useCurrentRouteId(hookName) {\r\n  let route = useRouteContext(hookName);\r\n  let thisRoute = route.matches[route.matches.length - 1];\r\n  invariant(\r\n    thisRoute.route.id,\r\n    `${hookName} can only be used on routes that contain a unique \"id\"`\r\n  );\r\n  return thisRoute.route.id;\r\n}\r\nfunction useRouteError() {\r\n  let error = React2.useContext(RouteErrorContext);\r\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\r\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\r\n  if (error !== void 0) {\r\n    return error;\r\n  }\r\n  return state.errors?.[routeId];\r\n}\r\nvar alreadyWarned = {};\r\nfunction warningOnce(key, cond, message) {\r\n  if (!cond && !alreadyWarned[key]) {\r\n    alreadyWarned[key] = true;\r\n    warning(false, message);\r\n  }\r\n}\r\n\r\n// lib/server-runtime/warnings.ts\r\nvar alreadyWarned2 = {};\r\nfunction warnOnce(condition, message) {\r\n  if (!condition && !alreadyWarned2[message]) {\r\n    alreadyWarned2[message] = true;\r\n    console.warn(message);\r\n  }\r\n}\r\n\r\n// lib/components.tsx\r\nvar ENABLE_DEV_WARNINGS2 = true;\r\nfunction mapRouteProperties(route) {\r\n  let updates = {\r\n    // Note: this check also occurs in createRoutesFromChildren so update\r\n    // there if you change this -- please and thank you!\r\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\r\n  };\r\n  if (route.Component) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.element) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      element: React3.createElement(route.Component),\r\n      Component: void 0\r\n    });\r\n  }\r\n  if (route.HydrateFallback) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.hydrateFallbackElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\r\n      HydrateFallback: void 0\r\n    });\r\n  }\r\n  if (route.ErrorBoundary) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.errorElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      errorElement: React3.createElement(route.ErrorBoundary),\r\n      ErrorBoundary: void 0\r\n    });\r\n  }\r\n  return updates;\r\n}\r\nvar hydrationRouteProperties = [\r\n  \"HydrateFallback\",\r\n  \"hydrateFallbackElement\"\r\n];\r\nvar Deferred = class {\r\n  constructor() {\r\n    this.status = \"pending\";\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = (value) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"resolved\";\r\n          resolve(value);\r\n        }\r\n      };\r\n      this.reject = (reason) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"rejected\";\r\n          reject(reason);\r\n        }\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction RouterProvider({\r\n  router: router2,\r\n  flushSync: reactDomFlushSyncImpl\r\n}) {\r\n  let [state, setStateImpl] = React3.useState(router2.state);\r\n  let [pendingState, setPendingState] = React3.useState();\r\n  let [vtContext, setVtContext] = React3.useState({\r\n    isTransitioning: false\r\n  });\r\n  let [renderDfd, setRenderDfd] = React3.useState();\r\n  let [transition, setTransition] = React3.useState();\r\n  let [interruption, setInterruption] = React3.useState();\r\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\r\n  let setState = React3.useCallback(\r\n    (newState, { deletedFetchers, flushSync: flushSync2, viewTransitionOpts }) => {\r\n      newState.fetchers.forEach((fetcher, key) => {\r\n        if (fetcher.data !== void 0) {\r\n          fetcherData.current.set(key, fetcher.data);\r\n        }\r\n      });\r\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\r\n      warnOnce(\r\n        flushSync2 === false || reactDomFlushSyncImpl != null,\r\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\r\n      );\r\n      let isViewTransitionAvailable = router2.window != null && router2.window.document != null && typeof router2.window.document.startViewTransition === \"function\";\r\n      warnOnce(\r\n        viewTransitionOpts == null || isViewTransitionAvailable,\r\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\r\n      );\r\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\r\n        if (reactDomFlushSyncImpl && flushSync2) {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        } else {\r\n          React3.startTransition(() => setStateImpl(newState));\r\n        }\r\n        return;\r\n      }\r\n      if (reactDomFlushSyncImpl && flushSync2) {\r\n        reactDomFlushSyncImpl(() => {\r\n          if (transition) {\r\n            renderDfd && renderDfd.resolve();\r\n            transition.skipTransition();\r\n          }\r\n          setVtContext({\r\n            isTransitioning: true,\r\n            flushSync: true,\r\n            currentLocation: viewTransitionOpts.currentLocation,\r\n            nextLocation: viewTransitionOpts.nextLocation\r\n          });\r\n        });\r\n        let t = router2.window.document.startViewTransition(() => {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        });\r\n        t.finished.finally(() => {\r\n          reactDomFlushSyncImpl(() => {\r\n            setRenderDfd(void 0);\r\n            setTransition(void 0);\r\n            setPendingState(void 0);\r\n            setVtContext({ isTransitioning: false });\r\n          });\r\n        });\r\n        reactDomFlushSyncImpl(() => setTransition(t));\r\n        return;\r\n      }\r\n      if (transition) {\r\n        renderDfd && renderDfd.resolve();\r\n        transition.skipTransition();\r\n        setInterruption({\r\n          state: newState,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      } else {\r\n        setPendingState(newState);\r\n        setVtContext({\r\n          isTransitioning: true,\r\n          flushSync: false,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      }\r\n    },\r\n    [router2.window, reactDomFlushSyncImpl, transition, renderDfd]\r\n  );\r\n  React3.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);\r\n  React3.useEffect(() => {\r\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\r\n      setRenderDfd(new Deferred());\r\n    }\r\n  }, [vtContext]);\r\n  React3.useEffect(() => {\r\n    if (renderDfd && pendingState && router2.window) {\r\n      let newState = pendingState;\r\n      let renderPromise = renderDfd.promise;\r\n      let transition2 = router2.window.document.startViewTransition(async () => {\r\n        React3.startTransition(() => setStateImpl(newState));\r\n        await renderPromise;\r\n      });\r\n      transition2.finished.finally(() => {\r\n        setRenderDfd(void 0);\r\n        setTransition(void 0);\r\n        setPendingState(void 0);\r\n        setVtContext({ isTransitioning: false });\r\n      });\r\n      setTransition(transition2);\r\n    }\r\n  }, [pendingState, renderDfd, router2.window]);\r\n  React3.useEffect(() => {\r\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\r\n      renderDfd.resolve();\r\n    }\r\n  }, [renderDfd, transition, state.location, pendingState]);\r\n  React3.useEffect(() => {\r\n    if (!vtContext.isTransitioning && interruption) {\r\n      setPendingState(interruption.state);\r\n      setVtContext({\r\n        isTransitioning: true,\r\n        flushSync: false,\r\n        currentLocation: interruption.currentLocation,\r\n        nextLocation: interruption.nextLocation\r\n      });\r\n      setInterruption(void 0);\r\n    }\r\n  }, [vtContext.isTransitioning, interruption]);\r\n  let navigator2 = React3.useMemo(() => {\r\n    return {\r\n      createHref: router2.createHref,\r\n      encodeLocation: router2.encodeLocation,\r\n      go: (n) => router2.navigate(n),\r\n      push: (to, state2, opts) => router2.navigate(to, {\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      }),\r\n      replace: (to, state2, opts) => router2.navigate(to, {\r\n        replace: true,\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      })\r\n    };\r\n  }, [router2]);\r\n  let basename = router2.basename || \"/\";\r\n  let dataRouterContext = React3.useMemo(\r\n    () => ({\r\n      router: router2,\r\n      navigator: navigator2,\r\n      static: false,\r\n      basename\r\n    }),\r\n    [router2, navigator2, basename]\r\n  );\r\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      location: state.location,\r\n      navigationType: state.historyAction,\r\n      navigator: navigator2\r\n    },\r\n    /* @__PURE__ */ React3.createElement(\r\n      MemoizedDataRoutes,\r\n      {\r\n        routes: router2.routes,\r\n        future: router2.future,\r\n        state\r\n      }\r\n    )\r\n  ))))), null);\r\n}\r\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\r\nfunction DataRoutes({\r\n  routes,\r\n  future,\r\n  state\r\n}) {\r\n  return useRoutesImpl(routes, void 0, state, future);\r\n}\r\nfunction Router({\r\n  basename: basenameProp = \"/\",\r\n  children = null,\r\n  location: locationProp,\r\n  navigationType = \"POP\" /* Pop */,\r\n  navigator: navigator2,\r\n  static: staticProp = false\r\n}) {\r\n  invariant(\r\n    !useInRouterContext(),\r\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\r\n  );\r\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\r\n  let navigationContext = React3.useMemo(\r\n    () => ({\r\n      basename,\r\n      navigator: navigator2,\r\n      static: staticProp,\r\n      future: {}\r\n    }),\r\n    [basename, navigator2, staticProp]\r\n  );\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let {\r\n    pathname = \"/\",\r\n    search = \"\",\r\n    hash = \"\",\r\n    state = null,\r\n    key = \"default\"\r\n  } = locationProp;\r\n  let locationContext = React3.useMemo(() => {\r\n    let trailingPathname = stripBasename(pathname, basename);\r\n    if (trailingPathname == null) {\r\n      return null;\r\n    }\r\n    return {\r\n      location: {\r\n        pathname: trailingPathname,\r\n        search,\r\n        hash,\r\n        state,\r\n        key\r\n      },\r\n      navigationType\r\n    };\r\n  }, [basename, pathname, search, hash, state, key, navigationType]);\r\n  warning(\r\n    locationContext != null,\r\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\r\n  );\r\n  if (locationContext == null) {\r\n    return null;\r\n  }\r\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\nvar React9 = __toESM(require(\"react\"));\r\n\r\n// lib/dom/ssr/invariant.ts\r\nfunction invariant2(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/routeModules.ts\r\nasync function loadRouteModule(route, routeModulesCache) {\r\n  if (route.id in routeModulesCache) {\r\n    return routeModulesCache[route.id];\r\n  }\r\n  try {\r\n    let routeModule = await import(\r\n      /* @vite-ignore */\r\n      /* webpackIgnore: true */\r\n      route.module\r\n    );\r\n    routeModulesCache[route.id] = routeModule;\r\n    return routeModule;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error loading route module \\`${route.module}\\`, reloading page...`\r\n    );\r\n    console.error(error);\r\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\r\n    void 0) {\r\n      throw error;\r\n    }\r\n    window.location.reload();\r\n    return new Promise(() => {\r\n    });\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/links.ts\r\nfunction getRouteCssDescriptors(route) {\r\n  if (!route.css) return [];\r\n  return route.css.map((href) => ({ rel: \"stylesheet\", href }));\r\n}\r\nasync function prefetchRouteCss(route) {\r\n  if (!route.css) return;\r\n  let descriptors = getRouteCssDescriptors(route);\r\n  await Promise.all(descriptors.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLinks(route, routeModule) {\r\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\r\n  let descriptors = [];\r\n  if (route.css) {\r\n    descriptors.push(...getRouteCssDescriptors(route));\r\n  }\r\n  if (routeModule.links) {\r\n    descriptors.push(...routeModule.links());\r\n  }\r\n  if (descriptors.length === 0) return;\r\n  let styleLinks = [];\r\n  for (let descriptor of descriptors) {\r\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\r\n      styleLinks.push({\r\n        ...descriptor,\r\n        rel: \"preload\",\r\n        as: \"style\"\r\n      });\r\n    }\r\n  }\r\n  await Promise.all(styleLinks.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLink(descriptor) {\r\n  return new Promise((resolve) => {\r\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\r\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\r\n    )) {\r\n      return resolve();\r\n    }\r\n    let link = document.createElement(\"link\");\r\n    Object.assign(link, descriptor);\r\n    function removeLink() {\r\n      if (document.head.contains(link)) {\r\n        document.head.removeChild(link);\r\n      }\r\n    }\r\n    link.onload = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    link.onerror = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    document.head.appendChild(link);\r\n  });\r\n}\r\nfunction isPageLinkDescriptor(object) {\r\n  return object != null && typeof object.page === \"string\";\r\n}\r\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\r\n  return dedupeHrefs(\r\n    matches.map((match) => {\r\n      let route = manifest.routes[match.route.id];\r\n      if (!route) return [];\r\n      let hrefs = [route.module];\r\n      if (route.clientActionModule) {\r\n        hrefs = hrefs.concat(route.clientActionModule);\r\n      }\r\n      if (route.clientLoaderModule) {\r\n        hrefs = hrefs.concat(route.clientLoaderModule);\r\n      }\r\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\r\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\r\n      }\r\n      if (route.imports) {\r\n        hrefs = hrefs.concat(route.imports);\r\n      }\r\n      return hrefs;\r\n    }).flat(1)\r\n  );\r\n}\r\nfunction dedupeHrefs(hrefs) {\r\n  return [...new Set(hrefs)];\r\n}\r\nvar _isPreloadSupported;\r\nfunction isPreloadSupported() {\r\n  if (_isPreloadSupported !== void 0) {\r\n    return _isPreloadSupported;\r\n  }\r\n  let el = document.createElement(\"link\");\r\n  _isPreloadSupported = el.relList.supports(\"preload\");\r\n  el = null;\r\n  return _isPreloadSupported;\r\n}\r\n\r\n// lib/dom/ssr/markup.ts\r\nfunction createHtml(html) {\r\n  return { __html: html };\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\nvar React4 = __toESM(require(\"react\"));\r\nvar import_turbo_stream = require(\"turbo-stream\");\r\n\r\n// lib/dom/ssr/data.ts\r\nasync function createRequestInit(request) {\r\n  let init = { signal: request.signal };\r\n  if (request.method !== \"GET\") {\r\n    init.method = request.method;\r\n    let contentType = request.headers.get(\"Content-Type\");\r\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = JSON.stringify(await request.json());\r\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = await request.text();\r\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\r\n      init.body = new URLSearchParams(await request.text());\r\n    } else {\r\n      init.body = await request.formData();\r\n    }\r\n  }\r\n  return init;\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\r\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\r\nfunction getSingleFetchDataStrategy(getRouter, getRouteInfo, ssr, basename) {\r\n  let dataStrategy = getSingleFetchDataStrategyImpl(\r\n    getRouter,\r\n    getRouteInfo,\r\n    fetchAndDecodeViaTurboStream,\r\n    ssr,\r\n    basename\r\n  );\r\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\r\n}\r\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\r\n  return async (args) => {\r\n    let { request, matches, fetcherKey } = args;\r\n    let router2 = getRouter();\r\n    if (request.method !== \"GET\") {\r\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\r\n    }\r\n    let foundRevalidatingServerLoader = matches.some((m) => {\r\n      let { hasLoader, hasClientLoader } = getRouteInfo(m.route.id);\r\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\r\n    });\r\n    if (!ssr && !foundRevalidatingServerLoader) {\r\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\r\n    }\r\n    if (fetcherKey) {\r\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\r\n    }\r\n    return singleFetchLoaderNavigationStrategy(\r\n      args,\r\n      router2,\r\n      getRouteInfo,\r\n      fetchAndDecode,\r\n      ssr,\r\n      basename\r\n    );\r\n  };\r\n}\r\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\r\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\r\n  invariant2(actionMatch, \"No action match found\");\r\n  let actionStatus = void 0;\r\n  let result = await actionMatch.resolve(async (handler) => {\r\n    let result2 = await handler(async () => {\r\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\r\n        actionMatch.route.id\r\n      ]);\r\n      actionStatus = status;\r\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\r\n    });\r\n    return result2;\r\n  });\r\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\r\n    return { [actionMatch.route.id]: result };\r\n  }\r\n  return {\r\n    [actionMatch.route.id]: {\r\n      type: result.type,\r\n      result: data(result.result, actionStatus)\r\n    }\r\n  };\r\n}\r\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\r\n  let matchesToLoad = args.matches.filter(\r\n    (m) => m.unstable_shouldCallHandler()\r\n  );\r\n  let results = {};\r\n  await Promise.all(\r\n    matchesToLoad.map(\r\n      (m) => m.resolve(async (handler) => {\r\n        try {\r\n          let { hasClientLoader } = getRouteInfo(m.route.id);\r\n          let routeId = m.route.id;\r\n          let result = hasClientLoader ? await handler(async () => {\r\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\r\n            return unwrapSingleFetchResult(data2, routeId);\r\n          }) : await handler();\r\n          results[m.route.id] = { type: \"data\", result };\r\n        } catch (e) {\r\n          results[m.route.id] = { type: \"error\", result: e };\r\n        }\r\n      })\r\n    )\r\n  );\r\n  return results;\r\n}\r\nasync function singleFetchLoaderNavigationStrategy(args, router2, getRouteInfo, fetchAndDecode, ssr, basename) {\r\n  let routesParams = /* @__PURE__ */ new Set();\r\n  let foundOptOutRoute = false;\r\n  let routeDfds = args.matches.map(() => createDeferred2());\r\n  let singleFetchDfd = createDeferred2();\r\n  let results = {};\r\n  let resolvePromise = Promise.all(\r\n    args.matches.map(\r\n      async (m, i) => m.resolve(async (handler) => {\r\n        routeDfds[i].resolve();\r\n        let routeId = m.route.id;\r\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(routeId);\r\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\r\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\r\n        if (!shouldCall) {\r\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\r\n          hasLoader && // for a route with a server loader,\r\n          hasShouldRevalidate === true);\r\n          return;\r\n        }\r\n        if (hasClientLoader) {\r\n          if (hasLoader) {\r\n            foundOptOutRoute = true;\r\n          }\r\n          try {\r\n            let result = await handler(async () => {\r\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\r\n              return unwrapSingleFetchResult(data2, routeId);\r\n            });\r\n            results[routeId] = { type: \"data\", result };\r\n          } catch (e) {\r\n            results[routeId] = { type: \"error\", result: e };\r\n          }\r\n          return;\r\n        }\r\n        if (hasLoader) {\r\n          routesParams.add(routeId);\r\n        }\r\n        try {\r\n          let result = await handler(async () => {\r\n            let data2 = await singleFetchDfd.promise;\r\n            return unwrapSingleFetchResult(data2, routeId);\r\n          });\r\n          results[routeId] = { type: \"data\", result };\r\n        } catch (e) {\r\n          results[routeId] = { type: \"error\", result: e };\r\n        }\r\n      })\r\n    )\r\n  );\r\n  await Promise.all(routeDfds.map((d) => d.promise));\r\n  if ((!router2.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\r\n    singleFetchDfd.resolve({});\r\n  } else {\r\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\r\n    try {\r\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\r\n      singleFetchDfd.resolve(data2.data);\r\n    } catch (e) {\r\n      singleFetchDfd.reject(e);\r\n    }\r\n  }\r\n  await resolvePromise;\r\n  return results;\r\n}\r\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\r\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\r\n  invariant2(fetcherMatch, \"No fetcher match found\");\r\n  let routeId = fetcherMatch.route.id;\r\n  let result = await fetcherMatch.resolve(\r\n    async (handler) => handler(async () => {\r\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\r\n      return unwrapSingleFetchResult(data2, routeId);\r\n    })\r\n  );\r\n  return { [fetcherMatch.route.id]: result };\r\n}\r\nfunction stripIndexParam(url) {\r\n  let indexValues = url.searchParams.getAll(\"index\");\r\n  url.searchParams.delete(\"index\");\r\n  let indexValuesToKeep = [];\r\n  for (let indexValue of indexValues) {\r\n    if (indexValue) {\r\n      indexValuesToKeep.push(indexValue);\r\n    }\r\n  }\r\n  for (let toKeep of indexValuesToKeep) {\r\n    url.searchParams.append(\"index\", toKeep);\r\n  }\r\n  return url;\r\n}\r\nfunction singleFetchUrl(reqUrl, basename) {\r\n  let url = typeof reqUrl === \"string\" ? new URL(\r\n    reqUrl,\r\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\r\n    // don't assume window is available\r\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\r\n  ) : reqUrl;\r\n  if (url.pathname === \"/\") {\r\n    url.pathname = \"_root.data\";\r\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\r\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\r\n  } else {\r\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\r\n  }\r\n  return url;\r\n}\r\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\r\n  let { request } = args;\r\n  let url = singleFetchUrl(request.url, basename);\r\n  if (request.method === \"GET\") {\r\n    url = stripIndexParam(url);\r\n    if (targetRoutes) {\r\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\r\n    }\r\n  }\r\n  let res = await fetch(url, await createRequestInit(request));\r\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\r\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\r\n  }\r\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\r\n    let routes = {};\r\n    if (targetRoutes && request.method !== \"GET\") {\r\n      routes[targetRoutes[0]] = { data: void 0 };\r\n    }\r\n    return {\r\n      status: res.status,\r\n      data: { routes }\r\n    };\r\n  }\r\n  invariant2(res.body, \"No response body to decode\");\r\n  try {\r\n    let decoded = await decodeViaTurboStream(res.body, window);\r\n    let data2;\r\n    if (request.method === \"GET\") {\r\n      let typed = decoded.value;\r\n      if (SingleFetchRedirectSymbol in typed) {\r\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\r\n      } else {\r\n        data2 = { routes: typed };\r\n      }\r\n    } else {\r\n      let typed = decoded.value;\r\n      let routeId = targetRoutes?.[0];\r\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\r\n      if (\"redirect\" in typed) {\r\n        data2 = { redirect: typed };\r\n      } else {\r\n        data2 = { routes: { [routeId]: typed } };\r\n      }\r\n    }\r\n    return { status: res.status, data: data2 };\r\n  } catch (e) {\r\n    throw new Error(\"Unable to decode turbo-stream response\");\r\n  }\r\n}\r\nfunction decodeViaTurboStream(body, global) {\r\n  return (0, import_turbo_stream.decode)(body, {\r\n    plugins: [\r\n      (type, ...rest) => {\r\n        if (type === \"SanitizedError\") {\r\n          let [name, message, stack] = rest;\r\n          let Constructor = Error;\r\n          if (name && name in global && typeof global[name] === \"function\") {\r\n            Constructor = global[name];\r\n          }\r\n          let error = new Constructor(message);\r\n          error.stack = stack;\r\n          return { value: error };\r\n        }\r\n        if (type === \"ErrorResponse\") {\r\n          let [data2, status, statusText] = rest;\r\n          return {\r\n            value: new ErrorResponseImpl(status, statusText, data2)\r\n          };\r\n        }\r\n        if (type === \"SingleFetchRedirect\") {\r\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\r\n        }\r\n        if (type === \"SingleFetchClassInstance\") {\r\n          return { value: rest[0] };\r\n        }\r\n        if (type === \"SingleFetchFallback\") {\r\n          return { value: void 0 };\r\n        }\r\n      }\r\n    ]\r\n  });\r\n}\r\nfunction unwrapSingleFetchResult(result, routeId) {\r\n  if (\"redirect\" in result) {\r\n    let {\r\n      redirect: location,\r\n      revalidate,\r\n      reload,\r\n      replace: replace2,\r\n      status\r\n    } = result.redirect;\r\n    throw redirect(location, {\r\n      status,\r\n      headers: {\r\n        // Three R's of redirecting (lol Veep)\r\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\r\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\r\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\r\n      }\r\n    });\r\n  }\r\n  let routeResult = result.routes[routeId];\r\n  if (\"error\" in routeResult) {\r\n    throw routeResult.error;\r\n  } else if (\"data\" in routeResult) {\r\n    return routeResult.data;\r\n  } else {\r\n    throw new Error(`No response found for routeId \"${routeId}\"`);\r\n  }\r\n}\r\nfunction createDeferred2() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\nvar React8 = __toESM(require(\"react\"));\r\n\r\n// lib/dom/ssr/routes.tsx\r\nvar React7 = __toESM(require(\"react\"));\r\n\r\n// lib/dom/ssr/errorBoundaries.tsx\r\nvar React5 = __toESM(require(\"react\"));\r\nvar RemixErrorBoundary = class extends React5.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: props.error || null, location: props.location };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location) {\r\n      return { error: props.error || null, location: props.location };\r\n    }\r\n    return { error: props.error || state.error, location: state.location };\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return /* @__PURE__ */ React5.createElement(\r\n        RemixRootDefaultErrorBoundary,\r\n        {\r\n          error: this.state.error,\r\n          isOutsideRemixApp: true\r\n        }\r\n      );\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n};\r\nfunction RemixRootDefaultErrorBoundary({\r\n  error,\r\n  isOutsideRemixApp\r\n}) {\r\n  console.error(error);\r\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n        console.log(\r\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\r\n        );\r\n      `\r\n      }\r\n    }\r\n  );\r\n  if (isRouteErrorResponse(error)) {\r\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), heyDeveloper);\r\n  }\r\n  let errorInstance;\r\n  if (error instanceof Error) {\r\n    errorInstance = error;\r\n  } else {\r\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\r\n    errorInstance = new Error(errorString);\r\n  }\r\n  return /* @__PURE__ */ React5.createElement(\r\n    BoundaryShell,\r\n    {\r\n      title: \"Application Error!\",\r\n      isOutsideRemixApp\r\n    },\r\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\r\n    /* @__PURE__ */ React5.createElement(\r\n      \"pre\",\r\n      {\r\n        style: {\r\n          padding: \"2rem\",\r\n          background: \"hsla(10, 50%, 50%, 0.1)\",\r\n          color: \"red\",\r\n          overflow: \"auto\"\r\n        }\r\n      },\r\n      errorInstance.stack\r\n    ),\r\n    heyDeveloper\r\n  );\r\n}\r\nfunction BoundaryShell({\r\n  title,\r\n  renderScripts,\r\n  isOutsideRemixApp,\r\n  children\r\n}) {\r\n  let { routeModules } = useFrameworkContext();\r\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\r\n    return children;\r\n  }\r\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\r\n    \"meta\",\r\n    {\r\n      name: \"viewport\",\r\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\r\n    }\r\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\r\n}\r\n\r\n// lib/dom/ssr/fallback.tsx\r\nvar React6 = __toESM(require(\"react\"));\r\nfunction RemixRootDefaultHydrateFallback() {\r\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n              console.log(\r\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\r\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\r\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\r\n                \"for more information.\"\r\n              );\r\n            `\r\n      }\r\n    }\r\n  ));\r\n}\r\n\r\n// lib/dom/ssr/routes.tsx\r\nfunction groupRoutesByParentId(manifest) {\r\n  let routes = {};\r\n  Object.values(manifest).forEach((route) => {\r\n    if (route) {\r\n      let parentId = route.parentId || \"\";\r\n      if (!routes[parentId]) {\r\n        routes[parentId] = [];\r\n      }\r\n      routes[parentId].push(route);\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nfunction getRouteComponents(route, routeModule, isSpaMode) {\r\n  let Component4 = getRouteModuleComponent(routeModule);\r\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\r\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\r\n  if (route.id === \"root\" && routeModule.Layout) {\r\n    return {\r\n      ...Component4 ? {\r\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\r\n      } : { Component: Component4 },\r\n      ...ErrorBoundary ? {\r\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\r\n      } : { ErrorBoundary },\r\n      ...HydrateFallback ? {\r\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\r\n      } : { HydrateFallback }\r\n    };\r\n  }\r\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\r\n}\r\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\r\n  return createClientRoutes(\r\n    manifest,\r\n    routeModulesCache,\r\n    initialState,\r\n    ssr,\r\n    isSpaMode,\r\n    \"\",\r\n    groupRoutesByParentId(manifest),\r\n    needsRevalidation\r\n  );\r\n}\r\nfunction preventInvalidServerHandlerCall(type, route) {\r\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\r\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\r\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\r\n    console.error(msg);\r\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\r\n  }\r\n}\r\nfunction noActionDefinedError(type, routeId) {\r\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\r\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\r\n  console.error(msg);\r\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\r\n}\r\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let routeModule = routeModulesCache[route.id];\r\n    function fetchServerHandler(singleFetch) {\r\n      invariant2(\r\n        typeof singleFetch === \"function\",\r\n        \"No single fetch function available for route handler\"\r\n      );\r\n      return singleFetch();\r\n    }\r\n    function fetchServerLoader(singleFetch) {\r\n      if (!route.hasLoader) return Promise.resolve(null);\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function fetchServerAction(singleFetch) {\r\n      if (!route.hasAction) {\r\n        throw noActionDefinedError(\"action\", route.id);\r\n      }\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function prefetchModule(modulePath) {\r\n      import(\r\n        /* @vite-ignore */\r\n        /* webpackIgnore: true */\r\n        modulePath\r\n      );\r\n    }\r\n    function prefetchRouteModuleChunks(route2) {\r\n      if (route2.clientActionModule) {\r\n        prefetchModule(route2.clientActionModule);\r\n      }\r\n      if (route2.clientLoaderModule) {\r\n        prefetchModule(route2.clientLoaderModule);\r\n      }\r\n    }\r\n    async function prefetchStylesAndCallHandler(handler) {\r\n      let cachedModule = routeModulesCache[route.id];\r\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\r\n      try {\r\n        return handler();\r\n      } finally {\r\n        await linkPrefetchPromise;\r\n      }\r\n    }\r\n    let dataRoute = {\r\n      id: route.id,\r\n      index: route.index,\r\n      path: route.path\r\n    };\r\n    if (routeModule) {\r\n      Object.assign(dataRoute, {\r\n        ...dataRoute,\r\n        ...getRouteComponents(route, routeModule, isSpaMode),\r\n        unstable_middleware: routeModule.unstable_clientMiddleware,\r\n        handle: routeModule.handle,\r\n        shouldRevalidate: getShouldRevalidateFunction(\r\n          dataRoute.path,\r\n          routeModule,\r\n          route,\r\n          ssr,\r\n          needsRevalidation\r\n        )\r\n      });\r\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\r\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\r\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\r\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\r\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\r\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\r\n        try {\r\n          let result = await prefetchStylesAndCallHandler(async () => {\r\n            invariant2(\r\n              routeModule,\r\n              \"No `routeModule` available for critical-route loader\"\r\n            );\r\n            if (!routeModule.clientLoader) {\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n            return routeModule.clientLoader({\r\n              request,\r\n              params,\r\n              context,\r\n              async serverLoader() {\r\n                preventInvalidServerHandlerCall(\"loader\", route);\r\n                if (isHydrationRequest) {\r\n                  if (hasInitialData) {\r\n                    return initialData;\r\n                  }\r\n                  if (hasInitialError) {\r\n                    throw initialError;\r\n                  }\r\n                }\r\n                return fetchServerLoader(singleFetch);\r\n              }\r\n            });\r\n          });\r\n          return result;\r\n        } finally {\r\n          isHydrationRequest = false;\r\n        }\r\n      };\r\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\r\n        route,\r\n        routeModule,\r\n        isSpaMode\r\n      );\r\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\r\n        return prefetchStylesAndCallHandler(async () => {\r\n          invariant2(\r\n            routeModule,\r\n            \"No `routeModule` available for critical-route action\"\r\n          );\r\n          if (!routeModule.clientAction) {\r\n            if (isSpaMode) {\r\n              throw noActionDefinedError(\"clientAction\", route.id);\r\n            }\r\n            return fetchServerAction(singleFetch);\r\n          }\r\n          return routeModule.clientAction({\r\n            request,\r\n            params,\r\n            context,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        });\r\n      };\r\n    } else {\r\n      if (!route.hasClientLoader) {\r\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          return fetchServerLoader(singleFetch);\r\n        });\r\n      }\r\n      if (!route.hasClientAction) {\r\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          if (isSpaMode) {\r\n            throw noActionDefinedError(\"clientAction\", route.id);\r\n          }\r\n          return fetchServerAction(singleFetch);\r\n        });\r\n      }\r\n      let lazyRoutePromise;\r\n      async function getLazyRoute() {\r\n        if (lazyRoutePromise) {\r\n          return await lazyRoutePromise;\r\n        }\r\n        lazyRoutePromise = (async () => {\r\n          if (route.clientLoaderModule || route.clientActionModule) {\r\n            await new Promise((resolve) => setTimeout(resolve, 0));\r\n          }\r\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\r\n            route,\r\n            routeModulesCache\r\n          );\r\n          prefetchRouteModuleChunks(route);\r\n          return await routeModulePromise;\r\n        })();\r\n        return await lazyRoutePromise;\r\n      }\r\n      dataRoute.lazy = {\r\n        loader: route.hasClientLoader ? async () => {\r\n          let { clientLoader } = route.clientLoaderModule ? await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientLoaderModule\r\n          ) : await getLazyRoute();\r\n          invariant2(clientLoader, \"No `clientLoader` export found\");\r\n          return (args, singleFetch) => clientLoader({\r\n            ...args,\r\n            async serverLoader() {\r\n              preventInvalidServerHandlerCall(\"loader\", route);\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n          });\r\n        } : void 0,\r\n        action: route.hasClientAction ? async () => {\r\n          let clientActionPromise = route.clientActionModule ? import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientActionModule\r\n          ) : getLazyRoute();\r\n          prefetchRouteModuleChunks(route);\r\n          let { clientAction } = await clientActionPromise;\r\n          invariant2(clientAction, \"No `clientAction` export found\");\r\n          return (args, singleFetch) => clientAction({\r\n            ...args,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        } : void 0,\r\n        unstable_middleware: route.hasClientMiddleware ? async () => {\r\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientMiddlewareModule\r\n          ) : await getLazyRoute();\r\n          invariant2(\r\n            unstable_clientMiddleware,\r\n            \"No `unstable_clientMiddleware` export found\"\r\n          );\r\n          return unstable_clientMiddleware;\r\n        } : void 0,\r\n        shouldRevalidate: async () => {\r\n          let lazyRoute = await getLazyRoute();\r\n          return getShouldRevalidateFunction(\r\n            dataRoute.path,\r\n            lazyRoute,\r\n            route,\r\n            ssr,\r\n            needsRevalidation\r\n          );\r\n        },\r\n        handle: async () => (await getLazyRoute()).handle,\r\n        // No need to wrap these in layout since the root route is never\r\n        // loaded via route.lazy()\r\n        Component: async () => (await getLazyRoute()).Component,\r\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\r\n      };\r\n    }\r\n    let children = createClientRoutes(\r\n      manifest,\r\n      routeModulesCache,\r\n      initialState,\r\n      ssr,\r\n      isSpaMode,\r\n      route.id,\r\n      routesByParentId,\r\n      needsRevalidation\r\n    );\r\n    if (children.length > 0) dataRoute.children = children;\r\n    return dataRoute;\r\n  });\r\n}\r\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\r\n  if (needsRevalidation) {\r\n    return wrapShouldRevalidateForHdr(\r\n      manifestRoute.id,\r\n      route.shouldRevalidate,\r\n      needsRevalidation\r\n    );\r\n  }\r\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\r\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\r\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\r\n    if (route.shouldRevalidate) {\r\n      let fn = route.shouldRevalidate;\r\n      return (opts) => fn({\r\n        ...opts,\r\n        defaultShouldRevalidate: didParamsChange(opts)\r\n      });\r\n    } else {\r\n      return (opts) => didParamsChange(opts);\r\n    }\r\n  }\r\n  if (ssr && route.shouldRevalidate) {\r\n    let fn = route.shouldRevalidate;\r\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\r\n  }\r\n  return route.shouldRevalidate;\r\n}\r\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\r\n  let handledRevalidation = false;\r\n  return (arg) => {\r\n    if (!handledRevalidation) {\r\n      handledRevalidation = true;\r\n      return needsRevalidation.has(routeId);\r\n    }\r\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\r\n  };\r\n}\r\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\r\n  let routeModulePromise = loadRouteModule(route, routeModules);\r\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\r\n  let routeModule = await routeModulePromise;\r\n  await Promise.all([\r\n    prefetchRouteCssPromise,\r\n    prefetchStyleLinks(route, routeModule)\r\n  ]);\r\n  return {\r\n    Component: getRouteModuleComponent(routeModule),\r\n    ErrorBoundary: routeModule.ErrorBoundary,\r\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\r\n    clientAction: routeModule.clientAction,\r\n    clientLoader: routeModule.clientLoader,\r\n    handle: routeModule.handle,\r\n    links: routeModule.links,\r\n    meta: routeModule.meta,\r\n    shouldRevalidate: routeModule.shouldRevalidate\r\n  };\r\n}\r\nfunction getRouteModuleComponent(routeModule) {\r\n  if (routeModule.default == null) return void 0;\r\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\r\n  if (!isEmptyObject) {\r\n    return routeModule.default;\r\n  }\r\n}\r\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\r\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\nvar nextPaths = /* @__PURE__ */ new Set();\r\nvar discoveredPathsMaxSize = 1e3;\r\nvar discoveredPaths = /* @__PURE__ */ new Set();\r\nvar URL_LIMIT = 7680;\r\nfunction isFogOfWarEnabled(ssr) {\r\n  return ssr === true;\r\n}\r\nfunction getPartialManifest({ sri, ...manifest }, router2) {\r\n  let routeIds = new Set(router2.state.matches.map((m) => m.route.id));\r\n  let segments = router2.state.location.pathname.split(\"/\").filter(Boolean);\r\n  let paths = [\"/\"];\r\n  segments.pop();\r\n  while (segments.length > 0) {\r\n    paths.push(`/${segments.join(\"/\")}`);\r\n    segments.pop();\r\n  }\r\n  paths.forEach((path) => {\r\n    let matches = matchRoutes(router2.routes, path, router2.basename);\r\n    if (matches) {\r\n      matches.forEach((m) => routeIds.add(m.route.id));\r\n    }\r\n  });\r\n  let initialRoutes = [...routeIds].reduce(\r\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\r\n    {}\r\n  );\r\n  return {\r\n    ...manifest,\r\n    routes: initialRoutes,\r\n    sri: sri ? true : void 0\r\n  };\r\n}\r\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\r\n  if (!isFogOfWarEnabled(ssr)) {\r\n    return void 0;\r\n  }\r\n  return async ({ path, patch, signal, fetcherKey }) => {\r\n    if (discoveredPaths.has(path)) {\r\n      return;\r\n    }\r\n    await fetchAndApplyManifestPatches(\r\n      [path],\r\n      fetcherKey ? window.location.href : path,\r\n      manifest,\r\n      routeModules,\r\n      ssr,\r\n      isSpaMode,\r\n      basename,\r\n      patch,\r\n      signal\r\n    );\r\n  };\r\n}\r\nfunction useFogOFWarDiscovery(router2, manifest, routeModules, ssr, isSpaMode) {\r\n  React8.useEffect(() => {\r\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\r\n      return;\r\n    }\r\n    function registerElement(el) {\r\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\r\n      if (!path) {\r\n        return;\r\n      }\r\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\r\n      if (!discoveredPaths.has(pathname)) {\r\n        nextPaths.add(pathname);\r\n      }\r\n    }\r\n    async function fetchPatches() {\r\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\r\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\r\n        if (discoveredPaths.has(path)) {\r\n          nextPaths.delete(path);\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      if (lazyPaths.length === 0) {\r\n        return;\r\n      }\r\n      try {\r\n        await fetchAndApplyManifestPatches(\r\n          lazyPaths,\r\n          null,\r\n          manifest,\r\n          routeModules,\r\n          ssr,\r\n          isSpaMode,\r\n          router2.basename,\r\n          router2.patchRoutes\r\n        );\r\n      } catch (e) {\r\n        console.error(\"Failed to fetch manifest patches\", e);\r\n      }\r\n    }\r\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\r\n    fetchPatches();\r\n    let observer = new MutationObserver(() => debouncedFetchPatches());\r\n    observer.observe(document.documentElement, {\r\n      subtree: true,\r\n      childList: true,\r\n      attributes: true,\r\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\r\n    });\r\n    return () => observer.disconnect();\r\n  }, [ssr, isSpaMode, manifest, routeModules, router2]);\r\n}\r\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\r\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\r\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(\r\n    /\\/+/g,\r\n    \"/\"\r\n  );\r\n  let url = new URL(manifestPath, window.location.origin);\r\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\r\n  url.searchParams.set(\"version\", manifest.version);\r\n  if (url.toString().length > URL_LIMIT) {\r\n    nextPaths.clear();\r\n    return;\r\n  }\r\n  let serverPatches;\r\n  try {\r\n    let res = await fetch(url, { signal });\r\n    if (!res.ok) {\r\n      throw new Error(`${res.status} ${res.statusText}`);\r\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\r\n      if (!errorReloadPath) {\r\n        console.warn(\r\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\r\n        );\r\n        return;\r\n      }\r\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\r\n        console.error(\r\n          \"Unable to discover routes due to manifest version mismatch.\"\r\n        );\r\n        return;\r\n      }\r\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\r\n      window.location.href = errorReloadPath;\r\n      throw new Error(\"Detected manifest version mismatch, reloading...\");\r\n    } else if (res.status >= 400) {\r\n      throw new Error(await res.text());\r\n    }\r\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\r\n    serverPatches = await res.json();\r\n  } catch (e) {\r\n    if (signal?.aborted) return;\r\n    throw e;\r\n  }\r\n  let knownRoutes = new Set(Object.keys(manifest.routes));\r\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\r\n    if (route && !knownRoutes.has(route.id)) {\r\n      acc[route.id] = route;\r\n    }\r\n    return acc;\r\n  }, {});\r\n  Object.assign(manifest.routes, patches);\r\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\r\n  let parentIds = /* @__PURE__ */ new Set();\r\n  Object.values(patches).forEach((patch) => {\r\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\r\n      parentIds.add(patch.parentId);\r\n    }\r\n  });\r\n  parentIds.forEach(\r\n    (parentId) => patchRoutes(\r\n      parentId || null,\r\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\r\n    )\r\n  );\r\n}\r\nfunction addToFifoQueue(path, queue) {\r\n  if (queue.size >= discoveredPathsMaxSize) {\r\n    let first = queue.values().next().value;\r\n    queue.delete(first);\r\n  }\r\n  queue.add(path);\r\n}\r\nfunction debounce(callback, wait) {\r\n  let timeoutId;\r\n  return (...args) => {\r\n    window.clearTimeout(timeoutId);\r\n    timeoutId = window.setTimeout(() => callback(...args), wait);\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\nfunction useDataRouterContext() {\r\n  let context = React9.useContext(DataRouterContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction useDataRouterStateContext() {\r\n  let context = React9.useContext(DataRouterStateContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nvar FrameworkContext = React9.createContext(void 0);\r\nFrameworkContext.displayName = \"FrameworkContext\";\r\nfunction useFrameworkContext() {\r\n  let context = React9.useContext(FrameworkContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <HydratedRouter> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction getActiveMatches(matches, errors, isSpaMode) {\r\n  if (isSpaMode && !isHydrated) {\r\n    return [matches[0]];\r\n  }\r\n  if (errors) {\r\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\r\n    return matches.slice(0, errorIdx + 1);\r\n  }\r\n  return matches;\r\n}\r\nvar isHydrated = false;\r\nfunction Scripts(props) {\r\n  let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();\r\n  let { router: router2, static: isStatic, staticContext } = useDataRouterContext();\r\n  let { matches: routerMatches } = useDataRouterStateContext();\r\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\r\n  if (renderMeta) {\r\n    renderMeta.didRenderScripts = true;\r\n  }\r\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\r\n  React9.useEffect(() => {\r\n    isHydrated = true;\r\n  }, []);\r\n  let initialScripts = React9.useMemo(() => {\r\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\r\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\r\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\r\n${matches.map((match, routeIndex) => {\r\n      let routeVarName = `route${routeIndex}`;\r\n      let manifestEntry = manifest.routes[match.route.id];\r\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\r\n      let {\r\n        clientActionModule,\r\n        clientLoaderModule,\r\n        clientMiddlewareModule,\r\n        hydrateFallbackModule,\r\n        module: module2\r\n      } = manifestEntry;\r\n      let chunks = [\r\n        ...clientActionModule ? [\r\n          {\r\n            module: clientActionModule,\r\n            varName: `${routeVarName}_clientAction`\r\n          }\r\n        ] : [],\r\n        ...clientLoaderModule ? [\r\n          {\r\n            module: clientLoaderModule,\r\n            varName: `${routeVarName}_clientLoader`\r\n          }\r\n        ] : [],\r\n        ...clientMiddlewareModule ? [\r\n          {\r\n            module: clientMiddlewareModule,\r\n            varName: `${routeVarName}_clientMiddleware`\r\n          }\r\n        ] : [],\r\n        ...hydrateFallbackModule ? [\r\n          {\r\n            module: hydrateFallbackModule,\r\n            varName: `${routeVarName}_HydrateFallback`\r\n          }\r\n        ] : [],\r\n        { module: module2, varName: `${routeVarName}_main` }\r\n      ];\r\n      if (chunks.length === 1) {\r\n        return `import * as ${routeVarName} from ${JSON.stringify(module2)};`;\r\n      }\r\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\r\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\r\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\r\n    }).join(\"\\n\")}\r\n  ${enableFogOfWar ? (\r\n      // Inline a minimal manifest with the SSR matches\r\n      `window.__reactRouterManifest = ${JSON.stringify(\r\n        getPartialManifest(manifest, router2),\r\n        null,\r\n        2\r\n      )};`\r\n    ) : \"\"}\r\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\r\n\r\nimport(${JSON.stringify(manifest.entry.module)});`;\r\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(contextScript),\r\n        type: void 0\r\n      }\r\n    ), /* @__PURE__ */ React9.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\r\n        type: \"module\",\r\n        async: true\r\n      }\r\n    ));\r\n  }, []);\r\n  let preloads = isHydrated ? [] : dedupe(\r\n    manifest.entry.imports.concat(\r\n      getModuleLinkHrefs(matches, manifest, {\r\n        includeHydrateFallback: true\r\n      })\r\n    )\r\n  );\r\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\r\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React9.createElement(\r\n    \"script\",\r\n    {\r\n      \"rr-importmap\": \"\",\r\n      type: \"importmap\",\r\n      suppressHydrationWarning: true,\r\n      dangerouslySetInnerHTML: {\r\n        __html: JSON.stringify({\r\n          integrity: sri\r\n        })\r\n      }\r\n    }\r\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.url,\r\n      crossOrigin: props.crossOrigin,\r\n      integrity: sri[manifest.url],\r\n      suppressHydrationWarning: true\r\n    }\r\n  ) : null, /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.entry.module,\r\n      crossOrigin: props.crossOrigin,\r\n      integrity: sri[manifest.entry.module],\r\n      suppressHydrationWarning: true\r\n    }\r\n  ), preloads.map((path) => /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      key: path,\r\n      rel: \"modulepreload\",\r\n      href: path,\r\n      crossOrigin: props.crossOrigin,\r\n      integrity: sri[path],\r\n      suppressHydrationWarning: true\r\n    }\r\n  )), initialScripts);\r\n}\r\nfunction dedupe(array) {\r\n  return [...new Set(array)];\r\n}\r\n\r\n// lib/dom/ssr/errors.ts\r\nfunction deserializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new ErrorResponseImpl(\r\n        val.status,\r\n        val.statusText,\r\n        val.data,\r\n        val.internal === true\r\n      );\r\n    } else if (val && val.__type === \"Error\") {\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            let error = new ErrorConstructor(val.message);\r\n            error.stack = val.stack;\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        error.stack = val.stack;\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\n\r\n// lib/dom-export/dom-router-provider.tsx\r\nfunction RouterProvider2(props) {\r\n  return /* @__PURE__ */ React10.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\r\n}\r\n\r\n// lib/dom-export/hydrated-router.tsx\r\nvar React11 = __toESM(require(\"react\"));\r\nvar ssrInfo = null;\r\nvar router = null;\r\nfunction initSsrInfo() {\r\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\r\n    if (window.__reactRouterManifest.sri === true) {\r\n      const importMap = document.querySelector(\"script[rr-importmap]\");\r\n      if (importMap?.textContent) {\r\n        try {\r\n          window.__reactRouterManifest.sri = JSON.parse(\r\n            importMap.textContent\r\n          ).integrity;\r\n        } catch (err) {\r\n          console.error(\"Failed to parse import map\", err);\r\n        }\r\n      }\r\n    }\r\n    ssrInfo = {\r\n      context: window.__reactRouterContext,\r\n      manifest: window.__reactRouterManifest,\r\n      routeModules: window.__reactRouterRouteModules,\r\n      stateDecodingPromise: void 0,\r\n      router: void 0,\r\n      routerInitialized: false\r\n    };\r\n  }\r\n}\r\nfunction createHydratedRouter({\r\n  unstable_getContext\r\n}) {\r\n  initSsrInfo();\r\n  if (!ssrInfo) {\r\n    throw new Error(\r\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\r\n    );\r\n  }\r\n  let localSsrInfo = ssrInfo;\r\n  if (!ssrInfo.stateDecodingPromise) {\r\n    let stream = ssrInfo.context.stream;\r\n    invariant(stream, \"No stream found for single fetch decoding\");\r\n    ssrInfo.context.stream = void 0;\r\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\r\n      ssrInfo.context.state = value.value;\r\n      localSsrInfo.stateDecodingPromise.value = true;\r\n    }).catch((e) => {\r\n      localSsrInfo.stateDecodingPromise.error = e;\r\n    });\r\n  }\r\n  if (ssrInfo.stateDecodingPromise.error) {\r\n    throw ssrInfo.stateDecodingPromise.error;\r\n  }\r\n  if (!ssrInfo.stateDecodingPromise.value) {\r\n    throw ssrInfo.stateDecodingPromise;\r\n  }\r\n  let routes = createClientRoutes(\r\n    ssrInfo.manifest.routes,\r\n    ssrInfo.routeModules,\r\n    ssrInfo.context.state,\r\n    ssrInfo.context.ssr,\r\n    ssrInfo.context.isSpaMode\r\n  );\r\n  let hydrationData = void 0;\r\n  let loaderData = ssrInfo.context.state.loaderData;\r\n  if (ssrInfo.context.isSpaMode) {\r\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\r\n      hydrationData = {\r\n        loaderData: {\r\n          root: loaderData.root\r\n        }\r\n      };\r\n    }\r\n  } else {\r\n    hydrationData = {\r\n      ...ssrInfo.context.state,\r\n      loaderData: { ...loaderData }\r\n    };\r\n    let initialMatches = matchRoutes(\r\n      routes,\r\n      window.location,\r\n      window.__reactRouterContext?.basename\r\n    );\r\n    if (initialMatches) {\r\n      for (let match of initialMatches) {\r\n        let routeId = match.route.id;\r\n        let route = ssrInfo.routeModules[routeId];\r\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\r\n        if (route && manifestRoute && shouldHydrateRouteLoader(\r\n          manifestRoute,\r\n          route,\r\n          ssrInfo.context.isSpaMode\r\n        ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\r\n          delete hydrationData.loaderData[routeId];\r\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\r\n          hydrationData.loaderData[routeId] = null;\r\n        }\r\n      }\r\n    }\r\n    if (hydrationData && hydrationData.errors) {\r\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\r\n    }\r\n  }\r\n  let router2 = createRouter({\r\n    routes,\r\n    history: createBrowserHistory(),\r\n    basename: ssrInfo.context.basename,\r\n    unstable_getContext,\r\n    hydrationData,\r\n    hydrationRouteProperties,\r\n    mapRouteProperties,\r\n    future: {\r\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\r\n    },\r\n    dataStrategy: getSingleFetchDataStrategy(\r\n      () => router2,\r\n      (routeId) => {\r\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\r\n        invariant(manifestRoute, \"Route not found in manifest/routeModules\");\r\n        let routeModule = ssrInfo.routeModules[routeId];\r\n        return {\r\n          hasLoader: manifestRoute.hasLoader,\r\n          hasClientLoader: manifestRoute.hasClientLoader,\r\n          // In some cases the module may not be loaded yet and we don't care\r\n          // if it's got shouldRevalidate or not\r\n          hasShouldRevalidate: routeModule ? routeModule.shouldRevalidate != null : void 0\r\n        };\r\n      },\r\n      ssrInfo.context.ssr,\r\n      ssrInfo.context.basename\r\n    ),\r\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\r\n      ssrInfo.manifest,\r\n      ssrInfo.routeModules,\r\n      ssrInfo.context.ssr,\r\n      ssrInfo.context.isSpaMode,\r\n      ssrInfo.context.basename\r\n    )\r\n  });\r\n  ssrInfo.router = router2;\r\n  if (router2.state.initialized) {\r\n    ssrInfo.routerInitialized = true;\r\n    router2.initialize();\r\n  }\r\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\r\n  createClientRoutesWithHMRRevalidationOptOut;\r\n  window.__reactRouterDataRouter = router2;\r\n  return router2;\r\n}\r\nfunction HydratedRouter(props) {\r\n  if (!router) {\r\n    router = createHydratedRouter({\r\n      unstable_getContext: props.unstable_getContext\r\n    });\r\n  }\r\n  let [criticalCss, setCriticalCss] = React11.useState(\r\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\r\n  );\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    if (ssrInfo) {\r\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\r\n    }\r\n  }\r\n  let [location, setLocation] = React11.useState(router.state.location);\r\n  React11.useLayoutEffect(() => {\r\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\r\n      ssrInfo.routerInitialized = true;\r\n      ssrInfo.router.initialize();\r\n    }\r\n  }, []);\r\n  React11.useLayoutEffect(() => {\r\n    if (ssrInfo && ssrInfo.router) {\r\n      return ssrInfo.router.subscribe((newState) => {\r\n        if (newState.location !== location) {\r\n          setLocation(newState.location);\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\r\n  useFogOFWarDiscovery(\r\n    router,\r\n    ssrInfo.manifest,\r\n    ssrInfo.routeModules,\r\n    ssrInfo.context.ssr,\r\n    ssrInfo.context.isSpaMode\r\n  );\r\n  return (\r\n    // This fragment is important to ensure we match the <ServerRouter> JSX\r\n    // structure so that useId values hydrate correctly\r\n    /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(\r\n      FrameworkContext.Provider,\r\n      {\r\n        value: {\r\n          manifest: ssrInfo.manifest,\r\n          routeModules: ssrInfo.routeModules,\r\n          future: ssrInfo.context.future,\r\n          criticalCss,\r\n          ssr: ssrInfo.context.ssr,\r\n          isSpaMode: ssrInfo.context.isSpaMode\r\n        }\r\n      },\r\n      /* @__PURE__ */ React11.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React11.createElement(RouterProvider2, { router }))\r\n    ), /* @__PURE__ */ React11.createElement(React11.Fragment, null))\r\n  );\r\n}\r\n// Annotate the CommonJS export names for ESM import in node:\r\n0 && (module.exports = {\r\n  HydratedRouter,\r\n  RouterProvider\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}