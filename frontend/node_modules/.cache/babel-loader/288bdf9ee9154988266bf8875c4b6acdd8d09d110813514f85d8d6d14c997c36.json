{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITSS_Project\\\\frontend\\\\src\\\\components\\\\task\\\\KanbanView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./KanbanView.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchTasks, updateChecklistItem, fetchProjects, fetchSprints, fetchTeamDetails } from \"../../services/api-client\";\nimport CreateTask from \"./CreateTask\";\nimport TaskCommentPage from \"./TaskCommentPage\";\nimport TeamHeader from \"../TeamHeader/TeamHeader\";\nimport { filterTasksByUser } from \"./UserFilter\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const KanbanView = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [reportData, setReportData] = useState([]);\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const [showCreateTask, setShowCreateTask] = useState(false);\n  const [showCommentPage, setShowCommentPage] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [sprints, setSprints] = useState([]);\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"Team task\");\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [teamDetails, setTeamDetails] = useState({\n    className: \"\",\n    classCode: \"\",\n    teamName: \"\",\n    projectName: \"\",\n    members: [],\n    isTeamLead: false\n  });\n  const currentUserId = 1;\n  const projectId = 1;\n  const loadTeamDetails = useCallback(async () => {\n    try {\n      const data = await fetchTeamDetails(projectId, currentUserId);\n      console.log(\"Fetched team details:\", data);\n\n      // Map members to include avatar paths\n      const membersWithAvatars = data.members.map(member => {\n        const avatarPath = `/assets/images/avatars/${member.username.toLowerCase()}.jpg`;\n        console.log(`Avatar path for user ${member.username}: ${avatarPath}`);\n        return {\n          user_id: member.user_id,\n          username: member.username,\n          avatar: avatarPath\n        };\n      });\n      setTeamDetails({\n        className: data.className || \"Unknown Class\",\n        classCode: data.classCode || \"Unknown Code\",\n        teamName: data.teamName || \"Unknown Team\",\n        projectName: data.projectName || \"Unknown Project\",\n        members: membersWithAvatars,\n        isTeamLead: data.isTeamLead || false\n      });\n    } catch (error) {\n      console.error(\"Error fetching team details:\", error);\n      setTeamDetails({\n        className: \"Error Loading Class\",\n        classCode: \"ERROR\",\n        teamName: \"Error Loading Team\",\n        projectName: \"Error Loading Project\",\n        members: [],\n        isTeamLead: false\n      });\n    }\n  }, [projectId, currentUserId]);\n  const loadProjectsAndSprints = useCallback(async () => {\n    try {\n      const projectData = await fetchProjects();\n      console.log(\"Fetched projects:\", projectData);\n      setProjects(projectData);\n      const sprintData = await fetchSprints();\n      console.log(\"Fetched sprints:\", sprintData);\n      const filteredSprints = sprintData.filter(sprint => sprint.project_id === projectId);\n      console.log(\"Filtered sprints for project_id =\", projectId, \":\", filteredSprints);\n      setSprints(filteredSprints);\n      if (filteredSprints.length > 0) {\n        setSelectedSprintId(filteredSprints[0].sprint_id);\n      } else {\n        setSelectedSprintId(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching projects and sprints:\", error);\n    }\n  }, [projectId]);\n  const loadTasks = useCallback(async () => {\n    try {\n      const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\n      const data = await fetchTasks(mode);\n      console.log(`Fetched tasks (mode=${mode}):`, data);\n      const currentDate = new Date('2025-05-21');\n      const mappedTasks = data.filter(task => {\n        console.log(\"Filtering task with sprint_id:\", task.sprint_id, \"against selectedSprintId:\", selectedSprintId);\n        if (!selectedSprintId) return true;\n        return task.sprint_id === selectedSprintId;\n      }).map(task => {\n        const assignedMember = teamDetails.members.find(member => member.user_id === task.assigned_to);\n        const avatarPath = `/assets/images/avatars/${(assignedMember === null || assignedMember === void 0 ? void 0 : assignedMember.username.toLowerCase()) || \"placeholder-member\"}.jpg`;\n        console.log(`Task ID ${task.task_id} assigned to ${task.assigned_to}, Avatar path: ${avatarPath}`);\n        return {\n          id: task.task_id,\n          title: task.title,\n          date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\n          time: task.due_date ? new Date(task.due_date).toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          }) : \"\",\n          tags: [\"SQL\", \"Backend\"],\n          avatar: avatarPath,\n          comments: task.comment_count || 0,\n          subTasks: task.checklists && task.checklists.length > 0 ? task.checklists.map(checklist => ({\n            id: checklist.checklist_id,\n            text: checklist.item_description,\n            completed: checklist.is_completed\n          })) : [],\n          status: task.status.toLowerCase().replace(\"to-do\", \"to-do\").replace(\"in-progress\", \"in-progress\").replace(\"completed\", \"done\"),\n          overdue: task.due_date && new Date(task.due_date) < currentDate && task.status !== \"Completed\",\n          progress_percentage: task.progress_percentage || 0,\n          assigned_to: task.assigned_to,\n          sprint_id: task.sprint_id,\n          due_date: task.due_date ? new Date(task.due_date) : null\n        };\n      }).sort((a, b) => {\n        if (a.status === \"done\" && b.status !== \"done\") return 1;\n        if (b.status === \"done\" && a.status !== \"done\") return -1;\n        if (a.status === \"done\" && b.status === \"done\") {\n          if (!a.due_date && !b.due_date) return 0;\n          if (!a.due_date) return 1;\n          if (!b.due_date) return -1;\n          return a.due_date - b.due_date;\n        }\n        if (!a.due_date && !b.due_date) return 0;\n        if (!a.due_date) return 1;\n        if (!b.due_date) return -1;\n        return a.due_date - b.due_date;\n      });\n      console.log(\"Mapped and sorted tasks:\", mappedTasks);\n      setTasks(mappedTasks);\n      const filtered = filterTasksByUser(mappedTasks, selectedUserId);\n      setFilteredTasks(filtered);\n      updateReportData(filtered);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  }, [activeTab, selectedSprintId, selectedUserId, teamDetails.members]);\n  useEffect(() => {\n    loadTeamDetails();\n  }, [loadTeamDetails]);\n  useEffect(() => {\n    loadProjectsAndSprints();\n  }, [loadProjectsAndSprints]);\n  useEffect(() => {\n    if (teamDetails.members.length > 0) {\n      loadTasks();\n    }\n  }, [loadTasks, teamDetails.members]);\n  const updateReportData = updatedTasks => {\n    const counts = {\n      \"to-do\": 0,\n      \"in-progress\": 0,\n      \"done\": 0\n    };\n    updatedTasks.forEach(task => {\n      counts[task.status]++;\n    });\n    setReportData([{\n      id: 1,\n      name: \"To-Do\",\n      status: \"to-do\",\n      count: counts[\"to-do\"]\n    }, {\n      id: 2,\n      name: \"In-progress\",\n      status: \"in-progress\",\n      count: counts[\"in-progress\"]\n    }, {\n      id: 3,\n      name: \"Done\",\n      status: \"done\",\n      count: counts[\"done\"]\n    }]);\n  };\n  const getStatusClass = (status, overdue) => {\n    if (status === \"done\") return \"report-status-completed\";\n    if (overdue) return \"report-status-overdue\";\n    switch (status) {\n      case \"to-do\":\n        return \"report-status-to-do\";\n      case \"in-progress\":\n        return \"report-status-in-progress\";\n      default:\n        return \"\";\n    }\n  };\n  const getCircleClass = status => {\n    switch (status) {\n      case \"to-do\":\n        return \"circle-to-do\";\n      case \"in-progress\":\n        return \"circle-in-progress\";\n      case \"done\":\n        return \"circle-completed\";\n      default:\n        return \"\";\n    }\n  };\n  const toggleSubTask = async (taskId, subTaskId) => {\n    try {\n      const currentTask = tasks.find(task => task.id === taskId);\n      const currentSubTask = currentTask.subTasks.find(sub => sub.id === subTaskId);\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\n      await loadTasks();\n    } catch (error) {\n      console.error(\"Error updating subtask:\", error);\n    }\n  };\n  const handleTaskCreated = () => {\n    loadTasks();\n    setShowCreateTask(false);\n  };\n  const handleCancel = () => {\n    setShowCreateTask(false);\n  };\n  const openCommentPage = taskId => {\n    setShowCommentPage(taskId);\n  };\n  const closeCommentPage = () => {\n    setShowCommentPage(null);\n    loadTasks();\n  };\n  const handleSprintChange = async sprintId => {\n    console.log(\"Selected sprint ID in KanbanView:\", sprintId);\n    setSelectedSprintId(sprintId);\n    await loadTasks();\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  const handleUserChange = userId => {\n    setSelectedUserId(userId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(TeamHeader, {\n      className: teamDetails.className,\n      classCode: teamDetails.classCode,\n      teamName: teamDetails.teamName,\n      projectName: teamDetails.projectName,\n      members: teamDetails.members,\n      activeTab: activeTab,\n      sprints: sprints,\n      selectedSprintId: selectedSprintId,\n      onSprintChange: handleSprintChange,\n      onTabChange: handleTabChange,\n      onUserChange: handleUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-grid\",\n      children: [sprints.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No sprints available for this project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), reportData.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"h3\",\n            children: [group.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count-text\",\n              children: [\"(\", group.count.toString().padStart(2, \"0\"), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-circle ${getCircleClass(group.status)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), filteredTasks.filter(task => task.status === group.status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `report-card ${getStatusClass(task.status, task.overdue)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"body_1\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: [task.status === \"done\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-label\",\n                  children: \"Completed \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 27\n                }, this), task.date, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-time-space\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 25\n                }, this), (task.status === \"to-do\" || task.status === \"in-progress\") && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-with-clock\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faClock,\n                    className: \"clock-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 31\n                  }, this), task.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 29\n                }, this), task.status === \"done\" && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: task.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress-text\",\n                  children: [\" \", \" - Progress: \", task.progress_percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-tags\",\n            children: task.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `tag ${tag.toLowerCase()}`,\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: task.avatar,\n              alt: \"avatar\",\n              className: \"task-avatar\",\n              onError: () => console.log(`Failed to load avatar for task ${task.id}: ${task.avatar}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions body_2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => setOpenTaskId(openTaskId === task.id ? null : task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.subTasks.length, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faClipboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => openCommentPage(task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.comments, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 19\n          }, this), openTaskId === task.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divider active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-subtasks active\",\n              children: task.subTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-subtask-message\",\n                children: \"No subtask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 27\n              }, this) : task.subTasks.map((subTask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subtask\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-count\",\n                    children: [index + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-text\",\n                    children: subTask.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `subtask-status ${subTask.completed ? \"completed\" : \"\"}`,\n                    onClick: e => {\n                      e.stopPropagation();\n                      if (task.assigned_to === currentUserId && teamDetails.isTeamLead) {\n                        toggleSubTask(task.id, subTask.id);\n                      }\n                    },\n                    style: {\n                      cursor: task.assigned_to === currentUserId && teamDetails.isTeamLead ? \"pointer\" : \"not-allowed\",\n                      opacity: task.assigned_to === currentUserId && teamDetails.isTeamLead ? 1 : 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: subTask.completed ? fasCheckCircle : farCircle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 31\n                }, this), index !== task.subTasks.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"divider active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 33\n                }, this)]\n              }, subTask.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this)), group.status === \"to-do\" && teamDetails.isTeamLead && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateTask(!showCreateTask),\n            className: \"add-task-btn\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this), \" Add Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 15\n        }, this)]\n      }, group.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)), showCreateTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(CreateTask, {\n            onTaskCreated: handleTaskCreated,\n            onCancel: handleCancel,\n            selectedSprintId: selectedSprintId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), showCommentPage && /*#__PURE__*/_jsxDEV(TaskCommentPage, {\n        taskId: showCommentPage,\n        onClose: closeCommentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanView, \"0f3uTNT/W0fRFdLGeGeIqkLT+yU=\");\n_c = KanbanView;\nexport default KanbanView;\nvar _c;\n$RefreshReg$(_c, \"KanbanView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FontAwesomeIcon","faCheckCircle","fasCheckCircle","faCircle","farCircle","faClipboard","faComment","faClock","faPlus","fetchTasks","updateChecklistItem","fetchProjects","fetchSprints","fetchTeamDetails","CreateTask","TaskCommentPage","TeamHeader","filterTasksByUser","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanView","_s","tasks","setTasks","filteredTasks","setFilteredTasks","reportData","setReportData","openTaskId","setOpenTaskId","showCreateTask","setShowCreateTask","showCommentPage","setShowCommentPage","projects","setProjects","sprints","setSprints","selectedSprintId","setSelectedSprintId","activeTab","setActiveTab","selectedUserId","setSelectedUserId","teamDetails","setTeamDetails","className","classCode","teamName","projectName","members","isTeamLead","currentUserId","projectId","loadTeamDetails","data","console","log","membersWithAvatars","map","member","avatarPath","username","toLowerCase","user_id","avatar","error","loadProjectsAndSprints","projectData","sprintData","filteredSprints","filter","sprint","project_id","length","sprint_id","loadTasks","mode","currentDate","Date","mappedTasks","task","assignedMember","find","assigned_to","task_id","id","title","date","due_date","toLocaleDateString","time","toLocaleTimeString","hour","minute","tags","comments","comment_count","subTasks","checklists","checklist","checklist_id","text","item_description","completed","is_completed","status","replace","overdue","progress_percentage","sort","a","b","filtered","updateReportData","updatedTasks","counts","forEach","name","count","getStatusClass","getCircleClass","toggleSubTask","taskId","subTaskId","currentTask","currentSubTask","sub","handleTaskCreated","handleCancel","openCommentPage","closeCommentPage","handleSprintChange","sprintId","handleTabChange","tab","handleUserChange","userId","children","onSprintChange","onTabChange","onUserChange","fileName","_jsxFileName","lineNumber","columnNumber","group","toString","padStart","icon","tag","src","alt","onError","onClick","style","cursor","subTask","index","e","stopPropagation","opacity","onTaskCreated","onCancel","onClose","_c","$RefreshReg$"],"sources":["D:/ITSS_Project/frontend/src/components/task/KanbanView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./KanbanView.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fetchTasks, updateChecklistItem, fetchProjects, fetchSprints, fetchTeamDetails } from \"../../services/api-client\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskCommentPage from \"./TaskCommentPage\";\r\nimport TeamHeader from \"../TeamHeader/TeamHeader\";\r\nimport { filterTasksByUser } from \"./UserFilter\";\r\n\r\nexport const KanbanView = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const [reportData, setReportData] = useState([]);\r\n  const [openTaskId, setOpenTaskId] = useState(null);\r\n  const [showCreateTask, setShowCreateTask] = useState(false);\r\n  const [showCommentPage, setShowCommentPage] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n  const [sprints, setSprints] = useState([]);\r\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(\"Team task\");\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [teamDetails, setTeamDetails] = useState({\r\n    className: \"\",\r\n    classCode: \"\",\r\n    teamName: \"\",\r\n    projectName: \"\",\r\n    members: [],\r\n    isTeamLead: false,\r\n  });\r\n\r\n  const currentUserId = 1;\r\n  const projectId = 1;\r\n\r\n  const loadTeamDetails = useCallback(async () => {\r\n    try {\r\n      const data = await fetchTeamDetails(projectId, currentUserId);\r\n      console.log(\"Fetched team details:\", data);\r\n\r\n      // Map members to include avatar paths\r\n      const membersWithAvatars = data.members.map(member => {\r\n        const avatarPath = `/assets/images/avatars/${member.username.toLowerCase()}.jpg`;\r\n        console.log(`Avatar path for user ${member.username}: ${avatarPath}`);\r\n        return {\r\n          user_id: member.user_id,\r\n          username: member.username,\r\n          avatar: avatarPath,\r\n        };\r\n      });\r\n\r\n      setTeamDetails({\r\n        className: data.className || \"Unknown Class\",\r\n        classCode: data.classCode || \"Unknown Code\",\r\n        teamName: data.teamName || \"Unknown Team\",\r\n        projectName: data.projectName || \"Unknown Project\",\r\n        members: membersWithAvatars,\r\n        isTeamLead: data.isTeamLead || false,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching team details:\", error);\r\n      setTeamDetails({\r\n        className: \"Error Loading Class\",\r\n        classCode: \"ERROR\",\r\n        teamName: \"Error Loading Team\",\r\n        projectName: \"Error Loading Project\",\r\n        members: [],\r\n        isTeamLead: false,\r\n      });\r\n    }\r\n  }, [projectId, currentUserId]);\r\n\r\n  const loadProjectsAndSprints = useCallback(async () => {\r\n    try {\r\n      const projectData = await fetchProjects();\r\n      console.log(\"Fetched projects:\", projectData);\r\n      setProjects(projectData);\r\n\r\n      const sprintData = await fetchSprints();\r\n      console.log(\"Fetched sprints:\", sprintData);\r\n\r\n      const filteredSprints = sprintData.filter(sprint => sprint.project_id === projectId);\r\n      console.log(\"Filtered sprints for project_id =\", projectId, \":\", filteredSprints);\r\n\r\n      setSprints(filteredSprints);\r\n      if (filteredSprints.length > 0) {\r\n        setSelectedSprintId(filteredSprints[0].sprint_id);\r\n      } else {\r\n        setSelectedSprintId(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching projects and sprints:\", error);\r\n    }\r\n  }, [projectId]);\r\n\r\n  const loadTasks = useCallback(async () => {\r\n    try {\r\n      const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\r\n      const data = await fetchTasks(mode);\r\n      console.log(`Fetched tasks (mode=${mode}):`, data);\r\n\r\n      const currentDate = new Date('2025-05-21');\r\n\r\n      const mappedTasks = data\r\n        .filter(task => {\r\n          console.log(\"Filtering task with sprint_id:\", task.sprint_id, \"against selectedSprintId:\", selectedSprintId);\r\n          if (!selectedSprintId) return true;\r\n          return task.sprint_id === selectedSprintId;\r\n        })\r\n        .map((task) => {\r\n          const assignedMember = teamDetails.members.find(member => member.user_id === task.assigned_to);\r\n          const avatarPath = `/assets/images/avatars/${assignedMember?.username.toLowerCase() || \"placeholder-member\"}.jpg`;\r\n          console.log(`Task ID ${task.task_id} assigned to ${task.assigned_to}, Avatar path: ${avatarPath}`);\r\n          return {\r\n            id: task.task_id,\r\n            title: task.title,\r\n            date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"\",\r\n            time: task.due_date\r\n              ? new Date(task.due_date).toLocaleTimeString([], {\r\n                  hour: \"2-digit\",\r\n                  minute: \"2-digit\",\r\n                })\r\n              : \"\",\r\n            tags: [\"SQL\", \"Backend\"],\r\n            avatar: avatarPath,\r\n            comments: task.comment_count || 0,\r\n            subTasks: task.checklists && task.checklists.length > 0\r\n              ? task.checklists.map((checklist) => ({\r\n                  id: checklist.checklist_id,\r\n                  text: checklist.item_description,\r\n                  completed: checklist.is_completed,\r\n                }))\r\n              : [],\r\n            status: task.status\r\n              .toLowerCase()\r\n              .replace(\"to-do\", \"to-do\")\r\n              .replace(\"in-progress\", \"in-progress\")\r\n              .replace(\"completed\", \"done\"),\r\n            overdue:\r\n              task.due_date &&\r\n              new Date(task.due_date) < currentDate &&\r\n              task.status !== \"Completed\",\r\n            progress_percentage: task.progress_percentage || 0,\r\n            assigned_to: task.assigned_to,\r\n            sprint_id: task.sprint_id,\r\n            due_date: task.due_date ? new Date(task.due_date) : null,\r\n          };\r\n        })\r\n        .sort((a, b) => {\r\n          if (a.status === \"done\" && b.status !== \"done\") return 1;\r\n          if (b.status === \"done\" && a.status !== \"done\") return -1;\r\n          if (a.status === \"done\" && b.status === \"done\") {\r\n            if (!a.due_date && !b.due_date) return 0;\r\n            if (!a.due_date) return 1;\r\n            if (!b.due_date) return -1;\r\n            return a.due_date - b.due_date;\r\n          }\r\n          if (!a.due_date && !b.due_date) return 0;\r\n          if (!a.due_date) return 1;\r\n          if (!b.due_date) return -1;\r\n          return a.due_date - b.due_date;\r\n        });\r\n\r\n      console.log(\"Mapped and sorted tasks:\", mappedTasks);\r\n      setTasks(mappedTasks);\r\n      const filtered = filterTasksByUser(mappedTasks, selectedUserId);\r\n      setFilteredTasks(filtered);\r\n      updateReportData(filtered);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  }, [activeTab, selectedSprintId, selectedUserId, teamDetails.members]);\r\n\r\n  useEffect(() => {\r\n    loadTeamDetails();\r\n  }, [loadTeamDetails]);\r\n\r\n  useEffect(() => {\r\n    loadProjectsAndSprints();\r\n  }, [loadProjectsAndSprints]);\r\n\r\n  useEffect(() => {\r\n    if (teamDetails.members.length > 0) {\r\n      loadTasks();\r\n    }\r\n  }, [loadTasks, teamDetails.members]);\r\n\r\n  const updateReportData = (updatedTasks) => {\r\n    const counts = { \"to-do\": 0, \"in-progress\": 0, \"done\": 0 };\r\n    updatedTasks.forEach((task) => {\r\n      counts[task.status]++;\r\n    });\r\n\r\n    setReportData([\r\n      { id: 1, name: \"To-Do\", status: \"to-do\", count: counts[\"to-do\"] },\r\n      { id: 2, name: \"In-progress\", status: \"in-progress\", count: counts[\"in-progress\"] },\r\n      { id: 3, name: \"Done\", status: \"done\", count: counts[\"done\"] },\r\n    ]);\r\n  };\r\n\r\n  const getStatusClass = (status, overdue) => {\r\n    if (status === \"done\") return \"report-status-completed\";\r\n    if (overdue) return \"report-status-overdue\";\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"report-status-to-do\";\r\n      case \"in-progress\":\r\n        return \"report-status-in-progress\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getCircleClass = (status) => {\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"circle-to-do\";\r\n      case \"in-progress\":\r\n        return \"circle-in-progress\";\r\n      case \"done\":\r\n        return \"circle-completed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const toggleSubTask = async (taskId, subTaskId) => {\r\n    try {\r\n      const currentTask = tasks.find((task) => task.id === taskId);\r\n      const currentSubTask = currentTask.subTasks.find((sub) => sub.id === subTaskId);\r\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\r\n      await loadTasks();\r\n    } catch (error) {\r\n      console.error(\"Error updating subtask:\", error);\r\n    }\r\n  };\r\n\r\n  const handleTaskCreated = () => {\r\n    loadTasks();\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const openCommentPage = (taskId) => {\r\n    setShowCommentPage(taskId);\r\n  };\r\n\r\n  const closeCommentPage = () => {\r\n    setShowCommentPage(null);\r\n    loadTasks();\r\n  };\r\n\r\n  const handleSprintChange = async (sprintId) => {\r\n    console.log(\"Selected sprint ID in KanbanView:\", sprintId);\r\n    setSelectedSprintId(sprintId);\r\n    await loadTasks();\r\n  };\r\n\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const handleUserChange = (userId) => {\r\n    setSelectedUserId(userId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      <TeamHeader\r\n        className={teamDetails.className}\r\n        classCode={teamDetails.classCode}\r\n        teamName={teamDetails.teamName}\r\n        projectName={teamDetails.projectName}\r\n        members={teamDetails.members}\r\n        activeTab={activeTab}\r\n        sprints={sprints}\r\n        selectedSprintId={selectedSprintId}\r\n        onSprintChange={handleSprintChange}\r\n        onTabChange={handleTabChange}\r\n        onUserChange={handleUserChange}\r\n      />\r\n      <div className=\"report-grid\">\r\n        {sprints.length === 0 && (\r\n          <div>No sprints available for this project.</div>\r\n        )}\r\n        {reportData.map((group) => (\r\n          <div key={group.id} className=\"status-block\">\r\n            <div className=\"column-header\">\r\n              <h3 className=\"h3\">\r\n                {group.name}{\" \"}\r\n                <span className=\"count-text\">\r\n                  ({group.count.toString().padStart(2, \"0\")})\r\n                </span>\r\n              </h3>\r\n              <span\r\n                className={`status-circle ${getCircleClass(group.status)}`}\r\n              ></span>\r\n            </div>\r\n            {filteredTasks\r\n              .filter((task) => task.status === group.status)\r\n              .map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className={`report-card ${getStatusClass(\r\n                    task.status,\r\n                    task.overdue\r\n                  )}`}\r\n                >\r\n                  <div className=\"report-card-header\">\r\n                    <div className=\"header-left\">\r\n                      <h4 className=\"body_1\">{task.title}</h4>\r\n                      <div className=\"task-meta\">\r\n                        {task.status === \"done\" && (\r\n                          <span className=\"completed-label\">Completed </span>\r\n                        )}\r\n                        {task.date}\r\n                        <span className=\"date-time-space\"></span>\r\n                        {(task.status === \"to-do\" ||\r\n                          task.status === \"in-progress\") &&\r\n                          task.time && (\r\n                            <span className=\"time-with-clock\">\r\n                              <FontAwesomeIcon\r\n                                icon={faClock}\r\n                                className=\"clock-icon\"\r\n                              />\r\n                              {task.time}\r\n                            </span>\r\n                          )}\r\n                        {task.status === \"done\" && task.time && (\r\n                          <span>{task.time}</span>\r\n                        )}\r\n                        <span className=\"progress-text\">\r\n                          {\" \"} - Progress: {task.progress_percentage}%\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"task-tags\">\r\n                    {task.tags.map((tag) => (\r\n                      <span key={tag} className={`tag ${tag.toLowerCase()}`}>\r\n                        {tag}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"task-info\">\r\n                    <img src={task.avatar} alt=\"avatar\" className=\"task-avatar\" onError={() => console.log(`Failed to load avatar for task ${task.id}: ${task.avatar}`)} />\r\n                    <div className=\"task-actions body_2\">\r\n                      <span\r\n                        className=\"task-action-item\"\r\n                        onClick={() => setOpenTaskId(openTaskId === task.id ? null : task.id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {task.subTasks.length} <FontAwesomeIcon icon={faClipboard} />\r\n                      </span>\r\n                      <span\r\n                        className=\"task-action-item\"\r\n                        onClick={() => openCommentPage(task.id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {task.comments} <FontAwesomeIcon icon={faComment} />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {openTaskId === task.id && (\r\n                    <>\r\n                      <div className=\"divider active\"></div>\r\n                      <div className=\"task-subtasks active\">\r\n                        {task.subTasks.length === 0 ? (\r\n                          <div className=\"no-subtask-message\">No subtask</div>\r\n                        ) : (\r\n                          task.subTasks.map((subTask, index) => (\r\n                            <div key={subTask.id}>\r\n                              <div className=\"subtask\">\r\n                                <span className=\"subtask-icon\">\r\n                                  <span></span>\r\n                                  <div></div>\r\n                                </span>\r\n                                <span className=\"subtask-count\">{index + 1}.</span>\r\n                                <span className=\"subtask-text\">{subTask.text}</span>\r\n                                <span\r\n                                  className={`subtask-status ${\r\n                                    subTask.completed ? \"completed\" : \"\"\r\n                                  }`}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    if (task.assigned_to === currentUserId && teamDetails.isTeamLead) {\r\n                                      toggleSubTask(task.id, subTask.id);\r\n                                    }\r\n                                  }}\r\n                                  style={{\r\n                                    cursor: task.assigned_to === currentUserId && teamDetails.isTeamLead ? \"pointer\" : \"not-allowed\",\r\n                                    opacity: task.assigned_to === currentUserId && teamDetails.isTeamLead ? 1 : 0.5,\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon\r\n                                    icon={\r\n                                      subTask.completed ? fasCheckCircle : farCircle\r\n                                    }\r\n                                  />\r\n                                </span>\r\n                              </div>\r\n                              {index !== task.subTasks.length - 1 && (\r\n                                <div className=\"divider active\"></div>\r\n                              )}\r\n                            </div>\r\n                          ))\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            {group.status === \"to-do\" && teamDetails.isTeamLead && (\r\n              <div className=\"add-task-btn-container\">\r\n                <button\r\n                  onClick={() => setShowCreateTask(!showCreateTask)}\r\n                  className=\"add-task-btn\"\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> Add Task\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {showCreateTask && (\r\n          <div className=\"modal-backdrop\">\r\n            <div className=\"modal-content\">\r\n              <CreateTask\r\n                onTaskCreated={handleTaskCreated}\r\n                onCancel={handleCancel}\r\n                selectedSprintId={selectedSprintId}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showCommentPage && (\r\n          <TaskCommentPage taskId={showCommentPage} onClose={closeCommentPage} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}