{"ast":null,"code":"// frontend/src/services/api-client.js\nconst API_BASE_URL = \"http://localhost:5000\"; // Adjust to your backend URL\n\nexport const fetchTasks = async () => {\n  const response = await fetch(`${API_BASE_URL}/api/tasks`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch tasks\");\n  }\n  return response.json();\n};\nexport const updateChecklistItem = async (checklistId, isCompleted) => {\n  const response = await fetch(`${API_BASE_URL}/api/task-checklists/${checklistId}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      is_completed: isCompleted\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to update checklist item\");\n  }\n  return response.json();\n};\nexport const createTask = async taskData => {\n  const response = await fetch(`${API_BASE_URL}/api/tasks`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(taskData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create task\");\n  }\n  return response.json();\n};\nexport const fetchProjects = async () => {\n  const response = await fetch(`${API_BASE_URL}/api/projects`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch projects\");\n  }\n  return response.json();\n};\nexport const fetchSprints = async () => {\n  const response = await fetch(`${API_BASE_URL}/api/sprints`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch sprints\");\n  }\n  return response.json();\n};\n\n// Fetch task details including subtasks and comments\nexport const fetchTaskDetails = async taskId => {\n  const response = await fetch(`${API_BASE_URL}/api/tasks/${taskId}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch task details\");\n  }\n  return response.json();\n};\n\n// Add a new comment\nexport const addComment = async (taskId, userId, commentText) => {\n  const response = await fetch(`${API_BASE_URL}/api/comments`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      task_id: taskId,\n      user_id: userId,\n      comment_text: commentText\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to add comment\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","fetchTasks","response","fetch","method","headers","ok","Error","json","updateChecklistItem","checklistId","isCompleted","body","JSON","stringify","is_completed","createTask","taskData","fetchProjects","fetchSprints","fetchTaskDetails","taskId","addComment","userId","commentText","task_id","user_id","comment_text"],"sources":["D:/ITSS_Project/frontend/src/services/api-client.js"],"sourcesContent":["// frontend/src/services/api-client.js\r\nconst API_BASE_URL = \"http://localhost:5000\"; // Adjust to your backend URL\r\n\r\nexport const fetchTasks = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/api/tasks`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch tasks\");\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const updateChecklistItem = async (checklistId, isCompleted) => {\r\n  const response = await fetch(\r\n    `${API_BASE_URL}/api/task-checklists/${checklistId}`,\r\n    {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ is_completed: isCompleted }),\r\n    }\r\n  );\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to update checklist item\");\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const createTask = async (taskData) => {\r\n  const response = await fetch(`${API_BASE_URL}/api/tasks`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(taskData),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to create task\");\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const fetchProjects = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/api/projects`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch projects\");\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const fetchSprints = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/api/sprints`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch sprints\");\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Fetch task details including subtasks and comments\r\nexport const fetchTaskDetails = async (taskId) => {\r\n  const response = await fetch(`${API_BASE_URL}/api/tasks/${taskId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch task details\");\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Add a new comment\r\nexport const addComment = async (taskId, userId, commentText) => {\r\n  const response = await fetch(`${API_BASE_URL}/api/comments`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      task_id: taskId,\r\n      user_id: userId,\r\n      comment_text: commentText,\r\n    }),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to add comment\");\r\n  }\r\n  return response.json();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}