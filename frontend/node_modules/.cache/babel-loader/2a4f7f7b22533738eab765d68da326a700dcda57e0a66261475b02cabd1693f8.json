{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITSS_Project\\\\frontend\\\\src\\\\components\\\\task\\\\ProjectManagerKanban.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/task/ProjectManagerKanban.js\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./KanbanView.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchTasks, updateChecklistItem, fetchProjects, fetchSprints } from \"../../services/api-client\";\nimport CreateTask from \"./CreateTask\";\nimport TaskCommentPage from \"./TaskCommentPage\";\nimport TeamHeader from \"./TeamHeader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProjectManagerKanban = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [reportData, setReportData] = useState([]);\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const [showCreateTask, setShowCreateTask] = useState(false);\n  const [showCommentPage, setShowCommentPage] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [sprints, setSprints] = useState([]);\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"Team task\");\n  const className = \"Class A\";\n  const classCode = \"ABC123\";\n  const teamName = \"Group 1\";\n  const projectName = projects.length > 0 ? projects[0].project_name : \"Project 1\";\n  const members = [{\n    user_id: 1,\n    username: \"user1\",\n    avatar: \"https://i.pravatar.cc/24?img=1\"\n  }, {\n    user_id: 2,\n    username: \"user2\",\n    avatar: \"https://i.pravatar.cc/24?img=2\"\n  }, {\n    user_id: 3,\n    username: \"user3\",\n    avatar: \"https://i.pravatar.cc/24?img=3\"\n  }, {\n    user_id: 4,\n    username: \"user4\",\n    avatar: \"https://i.pravatar.cc/24?img=4\"\n  }];\n  const currentUserId = 1;\n  const isTeamLead = true;\n  const loadProjectsAndSprints = useCallback(async () => {\n    try {\n      const projectData = await fetchProjects();\n      console.log(\"Fetched projects:\", projectData);\n      setProjects(projectData);\n      const sprintData = await fetchSprints();\n      console.log(\"Fetched sprints:\", sprintData);\n      setSprints(sprintData);\n      if (sprintData.length > 0) {\n        setSelectedSprintId(sprintData[0].sprint_id);\n      }\n    } catch (error) {\n      console.error(\"Error fetching projects and sprints:\", error);\n    }\n  }, []);\n  const loadTasks = useCallback(async () => {\n    if (!selectedSprintId) return; // Wait until a sprint is selected\n    try {\n      const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\n      const data = await fetchTasks(mode);\n      console.log(`Fetched tasks (mode=${mode}):`, data);\n      // Filter tasks by selected sprint\n      const filteredTasks = data.filter(task => task.sprint_id === parseInt(selectedSprintId));\n      console.log(`Filtered tasks for sprint ${selectedSprintId}:`, filteredTasks);\n      const mappedTasks = filteredTasks.map(task => {\n        var _task$status, _task$status$toLowerC, _task$status$toLowerC2, _task$status$toLowerC3;\n        return {\n          id: task.task_id,\n          title: task.title || \"Untitled Task\",\n          // Default title if missing\n          date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"No due date\",\n          time: task.due_date ? new Date(task.due_date).toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          }) : \"\",\n          tags: [\"SQL\", \"Backend\"],\n          // Ensure tags are always present\n          avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\n          comments: task.comment_count || 0,\n          subTasks: task.checklists && task.checklists.length > 0 ? task.checklists.map(checklist => ({\n            id: checklist.checklist_id,\n            text: checklist.item_description || \"No description\",\n            completed: checklist.is_completed || false\n          })) : [],\n          status: ((_task$status = task.status) === null || _task$status === void 0 ? void 0 : (_task$status$toLowerC = _task$status.toLowerCase()) === null || _task$status$toLowerC === void 0 ? void 0 : (_task$status$toLowerC2 = _task$status$toLowerC.replace(\"to-do\", \"to-do\")) === null || _task$status$toLowerC2 === void 0 ? void 0 : (_task$status$toLowerC3 = _task$status$toLowerC2.replace(\"in-progress\", \"in-progress\")) === null || _task$status$toLowerC3 === void 0 ? void 0 : _task$status$toLowerC3.replace(\"completed\", \"done\")) || \"to-do\",\n          // Default to \"to-do\" if status is missing\n          overdue: task.due_date && new Date(task.due_date) < new Date() && task.status !== \"Completed\",\n          progress_percentage: task.progress_percentage || 0,\n          assigned_to: task.assigned_to || null,\n          sprint_id: task.sprint_id\n        };\n      });\n      console.log(\"Mapped tasks with details:\", mappedTasks);\n      setTasks(mappedTasks);\n      updateReportData(mappedTasks);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  }, [activeTab, selectedSprintId]);\n  const updateReportData = updatedTasks => {\n    const counts = {\n      \"to-do\": 0,\n      \"in-progress\": 0,\n      \"done\": 0\n    };\n    updatedTasks.forEach(task => {\n      counts[task.status]++;\n    });\n\n    // Only set reportData if there are tasks\n    if (updatedTasks.length > 0) {\n      setReportData([{\n        id: 1,\n        name: \"To-Do\",\n        status: \"to-do\",\n        count: counts[\"to-do\"]\n      }, {\n        id: 2,\n        name: \"In-progress\",\n        status: \"in-progress\",\n        count: counts[\"in-progress\"]\n      }, {\n        id: 3,\n        name: \"Done\",\n        status: \"done\",\n        count: counts[\"done\"]\n      }]);\n    } else {\n      setReportData([]); // Clear reportData if no tasks\n    }\n  };\n  const getStatusClass = (status, overdue) => {\n    if (status === \"done\") return \"report-status-completed\";\n    if (overdue) return \"report-status-overdue\";\n    switch (status) {\n      case \"to-do\":\n        return \"report-status-to-do\";\n      case \"in-progress\":\n        return \"report-status-in-progress\";\n      default:\n        return \"\";\n    }\n  };\n  const getCircleClass = status => {\n    switch (status) {\n      case \"to-do\":\n        return \"circle-to-do\";\n      case \"in-progress\":\n        return \"circle-in-progress\";\n      case \"done\":\n        return \"circle-completed\";\n      default:\n        return \"\";\n    }\n  };\n  const toggleSubTask = async (taskId, subTaskId) => {\n    try {\n      const currentTask = tasks.find(task => task.id === taskId);\n      const currentSubTask = currentTask.subTasks.find(sub => sub.id === subTaskId);\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\n      await loadTasks();\n    } catch (error) {\n      console.error(\"Error updating subtask:\", error);\n    }\n  };\n  const handleTaskCreated = () => {\n    loadTasks();\n    setShowCreateTask(false);\n  };\n  const handleCancel = () => {\n    setShowCreateTask(false);\n  };\n  const openCommentPage = taskId => {\n    setShowCommentPage(taskId);\n  };\n  const closeCommentPage = () => {\n    setShowCommentPage(null);\n    loadTasks();\n  };\n  const handleSprintChange = sprint => {\n    setSelectedSprintId(sprint.sprint_id);\n    // loadTasks will be triggered by useEffect due to selectedSprintId dependency\n  };\n  const handleTabChange = tab => {\n    // Only handle \"Team task\" and \"My task\" tabs\n    if (tab === \"Team task\" || tab === \"My task\") {\n      setActiveTab(tab);\n      // loadTasks will be triggered by useEffect due to activeTab dependency\n    }\n    // Ignore other tabs (Team info, Project info, Files, Grade) to prevent errors\n  };\n  if (!selectedSprintId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Kanban board... Please select a sprint.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(TeamHeader, {\n      className: className,\n      classCode: classCode,\n      teamName: teamName,\n      projectName: projectName,\n      members: members,\n      activeTab: activeTab,\n      sprints: sprints,\n      selectedSprintId: selectedSprintId,\n      onSprintChange: handleSprintChange,\n      onTabChange: handleTabChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-grid\",\n      children: [reportData.length > 0 && reportData.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"h3\",\n            children: [group.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count-text\",\n              children: [\"(\", group.count.toString().padStart(2, \"0\"), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-circle ${getCircleClass(group.status)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.status === group.status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `report-card ${getStatusClass(task.status, task.overdue)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"body_1\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: [task.status === \"done\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-label\",\n                  children: \"Completed \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 27\n                }, this), task.date, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-time-space\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 25\n                }, this), (task.status === \"to-do\" || task.status === \"in-progress\") && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-with-clock\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faClock,\n                    className: \"clock-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 31\n                  }, this), task.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 29\n                }, this), task.status === \"done\" && task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: task.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress-text\",\n                  children: [\" \", \"- Progress: \", task.progress_percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-tags\",\n            children: task.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `tag ${tag.toLowerCase()}`,\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: task.avatar,\n              alt: \"avatar\",\n              className: \"task-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions body_2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => setOpenTaskId(openTaskId === task.id ? null : task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.subTasks.length, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faClipboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-action-item\",\n                onClick: () => openCommentPage(task.id),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [task.comments, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this), openTaskId === task.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divider active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-subtasks active\",\n              children: task.subTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-subtask-message\",\n                children: \"No subtask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 27\n              }, this) : task.subTasks.map((subTask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subtask\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-count\",\n                    children: [index + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"subtask-text\",\n                    children: subTask.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `subtask-status ${subTask.completed ? \"completed\" : \"\"}`,\n                    onClick: e => {\n                      e.stopPropagation();\n                      if (task.assigned_to === currentUserId) {\n                        toggleSubTask(task.id, subTask.id);\n                      }\n                    },\n                    style: {\n                      cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\n                      opacity: task.assigned_to === currentUserId ? 1 : 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: subTask.completed ? fasCheckCircle : farCircle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 31\n                }, this), index !== task.subTasks.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"divider active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 33\n                }, this)]\n              }, subTask.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this)), group.status === \"to-do\" && isTeamLead && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateTask(!showCreateTask),\n            className: \"add-task-btn\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), \" Add Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this)]\n      }, group.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)), showCreateTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(CreateTask, {\n            onTaskCreated: handleTaskCreated,\n            onCancel: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), showCommentPage && /*#__PURE__*/_jsxDEV(TaskCommentPage, {\n        taskId: showCommentPage,\n        onClose: closeCommentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectManagerKanban, \"H60OFzQ6bSkfvYxAiG3uBLhEZ6E=\");\n_c = ProjectManagerKanban;\nexport default ProjectManagerKanban;\nvar _c;\n$RefreshReg$(_c, \"ProjectManagerKanban\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FontAwesomeIcon","faCheckCircle","fasCheckCircle","faCircle","farCircle","faClipboard","faComment","faClock","faPlus","fetchTasks","updateChecklistItem","fetchProjects","fetchSprints","CreateTask","TaskCommentPage","TeamHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectManagerKanban","_s","tasks","setTasks","reportData","setReportData","openTaskId","setOpenTaskId","showCreateTask","setShowCreateTask","showCommentPage","setShowCommentPage","projects","setProjects","sprints","setSprints","selectedSprintId","setSelectedSprintId","activeTab","setActiveTab","className","classCode","teamName","projectName","length","project_name","members","user_id","username","avatar","currentUserId","isTeamLead","loadProjectsAndSprints","projectData","console","log","sprintData","sprint_id","error","loadTasks","mode","data","filteredTasks","filter","task","parseInt","mappedTasks","map","_task$status","_task$status$toLowerC","_task$status$toLowerC2","_task$status$toLowerC3","id","task_id","title","date","due_date","Date","toLocaleDateString","time","toLocaleTimeString","hour","minute","tags","assigned_to","comments","comment_count","subTasks","checklists","checklist","checklist_id","text","item_description","completed","is_completed","status","toLowerCase","replace","overdue","progress_percentage","updateReportData","updatedTasks","counts","forEach","name","count","getStatusClass","getCircleClass","toggleSubTask","taskId","subTaskId","currentTask","find","currentSubTask","sub","handleTaskCreated","handleCancel","openCommentPage","closeCommentPage","handleSprintChange","sprint","handleTabChange","tab","children","fileName","_jsxFileName","lineNumber","columnNumber","onSprintChange","onTabChange","group","toString","padStart","icon","tag","src","alt","onClick","style","cursor","subTask","index","e","stopPropagation","opacity","onTaskCreated","onCancel","onClose","_c","$RefreshReg$"],"sources":["D:/ITSS_Project/frontend/src/components/task/ProjectManagerKanban.js"],"sourcesContent":["// frontend/src/components/task/ProjectManagerKanban.js\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./KanbanView.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle as fasCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCircle as farCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fetchTasks, updateChecklistItem, fetchProjects, fetchSprints } from \"../../services/api-client\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskCommentPage from \"./TaskCommentPage\";\r\nimport TeamHeader from \"./TeamHeader\";\r\n\r\nexport const ProjectManagerKanban = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [reportData, setReportData] = useState([]);\r\n  const [openTaskId, setOpenTaskId] = useState(null);\r\n  const [showCreateTask, setShowCreateTask] = useState(false);\r\n  const [showCommentPage, setShowCommentPage] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n  const [sprints, setSprints] = useState([]);\r\n  const [selectedSprintId, setSelectedSprintId] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(\"Team task\");\r\n\r\n  const className = \"Class A\";\r\n  const classCode = \"ABC123\";\r\n  const teamName = \"Group 1\";\r\n  const projectName = projects.length > 0 ? projects[0].project_name : \"Project 1\";\r\n  const members = [\r\n    { user_id: 1, username: \"user1\", avatar: \"https://i.pravatar.cc/24?img=1\" },\r\n    { user_id: 2, username: \"user2\", avatar: \"https://i.pravatar.cc/24?img=2\" },\r\n    { user_id: 3, username: \"user3\", avatar: \"https://i.pravatar.cc/24?img=3\" },\r\n    { user_id: 4, username: \"user4\", avatar: \"https://i.pravatar.cc/24?img=4\" },\r\n  ];\r\n\r\n  const currentUserId = 1;\r\n  const isTeamLead = true;\r\n\r\n  const loadProjectsAndSprints = useCallback(async () => {\r\n    try {\r\n      const projectData = await fetchProjects();\r\n      console.log(\"Fetched projects:\", projectData);\r\n      setProjects(projectData);\r\n      const sprintData = await fetchSprints();\r\n      console.log(\"Fetched sprints:\", sprintData);\r\n      setSprints(sprintData);\r\n      if (sprintData.length > 0) {\r\n        setSelectedSprintId(sprintData[0].sprint_id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching projects and sprints:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const loadTasks = useCallback(async () => {\r\n    if (!selectedSprintId) return; // Wait until a sprint is selected\r\n    try {\r\n      const mode = activeTab === \"Team task\" ? \"all\" : \"user\";\r\n      const data = await fetchTasks(mode);\r\n      console.log(`Fetched tasks (mode=${mode}):`, data);\r\n      // Filter tasks by selected sprint\r\n      const filteredTasks = data.filter(task => task.sprint_id === parseInt(selectedSprintId));\r\n      console.log(`Filtered tasks for sprint ${selectedSprintId}:`, filteredTasks);\r\n      const mappedTasks = filteredTasks.map((task) => ({\r\n        id: task.task_id,\r\n        title: task.title || \"Untitled Task\", // Default title if missing\r\n        date: task.due_date ? new Date(task.due_date).toLocaleDateString() : \"No due date\",\r\n        time: task.due_date\r\n          ? new Date(task.due_date).toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })\r\n          : \"\",\r\n        tags: [\"SQL\", \"Backend\"], // Ensure tags are always present\r\n        avatar: `https://i.pravatar.cc/24?img=${task.assigned_to || task.task_id}`,\r\n        comments: task.comment_count || 0,\r\n        subTasks: task.checklists && task.checklists.length > 0\r\n          ? task.checklists.map((checklist) => ({\r\n              id: checklist.checklist_id,\r\n              text: checklist.item_description || \"No description\",\r\n              completed: checklist.is_completed || false,\r\n            }))\r\n          : [],\r\n        status: task.status\r\n          ?.toLowerCase()\r\n          ?.replace(\"to-do\", \"to-do\")\r\n          ?.replace(\"in-progress\", \"in-progress\")\r\n          ?.replace(\"completed\", \"done\") || \"to-do\", // Default to \"to-do\" if status is missing\r\n        overdue:\r\n          task.due_date &&\r\n          new Date(task.due_date) < new Date() &&\r\n          task.status !== \"Completed\",\r\n        progress_percentage: task.progress_percentage || 0,\r\n        assigned_to: task.assigned_to || null,\r\n        sprint_id: task.sprint_id,\r\n      }));\r\n\r\n      console.log(\"Mapped tasks with details:\", mappedTasks);\r\n      setTasks(mappedTasks);\r\n      updateReportData(mappedTasks);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  }, [activeTab, selectedSprintId]);\r\n\r\n  const updateReportData = (updatedTasks) => {\r\n    const counts = { \"to-do\": 0, \"in-progress\": 0, \"done\": 0 };\r\n    updatedTasks.forEach((task) => {\r\n      counts[task.status]++;\r\n    });\r\n\r\n    // Only set reportData if there are tasks\r\n    if (updatedTasks.length > 0) {\r\n      setReportData([\r\n        { id: 1, name: \"To-Do\", status: \"to-do\", count: counts[\"to-do\"] },\r\n        { id: 2, name: \"In-progress\", status: \"in-progress\", count: counts[\"in-progress\"] },\r\n        { id: 3, name: \"Done\", status: \"done\", count: counts[\"done\"] },\r\n      ]);\r\n    } else {\r\n      setReportData([]); // Clear reportData if no tasks\r\n    }\r\n  };\r\n\r\n  const getStatusClass = (status, overdue) => {\r\n    if (status === \"done\") return \"report-status-completed\";\r\n    if (overdue) return \"report-status-overdue\";\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"report-status-to-do\";\r\n      case \"in-progress\":\r\n        return \"report-status-in-progress\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getCircleClass = (status) => {\r\n    switch (status) {\r\n      case \"to-do\":\r\n        return \"circle-to-do\";\r\n      case \"in-progress\":\r\n        return \"circle-in-progress\";\r\n      case \"done\":\r\n        return \"circle-completed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const toggleSubTask = async (taskId, subTaskId) => {\r\n    try {\r\n      const currentTask = tasks.find((task) => task.id === taskId);\r\n      const currentSubTask = currentTask.subTasks.find((sub) => sub.id === subTaskId);\r\n      await updateChecklistItem(subTaskId, !currentSubTask.completed);\r\n      await loadTasks();\r\n    } catch (error) {\r\n      console.error(\"Error updating subtask:\", error);\r\n    }\r\n  };\r\n\r\n  const handleTaskCreated = () => {\r\n    loadTasks();\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowCreateTask(false);\r\n  };\r\n\r\n  const openCommentPage = (taskId) => {\r\n    setShowCommentPage(taskId);\r\n  };\r\n\r\n  const closeCommentPage = () => {\r\n    setShowCommentPage(null);\r\n    loadTasks();\r\n  };\r\n\r\n  const handleSprintChange = (sprint) => {\r\n    setSelectedSprintId(sprint.sprint_id);\r\n    // loadTasks will be triggered by useEffect due to selectedSprintId dependency\r\n  };\r\n\r\n  const handleTabChange = (tab) => {\r\n    // Only handle \"Team task\" and \"My task\" tabs\r\n    if (tab === \"Team task\" || tab === \"My task\") {\r\n      setActiveTab(tab);\r\n      // loadTasks will be triggered by useEffect due to activeTab dependency\r\n    }\r\n    // Ignore other tabs (Team info, Project info, Files, Grade) to prevent errors\r\n  };\r\n\r\n  if (!selectedSprintId) {\r\n    return <div>Loading Kanban board... Please select a sprint.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      <TeamHeader\r\n        className={className}\r\n        classCode={classCode}\r\n        teamName={teamName}\r\n        projectName={projectName}\r\n        members={members}\r\n        activeTab={activeTab}\r\n        sprints={sprints}\r\n        selectedSprintId={selectedSprintId}\r\n        onSprintChange={handleSprintChange}\r\n        onTabChange={handleTabChange}\r\n      />\r\n      <div className=\"report-grid\">\r\n        {reportData.length > 0 && reportData.map((group) => (\r\n          <div key={group.id} className=\"status-block\">\r\n            <div className=\"column-header\">\r\n              <h3 className=\"h3\">\r\n                {group.name}{\" \"}\r\n                <span className=\"count-text\">\r\n                  ({group.count.toString().padStart(2, \"0\")})\r\n                </span>\r\n              </h3>\r\n              <span\r\n                className={`status-circle ${getCircleClass(group.status)}`}\r\n              ></span>\r\n            </div>\r\n            {tasks\r\n              .filter((task) => task.status === group.status)\r\n              .map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className={`report-card ${getStatusClass(\r\n                    task.status,\r\n                    task.overdue\r\n                  )}`}\r\n                >\r\n                  <div className=\"report-card-header\">\r\n                    <div className=\"header-left\">\r\n                      <h4 className=\"body_1\">{task.title}</h4>\r\n                      <div className=\"task-meta\">\r\n                        {task.status === \"done\" && (\r\n                          <span className=\"completed-label\">Completed </span>\r\n                        )}\r\n                        {task.date}\r\n                        <span className=\"date-time-space\"></span>\r\n                        {(task.status === \"to-do\" ||\r\n                          task.status === \"in-progress\") &&\r\n                          task.time && (\r\n                            <span className=\"time-with-clock\">\r\n                              <FontAwesomeIcon\r\n                                icon={faClock}\r\n                                className=\"clock-icon\"\r\n                              />\r\n                              {task.time}\r\n                            </span>\r\n                          )}\r\n                        {task.status === \"done\" && task.time && (\r\n                          <span>{task.time}</span>\r\n                        )}\r\n                        <span className=\"progress-text\">\r\n                          {\" \"}\r\n                          - Progress: {task.progress_percentage}%\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"task-tags\">\r\n                    {task.tags.map((tag) => (\r\n                      <span key={tag} className={`tag ${tag.toLowerCase()}`}>\r\n                        {tag}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"task-info\">\r\n                    <img src={task.avatar} alt=\"avatar\" className=\"task-avatar\" />\r\n                    <div className=\"task-actions body_2\">\r\n                      <span\r\n                        className=\"task-action-item\"\r\n                        onClick={() => setOpenTaskId(openTaskId === task.id ? null : task.id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {task.subTasks.length} <FontAwesomeIcon icon={faClipboard} />\r\n                      </span>\r\n                      <span\r\n                        className=\"task-action-item\"\r\n                        onClick={() => openCommentPage(task.id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {task.comments} <FontAwesomeIcon icon={faComment} />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {openTaskId === task.id && (\r\n                    <>\r\n                      <div className=\"divider active\"></div>\r\n                      <div className=\"task-subtasks active\">\r\n                        {task.subTasks.length === 0 ? (\r\n                          <div className=\"no-subtask-message\">No subtask</div>\r\n                        ) : (\r\n                          task.subTasks.map((subTask, index) => (\r\n                            <div key={subTask.id}>\r\n                              <div className=\"subtask\">\r\n                                <span className=\"subtask-icon\">\r\n                                  <span></span>\r\n                                  <div></div>\r\n                                </span>\r\n                                <span className=\"subtask-count\">{index + 1}.</span>\r\n                                <span className=\"subtask-text\">{subTask.text}</span>\r\n                                <span\r\n                                  className={`subtask-status ${\r\n                                    subTask.completed ? \"completed\" : \"\"\r\n                                  }`}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    if (task.assigned_to === currentUserId) {\r\n                                      toggleSubTask(task.id, subTask.id);\r\n                                    }\r\n                                  }}\r\n                                  style={{\r\n                                    cursor: task.assigned_to === currentUserId ? \"pointer\" : \"not-allowed\",\r\n                                    opacity: task.assigned_to === currentUserId ? 1 : 0.5,\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon\r\n                                    icon={\r\n                                      subTask.completed ? fasCheckCircle : farCircle\r\n                                    }\r\n                                  />\r\n                                </span>\r\n                              </div>\r\n                              {index !== task.subTasks.length - 1 && (\r\n                                <div className=\"divider active\"></div>\r\n                              )}\r\n                            </div>\r\n                          ))\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            {group.status === \"to-do\" && isTeamLead && (\r\n              <div className=\"add-task-btn-container\">\r\n                <button\r\n                  onClick={() => setShowCreateTask(!showCreateTask)}\r\n                  className=\"add-task-btn\"\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> Add Task\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {showCreateTask && (\r\n          <div className=\"modal-backdrop\">\r\n            <div className=\"modal-content\">\r\n              <CreateTask onTaskCreated={handleTaskCreated} onCancel={handleCancel} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showCommentPage && (\r\n          <TaskCommentPage taskId={showCommentPage} onClose={closeCommentPage} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectManagerKanban;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}